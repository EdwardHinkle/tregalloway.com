{"version":3,"file":"index.umd.js","sources":["../src/base64.ts","../../../node_modules/.pnpm/blurhash@1.1.4/node_modules/blurhash/dist/esm/base83.js","../../../node_modules/.pnpm/blurhash@1.1.4/node_modules/blurhash/dist/esm/utils.js","../../../node_modules/.pnpm/blurhash@1.1.4/node_modules/blurhash/dist/esm/error.js","../../../node_modules/.pnpm/blurhash@1.1.4/node_modules/blurhash/dist/esm/encode.js","../src/blurhash.ts","../src/css.ts","../../../node_modules/.pnpm/clone@2.1.2/node_modules/clone/clone.js","../../../node_modules/.pnpm/node-cache@5.1.2/node_modules/node-cache/lib/node_cache.js","../../../node_modules/.pnpm/node-cache@5.1.2/node_modules/node-cache/index.js","../../../node_modules/.pnpm/webidl-conversions@3.0.1/node_modules/webidl-conversions/lib/index.js","../../../node_modules/.pnpm/whatwg-url@5.0.0/node_modules/whatwg-url/lib/utils.js","../../../node_modules/.pnpm/tr46@0.0.3/node_modules/tr46/index.js","../../../node_modules/.pnpm/whatwg-url@5.0.0/node_modules/whatwg-url/lib/url-state-machine.js","../../../node_modules/.pnpm/whatwg-url@5.0.0/node_modules/whatwg-url/lib/URL-impl.js","../../../node_modules/.pnpm/whatwg-url@5.0.0/node_modules/whatwg-url/lib/URL.js","../../../node_modules/.pnpm/whatwg-url@5.0.0/node_modules/whatwg-url/lib/public-api.js","../../../node_modules/.pnpm/node-fetch@2.6.7/node_modules/node-fetch/lib/index.mjs","../../../node_modules/.pnpm/inherits@2.0.4/node_modules/inherits/inherits_browser.js","../../../node_modules/.pnpm/inherits@2.0.4/node_modules/inherits/inherits.js","../../../node_modules/.pnpm/queue@6.0.2/node_modules/queue/index.js","../../../node_modules/.pnpm/image-size@1.0.0/node_modules/image-size/dist/types/bmp.js","../../../node_modules/.pnpm/image-size@1.0.0/node_modules/image-size/dist/types/ico.js","../../../node_modules/.pnpm/image-size@1.0.0/node_modules/image-size/dist/types/cur.js","../../../node_modules/.pnpm/image-size@1.0.0/node_modules/image-size/dist/types/dds.js","../../../node_modules/.pnpm/image-size@1.0.0/node_modules/image-size/dist/types/gif.js","../../../node_modules/.pnpm/image-size@1.0.0/node_modules/image-size/dist/types/icns.js","../../../node_modules/.pnpm/image-size@1.0.0/node_modules/image-size/dist/types/j2c.js","../../../node_modules/.pnpm/image-size@1.0.0/node_modules/image-size/dist/types/jp2.js","../../../node_modules/.pnpm/image-size@1.0.0/node_modules/image-size/dist/readUInt.js","../../../node_modules/.pnpm/image-size@1.0.0/node_modules/image-size/dist/types/jpg.js","../../../node_modules/.pnpm/image-size@1.0.0/node_modules/image-size/dist/types/ktx.js","../../../node_modules/.pnpm/image-size@1.0.0/node_modules/image-size/dist/types/png.js","../../../node_modules/.pnpm/image-size@1.0.0/node_modules/image-size/dist/types/pnm.js","../../../node_modules/.pnpm/image-size@1.0.0/node_modules/image-size/dist/types/psd.js","../../../node_modules/.pnpm/image-size@1.0.0/node_modules/image-size/dist/types/svg.js","../../../node_modules/.pnpm/image-size@1.0.0/node_modules/image-size/dist/types/tiff.js","../../../node_modules/.pnpm/image-size@1.0.0/node_modules/image-size/dist/types/webp.js","../../../node_modules/.pnpm/image-size@1.0.0/node_modules/image-size/dist/types.js","../../../node_modules/.pnpm/image-size@1.0.0/node_modules/image-size/dist/detector.js","../../../node_modules/.pnpm/image-size@1.0.0/node_modules/image-size/dist/index.js","../src/utils.ts","../src/get-image.ts","../src/svg.ts","../src/plaiceholder.ts","../src/types.ts"],"sourcesContent":["import type { IGetImageReturn } from \"./get-image\";\n\ntype TGetImageReturnBase64 = IGetImageReturn[\"optimizedForBase64\"];\n\nexport interface IGetBase64Options extends TGetImageReturnBase64 {}\nexport type TGetBase64Return = string;\n\nexport interface IGetBase64 {\n  (options: IGetBase64Options): TGetBase64Return;\n}\n\nexport const getBase64: IGetBase64 = ({ data, info }) =>\n  `data:image/${info.format};base64,${data.toString(\"base64\")}`;\n","const digitCharacters = [\n    \"0\",\n    \"1\",\n    \"2\",\n    \"3\",\n    \"4\",\n    \"5\",\n    \"6\",\n    \"7\",\n    \"8\",\n    \"9\",\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"E\",\n    \"F\",\n    \"G\",\n    \"H\",\n    \"I\",\n    \"J\",\n    \"K\",\n    \"L\",\n    \"M\",\n    \"N\",\n    \"O\",\n    \"P\",\n    \"Q\",\n    \"R\",\n    \"S\",\n    \"T\",\n    \"U\",\n    \"V\",\n    \"W\",\n    \"X\",\n    \"Y\",\n    \"Z\",\n    \"a\",\n    \"b\",\n    \"c\",\n    \"d\",\n    \"e\",\n    \"f\",\n    \"g\",\n    \"h\",\n    \"i\",\n    \"j\",\n    \"k\",\n    \"l\",\n    \"m\",\n    \"n\",\n    \"o\",\n    \"p\",\n    \"q\",\n    \"r\",\n    \"s\",\n    \"t\",\n    \"u\",\n    \"v\",\n    \"w\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"#\",\n    \"$\",\n    \"%\",\n    \"*\",\n    \"+\",\n    \",\",\n    \"-\",\n    \".\",\n    \":\",\n    \";\",\n    \"=\",\n    \"?\",\n    \"@\",\n    \"[\",\n    \"]\",\n    \"^\",\n    \"_\",\n    \"{\",\n    \"|\",\n    \"}\",\n    \"~\"\n];\nexport const decode83 = (str) => {\n    let value = 0;\n    for (let i = 0; i < str.length; i++) {\n        const c = str[i];\n        const digit = digitCharacters.indexOf(c);\n        value = value * 83 + digit;\n    }\n    return value;\n};\nexport const encode83 = (n, length) => {\n    var result = \"\";\n    for (let i = 1; i <= length; i++) {\n        let digit = (Math.floor(n) / Math.pow(83, length - i)) % 83;\n        result += digitCharacters[Math.floor(digit)];\n    }\n    return result;\n};\n//# sourceMappingURL=base83.js.map","export const sRGBToLinear = (value) => {\n    let v = value / 255;\n    if (v <= 0.04045) {\n        return v / 12.92;\n    }\n    else {\n        return Math.pow((v + 0.055) / 1.055, 2.4);\n    }\n};\nexport const linearTosRGB = (value) => {\n    let v = Math.max(0, Math.min(1, value));\n    if (v <= 0.0031308) {\n        return Math.round(v * 12.92 * 255 + 0.5);\n    }\n    else {\n        return Math.round((1.055 * Math.pow(v, 1 / 2.4) - 0.055) * 255 + 0.5);\n    }\n};\nexport const sign = (n) => (n < 0 ? -1 : 1);\nexport const signPow = (val, exp) => sign(val) * Math.pow(Math.abs(val), exp);\n//# sourceMappingURL=utils.js.map","export class ValidationError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = \"ValidationError\";\n        this.message = message;\n    }\n}\n//# sourceMappingURL=error.js.map","import { encode83 } from \"./base83\";\nimport { sRGBToLinear, signPow, linearTosRGB } from \"./utils\";\nimport { ValidationError } from \"./error\";\nconst bytesPerPixel = 4;\nconst multiplyBasisFunction = (pixels, width, height, basisFunction) => {\n    let r = 0;\n    let g = 0;\n    let b = 0;\n    const bytesPerRow = width * bytesPerPixel;\n    for (let x = 0; x < width; x++) {\n        for (let y = 0; y < height; y++) {\n            const basis = basisFunction(x, y);\n            r +=\n                basis * sRGBToLinear(pixels[bytesPerPixel * x + 0 + y * bytesPerRow]);\n            g +=\n                basis * sRGBToLinear(pixels[bytesPerPixel * x + 1 + y * bytesPerRow]);\n            b +=\n                basis * sRGBToLinear(pixels[bytesPerPixel * x + 2 + y * bytesPerRow]);\n        }\n    }\n    let scale = 1 / (width * height);\n    return [r * scale, g * scale, b * scale];\n};\nconst encodeDC = (value) => {\n    const roundedR = linearTosRGB(value[0]);\n    const roundedG = linearTosRGB(value[1]);\n    const roundedB = linearTosRGB(value[2]);\n    return (roundedR << 16) + (roundedG << 8) + roundedB;\n};\nconst encodeAC = (value, maximumValue) => {\n    let quantR = Math.floor(Math.max(0, Math.min(18, Math.floor(signPow(value[0] / maximumValue, 0.5) * 9 + 9.5))));\n    let quantG = Math.floor(Math.max(0, Math.min(18, Math.floor(signPow(value[1] / maximumValue, 0.5) * 9 + 9.5))));\n    let quantB = Math.floor(Math.max(0, Math.min(18, Math.floor(signPow(value[2] / maximumValue, 0.5) * 9 + 9.5))));\n    return quantR * 19 * 19 + quantG * 19 + quantB;\n};\nconst encode = (pixels, width, height, componentX, componentY) => {\n    if (componentX < 1 || componentX > 9 || componentY < 1 || componentY > 9) {\n        throw new ValidationError(\"BlurHash must have between 1 and 9 components\");\n    }\n    if (width * height * 4 !== pixels.length) {\n        throw new ValidationError(\"Width and height must match the pixels array\");\n    }\n    let factors = [];\n    for (let y = 0; y < componentY; y++) {\n        for (let x = 0; x < componentX; x++) {\n            const normalisation = x == 0 && y == 0 ? 1 : 2;\n            const factor = multiplyBasisFunction(pixels, width, height, (i, j) => normalisation *\n                Math.cos((Math.PI * x * i) / width) *\n                Math.cos((Math.PI * y * j) / height));\n            factors.push(factor);\n        }\n    }\n    const dc = factors[0];\n    const ac = factors.slice(1);\n    let hash = \"\";\n    let sizeFlag = componentX - 1 + (componentY - 1) * 9;\n    hash += encode83(sizeFlag, 1);\n    let maximumValue;\n    if (ac.length > 0) {\n        let actualMaximumValue = Math.max(...ac.map(val => Math.max(...val)));\n        let quantisedMaximumValue = Math.floor(Math.max(0, Math.min(82, Math.floor(actualMaximumValue * 166 - 0.5))));\n        maximumValue = (quantisedMaximumValue + 1) / 166;\n        hash += encode83(quantisedMaximumValue, 1);\n    }\n    else {\n        maximumValue = 1;\n        hash += encode83(0, 1);\n    }\n    hash += encode83(encodeDC(dc), 4);\n    ac.forEach(factor => {\n        hash += encode83(encodeAC(factor, maximumValue), 2);\n    });\n    return hash;\n};\nexport default encode;\n//# sourceMappingURL=encode.js.map","import { encode } from \"blurhash\";\nimport type { IGetImageReturn } from \"./get-image\";\n\ntype TGetImageReturnBlurhash = IGetImageReturn[\"optimizedForBlurhash\"];\n\nexport interface IGetBlurhashOptions extends TGetImageReturnBlurhash {}\n\nexport type IGetBlurhashReturn = {\n  hash: string;\n} & Record<\"width\" | \"height\", number>;\n\nexport interface IGetBlurhash {\n  (options: IGetBlurhashOptions): IGetBlurhashReturn;\n}\n\nexport const getBlurhash: IGetBlurhash = ({ data, info }) => {\n  const { width, height } = info;\n\n  const hash = encode(new Uint8ClampedArray(data), width, height, 4, 4);\n\n  return {\n    width,\n    height,\n    hash,\n  };\n};\n","import type { IGetImageReturn } from \"./get-image\";\n\ntype TGetImageReturnCSS = IGetImageReturn[\"optimizedForCSS\"];\n\nconst rgb = (channels: number[]) => `rgb(${channels.slice(0, 3).join(\",\")})`;\nconst rgba = (channels: number[]) =>\n  `rgba(${channels.slice(0, 3).join(\",\")},${(channels[3] / 255).toFixed(3)})`;\n\nexport interface IGetCSSOptions extends TGetImageReturnCSS {}\nexport interface IGetCSSReturn\n  extends Record<\n    | \"backgroundImage\"\n    | \"backgroundPosition\"\n    | \"backgroundSize\"\n    | \"backgroundRepeat\",\n    string\n  > {}\n\nexport interface IGetCSS {\n  (options: IGetCSSOptions): IGetCSSReturn;\n}\n\nexport const getCSS: IGetCSS = ({ info, rows }) => {\n  const linearGradients = rows.map((row) => {\n    const pixels = row.map((pixel) =>\n      pixel.length === 4 ? rgba(pixel) : rgb(pixel)\n    );\n\n    const gradient = pixels\n      .map((pixel, i) => {\n        const start = i === 0 ? \"\" : ` ${(i / pixels.length) * 100}%`;\n        const end =\n          i === pixels.length ? \"\" : ` ${((i + 1) / pixels.length) * 100}%`;\n\n        return `${pixel}${start}${end}`;\n      })\n      .join(\",\");\n\n    return `linear-gradient(90deg, ${gradient})`;\n  });\n\n  if (linearGradients.length !== info.height) {\n    console.error(\n      \"Woops! Something went wrong here and caused the color height to differ from the source height.\"\n    );\n  }\n\n  const backgroundPosition = linearGradients\n    .map((_, i) =>\n      i === 0 ? \"0 0 \" : `0 ${(i / (linearGradients.length - 1)) * 100}%`\n    )\n    .join(\",\");\n\n  const backgroundSize = `100% ${100 / linearGradients.length}%`;\n\n  return {\n    backgroundImage: linearGradients.join(\",\"),\n    backgroundPosition,\n    backgroundSize,\n    backgroundRepeat: \"no-repeat\",\n  };\n};\n","var clone = (function() {\n'use strict';\n\nfunction _instanceof(obj, type) {\n  return type != null && obj instanceof type;\n}\n\nvar nativeMap;\ntry {\n  nativeMap = Map;\n} catch(_) {\n  // maybe a reference error because no `Map`. Give it a dummy value that no\n  // value will ever be an instanceof.\n  nativeMap = function() {};\n}\n\nvar nativeSet;\ntry {\n  nativeSet = Set;\n} catch(_) {\n  nativeSet = function() {};\n}\n\nvar nativePromise;\ntry {\n  nativePromise = Promise;\n} catch(_) {\n  nativePromise = function() {};\n}\n\n/**\n * Clones (copies) an Object using deep copying.\n *\n * This function supports circular references by default, but if you are certain\n * there are no circular references in your object, you can save some CPU time\n * by calling clone(obj, false).\n *\n * Caution: if `circular` is false and `parent` contains circular references,\n * your program may enter an infinite loop and crash.\n *\n * @param `parent` - the object to be cloned\n * @param `circular` - set to true if the object to be cloned may contain\n *    circular references. (optional - true by default)\n * @param `depth` - set to a number if the object is only to be cloned to\n *    a particular depth. (optional - defaults to Infinity)\n * @param `prototype` - sets the prototype to be used when cloning an object.\n *    (optional - defaults to parent prototype).\n * @param `includeNonEnumerable` - set to true if the non-enumerable properties\n *    should be cloned as well. Non-enumerable properties on the prototype\n *    chain will be ignored. (optional - false by default)\n*/\nfunction clone(parent, circular, depth, prototype, includeNonEnumerable) {\n  if (typeof circular === 'object') {\n    depth = circular.depth;\n    prototype = circular.prototype;\n    includeNonEnumerable = circular.includeNonEnumerable;\n    circular = circular.circular;\n  }\n  // maintain two arrays for circular references, where corresponding parents\n  // and children have the same index\n  var allParents = [];\n  var allChildren = [];\n\n  var useBuffer = typeof Buffer != 'undefined';\n\n  if (typeof circular == 'undefined')\n    circular = true;\n\n  if (typeof depth == 'undefined')\n    depth = Infinity;\n\n  // recurse this function so we don't reset allParents and allChildren\n  function _clone(parent, depth) {\n    // cloning null always returns null\n    if (parent === null)\n      return null;\n\n    if (depth === 0)\n      return parent;\n\n    var child;\n    var proto;\n    if (typeof parent != 'object') {\n      return parent;\n    }\n\n    if (_instanceof(parent, nativeMap)) {\n      child = new nativeMap();\n    } else if (_instanceof(parent, nativeSet)) {\n      child = new nativeSet();\n    } else if (_instanceof(parent, nativePromise)) {\n      child = new nativePromise(function (resolve, reject) {\n        parent.then(function(value) {\n          resolve(_clone(value, depth - 1));\n        }, function(err) {\n          reject(_clone(err, depth - 1));\n        });\n      });\n    } else if (clone.__isArray(parent)) {\n      child = [];\n    } else if (clone.__isRegExp(parent)) {\n      child = new RegExp(parent.source, __getRegExpFlags(parent));\n      if (parent.lastIndex) child.lastIndex = parent.lastIndex;\n    } else if (clone.__isDate(parent)) {\n      child = new Date(parent.getTime());\n    } else if (useBuffer && Buffer.isBuffer(parent)) {\n      if (Buffer.allocUnsafe) {\n        // Node.js >= 4.5.0\n        child = Buffer.allocUnsafe(parent.length);\n      } else {\n        // Older Node.js versions\n        child = new Buffer(parent.length);\n      }\n      parent.copy(child);\n      return child;\n    } else if (_instanceof(parent, Error)) {\n      child = Object.create(parent);\n    } else {\n      if (typeof prototype == 'undefined') {\n        proto = Object.getPrototypeOf(parent);\n        child = Object.create(proto);\n      }\n      else {\n        child = Object.create(prototype);\n        proto = prototype;\n      }\n    }\n\n    if (circular) {\n      var index = allParents.indexOf(parent);\n\n      if (index != -1) {\n        return allChildren[index];\n      }\n      allParents.push(parent);\n      allChildren.push(child);\n    }\n\n    if (_instanceof(parent, nativeMap)) {\n      parent.forEach(function(value, key) {\n        var keyChild = _clone(key, depth - 1);\n        var valueChild = _clone(value, depth - 1);\n        child.set(keyChild, valueChild);\n      });\n    }\n    if (_instanceof(parent, nativeSet)) {\n      parent.forEach(function(value) {\n        var entryChild = _clone(value, depth - 1);\n        child.add(entryChild);\n      });\n    }\n\n    for (var i in parent) {\n      var attrs;\n      if (proto) {\n        attrs = Object.getOwnPropertyDescriptor(proto, i);\n      }\n\n      if (attrs && attrs.set == null) {\n        continue;\n      }\n      child[i] = _clone(parent[i], depth - 1);\n    }\n\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(parent);\n      for (var i = 0; i < symbols.length; i++) {\n        // Don't need to worry about cloning a symbol because it is a primitive,\n        // like a number or string.\n        var symbol = symbols[i];\n        var descriptor = Object.getOwnPropertyDescriptor(parent, symbol);\n        if (descriptor && !descriptor.enumerable && !includeNonEnumerable) {\n          continue;\n        }\n        child[symbol] = _clone(parent[symbol], depth - 1);\n        if (!descriptor.enumerable) {\n          Object.defineProperty(child, symbol, {\n            enumerable: false\n          });\n        }\n      }\n    }\n\n    if (includeNonEnumerable) {\n      var allPropertyNames = Object.getOwnPropertyNames(parent);\n      for (var i = 0; i < allPropertyNames.length; i++) {\n        var propertyName = allPropertyNames[i];\n        var descriptor = Object.getOwnPropertyDescriptor(parent, propertyName);\n        if (descriptor && descriptor.enumerable) {\n          continue;\n        }\n        child[propertyName] = _clone(parent[propertyName], depth - 1);\n        Object.defineProperty(child, propertyName, {\n          enumerable: false\n        });\n      }\n    }\n\n    return child;\n  }\n\n  return _clone(parent, depth);\n}\n\n/**\n * Simple flat clone using prototype, accepts only objects, usefull for property\n * override on FLAT configuration object (no nested props).\n *\n * USE WITH CAUTION! This may not behave as you wish if you do not know how this\n * works.\n */\nclone.clonePrototype = function clonePrototype(parent) {\n  if (parent === null)\n    return null;\n\n  var c = function () {};\n  c.prototype = parent;\n  return new c();\n};\n\n// private utility functions\n\nfunction __objToStr(o) {\n  return Object.prototype.toString.call(o);\n}\nclone.__objToStr = __objToStr;\n\nfunction __isDate(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Date]';\n}\nclone.__isDate = __isDate;\n\nfunction __isArray(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Array]';\n}\nclone.__isArray = __isArray;\n\nfunction __isRegExp(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object RegExp]';\n}\nclone.__isRegExp = __isRegExp;\n\nfunction __getRegExpFlags(re) {\n  var flags = '';\n  if (re.global) flags += 'g';\n  if (re.ignoreCase) flags += 'i';\n  if (re.multiline) flags += 'm';\n  return flags;\n}\nclone.__getRegExpFlags = __getRegExpFlags;\n\nreturn clone;\n})();\n\nif (typeof module === 'object' && module.exports) {\n  module.exports = clone;\n}\n","/*\n * node-cache 5.1.2 ( 2020-07-01 )\n * https://github.com/node-cache/node-cache\n *\n * Released under the MIT license\n * https://github.com/node-cache/node-cache/blob/master/LICENSE\n *\n * Maintained by  (  )\n*/\n(function() {\n  var EventEmitter, NodeCache, clone,\n    splice = [].splice,\n    boundMethodCheck = function(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new Error('Bound instance method accessed before binding'); } },\n    indexOf = [].indexOf;\n\n  clone = require(\"clone\");\n\n  EventEmitter = require('events').EventEmitter;\n\n  // generate superclass\n  module.exports = NodeCache = (function() {\n    class NodeCache extends EventEmitter {\n      constructor(options = {}) {\n        super();\n        // ## get\n\n        // get a cached key and change the stats\n\n        // **Parameters:**\n\n        // * `key` ( String | Number ): cache key\n\n        // **Example:**\n\n        //\tmyCache.get \"myKey\", ( err, val )\n\n        this.get = this.get.bind(this);\n        // ## mget\n\n        // get multiple cached keys at once and change the stats\n\n        // **Parameters:**\n\n        // * `keys` ( String|Number[] ): an array of keys\n\n        // **Example:**\n\n        //\tmyCache.mget [ \"foo\", \"bar\" ]\n\n        this.mget = this.mget.bind(this);\n        // ## set\n\n        // set a cached key and change the stats\n\n        // **Parameters:**\n\n        // * `key` ( String | Number ): cache key\n        // * `value` ( Any ): A element to cache. If the option `option.forceString` is `true` the module trys to translate it to a serialized JSON\n        // * `[ ttl ]` ( Number | String ): ( optional ) The time to live in seconds.\n\n        // **Example:**\n\n        //\tmyCache.set \"myKey\", \"my_String Value\"\n\n        //\tmyCache.set \"myKey\", \"my_String Value\", 10\n\n        this.set = this.set.bind(this);\n        \n        // ## mset\n\n        // set multiple keys at once\n\n        // **Parameters:**\n\n        // * `keyValueSet` ( Object[] ): an array of object which includes key,value and ttl\n\n        // **Example:**\n\n        //\tmyCache.mset(\n        //\t\t[\n        //\t\t\t{\n        //\t\t\t\tkey: \"myKey\",\n        //\t\t\t\tval: \"myValue\",\n        //\t\t\t\tttl: [ttl in seconds]\n        //\t\t\t}\n        //\t\t])\n\n        this.mset = this.mset.bind(this);\n        // ## del\n\n        // remove keys\n\n        // **Parameters:**\n\n        // * `keys` ( String | Number | String|Number[] ): cache key to delete or a array of cache keys\n\n        // **Return**\n\n        // ( Number ): Number of deleted keys\n\n        // **Example:**\n\n        //\tmyCache.del( \"myKey\" )\n\n        this.del = this.del.bind(this);\n        // ## take\n\n        // get the cached value and remove the key from the cache.\n        // Equivalent to calling `get(key)` + `del(key)`.\n        // Useful for implementing `single use` mechanism such as OTP, where once a value is read it will become obsolete.\n\n        // **Parameters:**\n\n        // * `key` ( String | Number ): cache key\n\n        // **Example:**\n\n        //\tmyCache.take \"myKey\", ( err, val )\n\n        this.take = this.take.bind(this);\n        // ## ttl\n\n        // reset or redefine the ttl of a key. `ttl` = 0 means infinite lifetime.\n        // If `ttl` is not passed the default ttl is used.\n        // If `ttl` < 0 the key will be deleted.\n\n        // **Parameters:**\n\n        // * `key` ( String | Number ): cache key to reset the ttl value\n        // * `ttl` ( Number ): ( optional -> options.stdTTL || 0 ) The time to live in seconds\n\n        // **Return**\n\n        // ( Boolen ): key found and ttl set\n\n        // **Example:**\n\n        //\tmyCache.ttl( \"myKey\" ) // will set ttl to default ttl\n\n        //\tmyCache.ttl( \"myKey\", 1000 )\n\n        this.ttl = this.ttl.bind(this);\n        // ## getTtl\n\n        // receive the ttl of a key.\n\n        // **Parameters:**\n\n        // * `key` ( String | Number ): cache key to check the ttl value\n\n        // **Return**\n\n        // ( Number|undefined ): The timestamp in ms when the key will expire, 0 if it will never expire or undefined if it not exists\n\n        // **Example:**\n\n        //\tmyCache.getTtl( \"myKey\" )\n\n        this.getTtl = this.getTtl.bind(this);\n        // ## keys\n\n        // list all keys within this cache\n\n        // **Return**\n\n        // ( Array ): An array of all keys\n\n        // **Example:**\n\n        //     _keys = myCache.keys()\n\n        //     # [ \"foo\", \"bar\", \"fizz\", \"buzz\", \"anotherKeys\" ]\n\n        this.keys = this.keys.bind(this);\n        // ## has\n\n        // Check if a key is cached\n\n        // **Parameters:**\n\n        // * `key` ( String | Number ): cache key to check the ttl value\n\n        // **Return**\n\n        // ( Boolean ): A boolean that indicates if the key is cached\n\n        // **Example:**\n\n        //     _exists = myCache.has('myKey')\n\n        //     # true\n\n        this.has = this.has.bind(this);\n        // ## getStats\n\n        // get the stats\n\n        // **Parameters:**\n\n        // -\n\n        // **Return**\n\n        // ( Object ): Stats data\n\n        // **Example:**\n\n        //     myCache.getStats()\n        //     # {\n        //     # hits: 0,\n        //     # misses: 0,\n        //     # keys: 0,\n        //     # ksize: 0,\n        //     # vsize: 0\n        //     # }\n\n        this.getStats = this.getStats.bind(this);\n        // ## flushAll\n\n        // flush the whole data and reset the stats\n\n        // **Example:**\n\n        //     myCache.flushAll()\n\n        //     myCache.getStats()\n        //     # {\n        //     # hits: 0,\n        //     # misses: 0,\n        //     # keys: 0,\n        //     # ksize: 0,\n        //     # vsize: 0\n        //     # }\n\n        this.flushAll = this.flushAll.bind(this);\n        \n        // ## flushStats\n\n        // flush the stats and reset all counters to 0\n\n        // **Example:**\n\n        //     myCache.flushStats()\n\n        //     myCache.getStats()\n        //     # {\n        //     # hits: 0,\n        //     # misses: 0,\n        //     # keys: 0,\n        //     # ksize: 0,\n        //     # vsize: 0\n        //     # }\n\n        this.flushStats = this.flushStats.bind(this);\n        // ## close\n\n        // This will clear the interval timeout which is set on checkperiod option.\n\n        // **Example:**\n\n        //     myCache.close()\n\n        this.close = this.close.bind(this);\n        // ## _checkData\n\n        // internal housekeeping method.\n        // Check all the cached data and delete the invalid values\n        this._checkData = this._checkData.bind(this);\n        // ## _check\n\n        // internal method the check the value. If it's not valid any more delete it\n        this._check = this._check.bind(this);\n        // ## _isInvalidKey\n\n        // internal method to check if the type of a key is either `number` or `string`\n        this._isInvalidKey = this._isInvalidKey.bind(this);\n        // ## _wrap\n\n        // internal method to wrap a value in an object with some metadata\n        this._wrap = this._wrap.bind(this);\n        // ## _getValLength\n\n        // internal method to calculate the value length\n        this._getValLength = this._getValLength.bind(this);\n        // ## _error\n\n        // internal method to handle an error message\n        this._error = this._error.bind(this);\n        // ## _initErrors\n\n        // internal method to generate error message templates\n        this._initErrors = this._initErrors.bind(this);\n        this.options = options;\n        this._initErrors();\n        // container for cached data\n        this.data = {};\n        // module options\n        this.options = Object.assign({\n          // convert all elements to string\n          forceString: false,\n          // used standard size for calculating value size\n          objectValueSize: 80,\n          promiseValueSize: 80,\n          arrayValueSize: 40,\n          // standard time to live in seconds. 0 = infinity;\n          stdTTL: 0,\n          // time in seconds to check all data and delete expired keys\n          checkperiod: 600,\n          // en/disable cloning of variables. If `true` you'll get a copy of the cached variable. If `false` you'll save and get just the reference\n          useClones: true,\n          // whether values should be deleted automatically at expiration\n          deleteOnExpire: true,\n          // enable legacy callbacks\n          enableLegacyCallbacks: false,\n          // max amount of keys that are being stored\n          maxKeys: -1\n        }, this.options);\n        // generate functions with callbacks (legacy)\n        if (this.options.enableLegacyCallbacks) {\n          console.warn(\"WARNING! node-cache legacy callback support will drop in v6.x\");\n          [\"get\", \"mget\", \"set\", \"del\", \"ttl\", \"getTtl\", \"keys\", \"has\"].forEach((methodKey) => {\n            var oldMethod;\n            // reference real function\n            oldMethod = this[methodKey];\n            this[methodKey] = function(...args) {\n              var cb, err, ref, res;\n              ref = args, [...args] = ref, [cb] = splice.call(args, -1);\n              // return a callback if cb is defined and a function\n              if (typeof cb === \"function\") {\n                try {\n                  res = oldMethod(...args);\n                  cb(null, res);\n                } catch (error1) {\n                  err = error1;\n                  cb(err);\n                }\n              } else {\n                return oldMethod(...args, cb);\n              }\n            };\n          });\n        }\n        // statistics container\n        this.stats = {\n          hits: 0,\n          misses: 0,\n          keys: 0,\n          ksize: 0,\n          vsize: 0\n        };\n        // pre allocate valid keytypes array\n        this.validKeyTypes = [\"string\", \"number\"];\n        // initalize checking period\n        this._checkData();\n        return;\n      }\n\n      get(key) {\n        var _ret, err;\n        boundMethodCheck(this, NodeCache);\n        // handle invalid key types\n        if ((err = this._isInvalidKey(key)) != null) {\n          throw err;\n        }\n        // get data and incremet stats\n        if ((this.data[key] != null) && this._check(key, this.data[key])) {\n          this.stats.hits++;\n          _ret = this._unwrap(this.data[key]);\n          // return data\n          return _ret;\n        } else {\n          // if not found return undefined\n          this.stats.misses++;\n          return void 0;\n        }\n      }\n\n      mget(keys) {\n        var _err, err, i, key, len, oRet;\n        boundMethodCheck(this, NodeCache);\n        // convert a string to an array of one key\n        if (!Array.isArray(keys)) {\n          _err = this._error(\"EKEYSTYPE\");\n          throw _err;\n        }\n        // define return\n        oRet = {};\n        for (i = 0, len = keys.length; i < len; i++) {\n          key = keys[i];\n          // handle invalid key types\n          if ((err = this._isInvalidKey(key)) != null) {\n            throw err;\n          }\n          // get data and increment stats\n          if ((this.data[key] != null) && this._check(key, this.data[key])) {\n            this.stats.hits++;\n            oRet[key] = this._unwrap(this.data[key]);\n          } else {\n            // if not found return a error\n            this.stats.misses++;\n          }\n        }\n        // return all found keys\n        return oRet;\n      }\n\n      set(key, value, ttl) {\n        var _err, err, existent;\n        boundMethodCheck(this, NodeCache);\n        // check if cache is overflowing\n        if (this.options.maxKeys > -1 && this.stats.keys >= this.options.maxKeys) {\n          _err = this._error(\"ECACHEFULL\");\n          throw _err;\n        }\n        // force the data to string\n        if (this.options.forceString && !typeof value === \"string\") {\n          value = JSON.stringify(value);\n        }\n        // set default ttl if not passed\n        if (ttl == null) {\n          ttl = this.options.stdTTL;\n        }\n        // handle invalid key types\n        if ((err = this._isInvalidKey(key)) != null) {\n          throw err;\n        }\n        // internal helper variables\n        existent = false;\n        // remove existing data from stats\n        if (this.data[key]) {\n          existent = true;\n          this.stats.vsize -= this._getValLength(this._unwrap(this.data[key], false));\n        }\n        // set the value\n        this.data[key] = this._wrap(value, ttl);\n        this.stats.vsize += this._getValLength(value);\n        // only add the keys and key-size if the key is new\n        if (!existent) {\n          this.stats.ksize += this._getKeyLength(key);\n          this.stats.keys++;\n        }\n        this.emit(\"set\", key, value);\n        // return true\n        return true;\n      }\n\n      mset(keyValueSet) {\n        var _err, err, i, j, key, keyValuePair, len, len1, ttl, val;\n        boundMethodCheck(this, NodeCache);\n        // check if cache is overflowing\n        if (this.options.maxKeys > -1 && this.stats.keys + keyValueSet.length >= this.options.maxKeys) {\n          _err = this._error(\"ECACHEFULL\");\n          throw _err;\n        }\n\n// loop over keyValueSet to validate key and ttl\n        for (i = 0, len = keyValueSet.length; i < len; i++) {\n          keyValuePair = keyValueSet[i];\n          ({key, val, ttl} = keyValuePair);\n          // check if there is ttl and it's a number\n          if (ttl && typeof ttl !== \"number\") {\n            _err = this._error(\"ETTLTYPE\");\n            throw _err;\n          }\n          // handle invalid key types\n          if ((err = this._isInvalidKey(key)) != null) {\n            throw err;\n          }\n        }\n        for (j = 0, len1 = keyValueSet.length; j < len1; j++) {\n          keyValuePair = keyValueSet[j];\n          ({key, val, ttl} = keyValuePair);\n          this.set(key, val, ttl);\n        }\n        return true;\n      }\n\n      del(keys) {\n        var delCount, err, i, key, len, oldVal;\n        boundMethodCheck(this, NodeCache);\n        // convert keys to an array of itself\n        if (!Array.isArray(keys)) {\n          keys = [keys];\n        }\n        delCount = 0;\n        for (i = 0, len = keys.length; i < len; i++) {\n          key = keys[i];\n          // handle invalid key types\n          if ((err = this._isInvalidKey(key)) != null) {\n            throw err;\n          }\n          // only delete if existent\n          if (this.data[key] != null) {\n            // calc the stats\n            this.stats.vsize -= this._getValLength(this._unwrap(this.data[key], false));\n            this.stats.ksize -= this._getKeyLength(key);\n            this.stats.keys--;\n            delCount++;\n            // delete the value\n            oldVal = this.data[key];\n            delete this.data[key];\n            // return true\n            this.emit(\"del\", key, oldVal.v);\n          }\n        }\n        return delCount;\n      }\n\n      take(key) {\n        var _ret;\n        boundMethodCheck(this, NodeCache);\n        _ret = this.get(key);\n        if ((_ret != null)) {\n          this.del(key);\n        }\n        return _ret;\n      }\n\n      ttl(key, ttl) {\n        var err;\n        boundMethodCheck(this, NodeCache);\n        ttl || (ttl = this.options.stdTTL);\n        if (!key) {\n          return false;\n        }\n        // handle invalid key types\n        if ((err = this._isInvalidKey(key)) != null) {\n          throw err;\n        }\n        // check for existent data and update the ttl value\n        if ((this.data[key] != null) && this._check(key, this.data[key])) {\n          // if ttl < 0 delete the key. otherwise reset the value\n          if (ttl >= 0) {\n            this.data[key] = this._wrap(this.data[key].v, ttl, false);\n          } else {\n            this.del(key);\n          }\n          return true;\n        } else {\n          // return false if key has not been found\n          return false;\n        }\n      }\n\n      getTtl(key) {\n        var _ttl, err;\n        boundMethodCheck(this, NodeCache);\n        if (!key) {\n          return void 0;\n        }\n        // handle invalid key types\n        if ((err = this._isInvalidKey(key)) != null) {\n          throw err;\n        }\n        // check for existant data and update the ttl value\n        if ((this.data[key] != null) && this._check(key, this.data[key])) {\n          _ttl = this.data[key].t;\n          return _ttl;\n        } else {\n          // return undefined if key has not been found\n          return void 0;\n        }\n      }\n\n      keys() {\n        var _keys;\n        boundMethodCheck(this, NodeCache);\n        _keys = Object.keys(this.data);\n        return _keys;\n      }\n\n      has(key) {\n        var _exists;\n        boundMethodCheck(this, NodeCache);\n        _exists = (this.data[key] != null) && this._check(key, this.data[key]);\n        return _exists;\n      }\n\n      getStats() {\n        boundMethodCheck(this, NodeCache);\n        return this.stats;\n      }\n\n      flushAll(_startPeriod = true) {\n        boundMethodCheck(this, NodeCache);\n        // parameter just for testing\n\n        // set data empty\n        this.data = {};\n        // reset stats\n        this.stats = {\n          hits: 0,\n          misses: 0,\n          keys: 0,\n          ksize: 0,\n          vsize: 0\n        };\n        // reset check period\n        this._killCheckPeriod();\n        this._checkData(_startPeriod);\n        this.emit(\"flush\");\n      }\n\n      flushStats() {\n        boundMethodCheck(this, NodeCache);\n        // reset stats\n        this.stats = {\n          hits: 0,\n          misses: 0,\n          keys: 0,\n          ksize: 0,\n          vsize: 0\n        };\n        this.emit(\"flush_stats\");\n      }\n\n      close() {\n        boundMethodCheck(this, NodeCache);\n        this._killCheckPeriod();\n      }\n\n      _checkData(startPeriod = true) {\n        var key, ref, value;\n        boundMethodCheck(this, NodeCache);\n        ref = this.data;\n        // run the housekeeping method\n        for (key in ref) {\n          value = ref[key];\n          this._check(key, value);\n        }\n        if (startPeriod && this.options.checkperiod > 0) {\n          this.checkTimeout = setTimeout(this._checkData, this.options.checkperiod * 1000, startPeriod);\n          if ((this.checkTimeout != null) && (this.checkTimeout.unref != null)) {\n            this.checkTimeout.unref();\n          }\n        }\n      }\n\n      // ## _killCheckPeriod\n\n      // stop the checkdata period. Only needed to abort the script in testing mode.\n      _killCheckPeriod() {\n        if (this.checkTimeout != null) {\n          return clearTimeout(this.checkTimeout);\n        }\n      }\n\n      _check(key, data) {\n        var _retval;\n        boundMethodCheck(this, NodeCache);\n        _retval = true;\n        // data is invalid if the ttl is too old and is not 0\n        // console.log data.t < Date.now(), data.t, Date.now()\n        if (data.t !== 0 && data.t < Date.now()) {\n          if (this.options.deleteOnExpire) {\n            _retval = false;\n            this.del(key);\n          }\n          this.emit(\"expired\", key, this._unwrap(data));\n        }\n        return _retval;\n      }\n\n      _isInvalidKey(key) {\n        var ref;\n        boundMethodCheck(this, NodeCache);\n        if (ref = typeof key, indexOf.call(this.validKeyTypes, ref) < 0) {\n          return this._error(\"EKEYTYPE\", {\n            type: typeof key\n          });\n        }\n      }\n\n      _wrap(value, ttl, asClone = true) {\n        var livetime, now, oReturn, ttlMultiplicator;\n        boundMethodCheck(this, NodeCache);\n        if (!this.options.useClones) {\n          asClone = false;\n        }\n        // define the time to live\n        now = Date.now();\n        livetime = 0;\n        ttlMultiplicator = 1000;\n        // use given ttl\n        if (ttl === 0) {\n          livetime = 0;\n        } else if (ttl) {\n          livetime = now + (ttl * ttlMultiplicator);\n        } else {\n          // use standard ttl\n          if (this.options.stdTTL === 0) {\n            livetime = this.options.stdTTL;\n          } else {\n            livetime = now + (this.options.stdTTL * ttlMultiplicator);\n          }\n        }\n        // return the wrapped value\n        return oReturn = {\n          t: livetime,\n          v: asClone ? clone(value) : value\n        };\n      }\n\n      // ## _unwrap\n\n      // internal method to extract get the value out of the wrapped value\n      _unwrap(value, asClone = true) {\n        if (!this.options.useClones) {\n          asClone = false;\n        }\n        if (value.v != null) {\n          if (asClone) {\n            return clone(value.v);\n          } else {\n            return value.v;\n          }\n        }\n        return null;\n      }\n\n      // ## _getKeyLength\n\n      // internal method the calculate the key length\n      _getKeyLength(key) {\n        return key.toString().length;\n      }\n\n      _getValLength(value) {\n        boundMethodCheck(this, NodeCache);\n        if (typeof value === \"string\") {\n          // if the value is a String get the real length\n          return value.length;\n        } else if (this.options.forceString) {\n          // force string if it's defined and not passed\n          return JSON.stringify(value).length;\n        } else if (Array.isArray(value)) {\n          // if the data is an Array multiply each element with a defined default length\n          return this.options.arrayValueSize * value.length;\n        } else if (typeof value === \"number\") {\n          return 8;\n        } else if (typeof (value != null ? value.then : void 0) === \"function\") {\n          // if the data is a Promise, use defined default\n          // (can't calculate actual/resolved value size synchronously)\n          return this.options.promiseValueSize;\n        } else if (typeof Buffer !== \"undefined\" && Buffer !== null ? Buffer.isBuffer(value) : void 0) {\n          return value.length;\n        } else if ((value != null) && typeof value === \"object\") {\n          // if the data is an Object multiply each element with a defined default length\n          return this.options.objectValueSize * Object.keys(value).length;\n        } else if (typeof value === \"boolean\") {\n          return 8;\n        } else {\n          // default fallback\n          return 0;\n        }\n      }\n\n      _error(type, data = {}) {\n        var error;\n        boundMethodCheck(this, NodeCache);\n        // generate the error object\n        error = new Error();\n        error.name = type;\n        error.errorcode = type;\n        error.message = this.ERRORS[type] != null ? this.ERRORS[type](data) : \"-\";\n        error.data = data;\n        // return the error object\n        return error;\n      }\n\n      _initErrors() {\n        var _errMsg, _errT, ref;\n        boundMethodCheck(this, NodeCache);\n        this.ERRORS = {};\n        ref = this._ERRORS;\n        for (_errT in ref) {\n          _errMsg = ref[_errT];\n          this.ERRORS[_errT] = this.createErrorMessage(_errMsg);\n        }\n      }\n\n      createErrorMessage(errMsg) {\n        return function(args) {\n          return errMsg.replace(\"__key\", args.type);\n        };\n      }\n\n    };\n\n    NodeCache.prototype._ERRORS = {\n      \"ENOTFOUND\": \"Key `__key` not found\",\n      \"ECACHEFULL\": \"Cache max keys amount exceeded\",\n      \"EKEYTYPE\": \"The key argument has to be of type `string` or `number`. Found: `__key`\",\n      \"EKEYSTYPE\": \"The keys argument has to be an array.\",\n      \"ETTLTYPE\": \"The ttl argument has to be a number.\"\n    };\n\n    return NodeCache;\n\n  }).call(this);\n\n}).call(this);\n","/*\n * node-cache 5.1.2 ( 2020-07-01 )\n * https://github.com/node-cache/node-cache\n *\n * Released under the MIT license\n * https://github.com/node-cache/node-cache/blob/master/LICENSE\n *\n * Maintained by  (  )\n*/\n(function() {\n  var exports;\n\n  exports = module.exports = require('./lib/node_cache');\n\n  exports.version = '5.1.2';\n\n}).call(this);\n","\"use strict\";\n\nvar conversions = {};\nmodule.exports = conversions;\n\nfunction sign(x) {\n    return x < 0 ? -1 : 1;\n}\n\nfunction evenRound(x) {\n    // Round x to the nearest integer, choosing the even integer if it lies halfway between two.\n    if ((x % 1) === 0.5 && (x & 1) === 0) { // [even number].5; round down (i.e. floor)\n        return Math.floor(x);\n    } else {\n        return Math.round(x);\n    }\n}\n\nfunction createNumberConversion(bitLength, typeOpts) {\n    if (!typeOpts.unsigned) {\n        --bitLength;\n    }\n    const lowerBound = typeOpts.unsigned ? 0 : -Math.pow(2, bitLength);\n    const upperBound = Math.pow(2, bitLength) - 1;\n\n    const moduloVal = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength) : Math.pow(2, bitLength);\n    const moduloBound = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength - 1) : Math.pow(2, bitLength - 1);\n\n    return function(V, opts) {\n        if (!opts) opts = {};\n\n        let x = +V;\n\n        if (opts.enforceRange) {\n            if (!Number.isFinite(x)) {\n                throw new TypeError(\"Argument is not a finite number\");\n            }\n\n            x = sign(x) * Math.floor(Math.abs(x));\n            if (x < lowerBound || x > upperBound) {\n                throw new TypeError(\"Argument is not in byte range\");\n            }\n\n            return x;\n        }\n\n        if (!isNaN(x) && opts.clamp) {\n            x = evenRound(x);\n\n            if (x < lowerBound) x = lowerBound;\n            if (x > upperBound) x = upperBound;\n            return x;\n        }\n\n        if (!Number.isFinite(x) || x === 0) {\n            return 0;\n        }\n\n        x = sign(x) * Math.floor(Math.abs(x));\n        x = x % moduloVal;\n\n        if (!typeOpts.unsigned && x >= moduloBound) {\n            return x - moduloVal;\n        } else if (typeOpts.unsigned) {\n            if (x < 0) {\n              x += moduloVal;\n            } else if (x === -0) { // don't return negative zero\n              return 0;\n            }\n        }\n\n        return x;\n    }\n}\n\nconversions[\"void\"] = function () {\n    return undefined;\n};\n\nconversions[\"boolean\"] = function (val) {\n    return !!val;\n};\n\nconversions[\"byte\"] = createNumberConversion(8, { unsigned: false });\nconversions[\"octet\"] = createNumberConversion(8, { unsigned: true });\n\nconversions[\"short\"] = createNumberConversion(16, { unsigned: false });\nconversions[\"unsigned short\"] = createNumberConversion(16, { unsigned: true });\n\nconversions[\"long\"] = createNumberConversion(32, { unsigned: false });\nconversions[\"unsigned long\"] = createNumberConversion(32, { unsigned: true });\n\nconversions[\"long long\"] = createNumberConversion(32, { unsigned: false, moduloBitLength: 64 });\nconversions[\"unsigned long long\"] = createNumberConversion(32, { unsigned: true, moduloBitLength: 64 });\n\nconversions[\"double\"] = function (V) {\n    const x = +V;\n\n    if (!Number.isFinite(x)) {\n        throw new TypeError(\"Argument is not a finite floating-point value\");\n    }\n\n    return x;\n};\n\nconversions[\"unrestricted double\"] = function (V) {\n    const x = +V;\n\n    if (isNaN(x)) {\n        throw new TypeError(\"Argument is NaN\");\n    }\n\n    return x;\n};\n\n// not quite valid, but good enough for JS\nconversions[\"float\"] = conversions[\"double\"];\nconversions[\"unrestricted float\"] = conversions[\"unrestricted double\"];\n\nconversions[\"DOMString\"] = function (V, opts) {\n    if (!opts) opts = {};\n\n    if (opts.treatNullAsEmptyString && V === null) {\n        return \"\";\n    }\n\n    return String(V);\n};\n\nconversions[\"ByteString\"] = function (V, opts) {\n    const x = String(V);\n    let c = undefined;\n    for (let i = 0; (c = x.codePointAt(i)) !== undefined; ++i) {\n        if (c > 255) {\n            throw new TypeError(\"Argument is not a valid bytestring\");\n        }\n    }\n\n    return x;\n};\n\nconversions[\"USVString\"] = function (V) {\n    const S = String(V);\n    const n = S.length;\n    const U = [];\n    for (let i = 0; i < n; ++i) {\n        const c = S.charCodeAt(i);\n        if (c < 0xD800 || c > 0xDFFF) {\n            U.push(String.fromCodePoint(c));\n        } else if (0xDC00 <= c && c <= 0xDFFF) {\n            U.push(String.fromCodePoint(0xFFFD));\n        } else {\n            if (i === n - 1) {\n                U.push(String.fromCodePoint(0xFFFD));\n            } else {\n                const d = S.charCodeAt(i + 1);\n                if (0xDC00 <= d && d <= 0xDFFF) {\n                    const a = c & 0x3FF;\n                    const b = d & 0x3FF;\n                    U.push(String.fromCodePoint((2 << 15) + (2 << 9) * a + b));\n                    ++i;\n                } else {\n                    U.push(String.fromCodePoint(0xFFFD));\n                }\n            }\n        }\n    }\n\n    return U.join('');\n};\n\nconversions[\"Date\"] = function (V, opts) {\n    if (!(V instanceof Date)) {\n        throw new TypeError(\"Argument is not a Date object\");\n    }\n    if (isNaN(V)) {\n        return undefined;\n    }\n\n    return V;\n};\n\nconversions[\"RegExp\"] = function (V, opts) {\n    if (!(V instanceof RegExp)) {\n        V = new RegExp(V);\n    }\n\n    return V;\n};\n","\"use strict\";\n\nmodule.exports.mixin = function mixin(target, source) {\n  const keys = Object.getOwnPropertyNames(source);\n  for (let i = 0; i < keys.length; ++i) {\n    Object.defineProperty(target, keys[i], Object.getOwnPropertyDescriptor(source, keys[i]));\n  }\n};\n\nmodule.exports.wrapperSymbol = Symbol(\"wrapper\");\nmodule.exports.implSymbol = Symbol(\"impl\");\n\nmodule.exports.wrapperForImpl = function (impl) {\n  return impl[module.exports.wrapperSymbol];\n};\n\nmodule.exports.implForWrapper = function (wrapper) {\n  return wrapper[module.exports.implSymbol];\n};\n\n","\"use strict\";\n\nvar punycode = require(\"punycode\");\nvar mappingTable = require(\"./lib/mappingTable.json\");\n\nvar PROCESSING_OPTIONS = {\n  TRANSITIONAL: 0,\n  NONTRANSITIONAL: 1\n};\n\nfunction normalize(str) { // fix bug in v8\n  return str.split('\\u0000').map(function (s) { return s.normalize('NFC'); }).join('\\u0000');\n}\n\nfunction findStatus(val) {\n  var start = 0;\n  var end = mappingTable.length - 1;\n\n  while (start <= end) {\n    var mid = Math.floor((start + end) / 2);\n\n    var target = mappingTable[mid];\n    if (target[0][0] <= val && target[0][1] >= val) {\n      return target;\n    } else if (target[0][0] > val) {\n      end = mid - 1;\n    } else {\n      start = mid + 1;\n    }\n  }\n\n  return null;\n}\n\nvar regexAstralSymbols = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n\nfunction countSymbols(string) {\n  return string\n    // replace every surrogate pair with a BMP symbol\n    .replace(regexAstralSymbols, '_')\n    // then get the length\n    .length;\n}\n\nfunction mapChars(domain_name, useSTD3, processing_option) {\n  var hasError = false;\n  var processed = \"\";\n\n  var len = countSymbols(domain_name);\n  for (var i = 0; i < len; ++i) {\n    var codePoint = domain_name.codePointAt(i);\n    var status = findStatus(codePoint);\n\n    switch (status[1]) {\n      case \"disallowed\":\n        hasError = true;\n        processed += String.fromCodePoint(codePoint);\n        break;\n      case \"ignored\":\n        break;\n      case \"mapped\":\n        processed += String.fromCodePoint.apply(String, status[2]);\n        break;\n      case \"deviation\":\n        if (processing_option === PROCESSING_OPTIONS.TRANSITIONAL) {\n          processed += String.fromCodePoint.apply(String, status[2]);\n        } else {\n          processed += String.fromCodePoint(codePoint);\n        }\n        break;\n      case \"valid\":\n        processed += String.fromCodePoint(codePoint);\n        break;\n      case \"disallowed_STD3_mapped\":\n        if (useSTD3) {\n          hasError = true;\n          processed += String.fromCodePoint(codePoint);\n        } else {\n          processed += String.fromCodePoint.apply(String, status[2]);\n        }\n        break;\n      case \"disallowed_STD3_valid\":\n        if (useSTD3) {\n          hasError = true;\n        }\n\n        processed += String.fromCodePoint(codePoint);\n        break;\n    }\n  }\n\n  return {\n    string: processed,\n    error: hasError\n  };\n}\n\nvar combiningMarksRegex = /[\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08E4-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B62\\u0B63\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0C00-\\u0C03\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0D01-\\u0D03\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D82\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F\\u109A-\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u180B-\\u180D\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u19B0-\\u19C0\\u19C8\\u19C9\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F\\u1AB0-\\u1ABE\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF2-\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF5\\u1DFC-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA880\\uA881\\uA8B4-\\uA8C4\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9E5\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2D]|\\uD800[\\uDDFD\\uDEE0\\uDF76-\\uDF7A]|\\uD802[\\uDE01-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE0F\\uDE38-\\uDE3A\\uDE3F\\uDEE5\\uDEE6]|\\uD804[\\uDC00-\\uDC02\\uDC38-\\uDC46\\uDC7F-\\uDC82\\uDCB0-\\uDCBA\\uDD00-\\uDD02\\uDD27-\\uDD34\\uDD73\\uDD80-\\uDD82\\uDDB3-\\uDDC0\\uDE2C-\\uDE37\\uDEDF-\\uDEEA\\uDF01-\\uDF03\\uDF3C\\uDF3E-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF57\\uDF62\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDCB0-\\uDCC3\\uDDAF-\\uDDB5\\uDDB8-\\uDDC0\\uDE30-\\uDE40\\uDEAB-\\uDEB7]|\\uD81A[\\uDEF0-\\uDEF4\\uDF30-\\uDF36]|\\uD81B[\\uDF51-\\uDF7E\\uDF8F-\\uDF92]|\\uD82F[\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD83A[\\uDCD0-\\uDCD6]|\\uDB40[\\uDD00-\\uDDEF]/;\n\nfunction validateLabel(label, processing_option) {\n  if (label.substr(0, 4) === \"xn--\") {\n    label = punycode.toUnicode(label);\n    processing_option = PROCESSING_OPTIONS.NONTRANSITIONAL;\n  }\n\n  var error = false;\n\n  if (normalize(label) !== label ||\n      (label[3] === \"-\" && label[4] === \"-\") ||\n      label[0] === \"-\" || label[label.length - 1] === \"-\" ||\n      label.indexOf(\".\") !== -1 ||\n      label.search(combiningMarksRegex) === 0) {\n    error = true;\n  }\n\n  var len = countSymbols(label);\n  for (var i = 0; i < len; ++i) {\n    var status = findStatus(label.codePointAt(i));\n    if ((processing === PROCESSING_OPTIONS.TRANSITIONAL && status[1] !== \"valid\") ||\n        (processing === PROCESSING_OPTIONS.NONTRANSITIONAL &&\n         status[1] !== \"valid\" && status[1] !== \"deviation\")) {\n      error = true;\n      break;\n    }\n  }\n\n  return {\n    label: label,\n    error: error\n  };\n}\n\nfunction processing(domain_name, useSTD3, processing_option) {\n  var result = mapChars(domain_name, useSTD3, processing_option);\n  result.string = normalize(result.string);\n\n  var labels = result.string.split(\".\");\n  for (var i = 0; i < labels.length; ++i) {\n    try {\n      var validation = validateLabel(labels[i]);\n      labels[i] = validation.label;\n      result.error = result.error || validation.error;\n    } catch(e) {\n      result.error = true;\n    }\n  }\n\n  return {\n    string: labels.join(\".\"),\n    error: result.error\n  };\n}\n\nmodule.exports.toASCII = function(domain_name, useSTD3, processing_option, verifyDnsLength) {\n  var result = processing(domain_name, useSTD3, processing_option);\n  var labels = result.string.split(\".\");\n  labels = labels.map(function(l) {\n    try {\n      return punycode.toASCII(l);\n    } catch(e) {\n      result.error = true;\n      return l;\n    }\n  });\n\n  if (verifyDnsLength) {\n    var total = labels.slice(0, labels.length - 1).join(\".\").length;\n    if (total.length > 253 || total.length === 0) {\n      result.error = true;\n    }\n\n    for (var i=0; i < labels.length; ++i) {\n      if (labels.length > 63 || labels.length === 0) {\n        result.error = true;\n        break;\n      }\n    }\n  }\n\n  if (result.error) return null;\n  return labels.join(\".\");\n};\n\nmodule.exports.toUnicode = function(domain_name, useSTD3) {\n  var result = processing(domain_name, useSTD3, PROCESSING_OPTIONS.NONTRANSITIONAL);\n\n  return {\n    domain: result.string,\n    error: result.error\n  };\n};\n\nmodule.exports.PROCESSING_OPTIONS = PROCESSING_OPTIONS;\n","\"use strict\";\r\nconst punycode = require(\"punycode\");\r\nconst tr46 = require(\"tr46\");\r\n\r\nconst specialSchemes = {\r\n  ftp: 21,\r\n  file: null,\r\n  gopher: 70,\r\n  http: 80,\r\n  https: 443,\r\n  ws: 80,\r\n  wss: 443\r\n};\r\n\r\nconst failure = Symbol(\"failure\");\r\n\r\nfunction countSymbols(str) {\r\n  return punycode.ucs2.decode(str).length;\r\n}\r\n\r\nfunction at(input, idx) {\r\n  const c = input[idx];\r\n  return isNaN(c) ? undefined : String.fromCodePoint(c);\r\n}\r\n\r\nfunction isASCIIDigit(c) {\r\n  return c >= 0x30 && c <= 0x39;\r\n}\r\n\r\nfunction isASCIIAlpha(c) {\r\n  return (c >= 0x41 && c <= 0x5A) || (c >= 0x61 && c <= 0x7A);\r\n}\r\n\r\nfunction isASCIIAlphanumeric(c) {\r\n  return isASCIIAlpha(c) || isASCIIDigit(c);\r\n}\r\n\r\nfunction isASCIIHex(c) {\r\n  return isASCIIDigit(c) || (c >= 0x41 && c <= 0x46) || (c >= 0x61 && c <= 0x66);\r\n}\r\n\r\nfunction isSingleDot(buffer) {\r\n  return buffer === \".\" || buffer.toLowerCase() === \"%2e\";\r\n}\r\n\r\nfunction isDoubleDot(buffer) {\r\n  buffer = buffer.toLowerCase();\r\n  return buffer === \"..\" || buffer === \"%2e.\" || buffer === \".%2e\" || buffer === \"%2e%2e\";\r\n}\r\n\r\nfunction isWindowsDriveLetterCodePoints(cp1, cp2) {\r\n  return isASCIIAlpha(cp1) && (cp2 === 58 || cp2 === 124);\r\n}\r\n\r\nfunction isWindowsDriveLetterString(string) {\r\n  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && (string[1] === \":\" || string[1] === \"|\");\r\n}\r\n\r\nfunction isNormalizedWindowsDriveLetterString(string) {\r\n  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && string[1] === \":\";\r\n}\r\n\r\nfunction containsForbiddenHostCodePoint(string) {\r\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|%|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\r\n}\r\n\r\nfunction containsForbiddenHostCodePointExcludingPercent(string) {\r\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\r\n}\r\n\r\nfunction isSpecialScheme(scheme) {\r\n  return specialSchemes[scheme] !== undefined;\r\n}\r\n\r\nfunction isSpecial(url) {\r\n  return isSpecialScheme(url.scheme);\r\n}\r\n\r\nfunction defaultPort(scheme) {\r\n  return specialSchemes[scheme];\r\n}\r\n\r\nfunction percentEncode(c) {\r\n  let hex = c.toString(16).toUpperCase();\r\n  if (hex.length === 1) {\r\n    hex = \"0\" + hex;\r\n  }\r\n\r\n  return \"%\" + hex;\r\n}\r\n\r\nfunction utf8PercentEncode(c) {\r\n  const buf = new Buffer(c);\r\n\r\n  let str = \"\";\r\n\r\n  for (let i = 0; i < buf.length; ++i) {\r\n    str += percentEncode(buf[i]);\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\nfunction utf8PercentDecode(str) {\r\n  const input = new Buffer(str);\r\n  const output = [];\r\n  for (let i = 0; i < input.length; ++i) {\r\n    if (input[i] !== 37) {\r\n      output.push(input[i]);\r\n    } else if (input[i] === 37 && isASCIIHex(input[i + 1]) && isASCIIHex(input[i + 2])) {\r\n      output.push(parseInt(input.slice(i + 1, i + 3).toString(), 16));\r\n      i += 2;\r\n    } else {\r\n      output.push(input[i]);\r\n    }\r\n  }\r\n  return new Buffer(output).toString();\r\n}\r\n\r\nfunction isC0ControlPercentEncode(c) {\r\n  return c <= 0x1F || c > 0x7E;\r\n}\r\n\r\nconst extraPathPercentEncodeSet = new Set([32, 34, 35, 60, 62, 63, 96, 123, 125]);\r\nfunction isPathPercentEncode(c) {\r\n  return isC0ControlPercentEncode(c) || extraPathPercentEncodeSet.has(c);\r\n}\r\n\r\nconst extraUserinfoPercentEncodeSet =\r\n  new Set([47, 58, 59, 61, 64, 91, 92, 93, 94, 124]);\r\nfunction isUserinfoPercentEncode(c) {\r\n  return isPathPercentEncode(c) || extraUserinfoPercentEncodeSet.has(c);\r\n}\r\n\r\nfunction percentEncodeChar(c, encodeSetPredicate) {\r\n  const cStr = String.fromCodePoint(c);\r\n\r\n  if (encodeSetPredicate(c)) {\r\n    return utf8PercentEncode(cStr);\r\n  }\r\n\r\n  return cStr;\r\n}\r\n\r\nfunction parseIPv4Number(input) {\r\n  let R = 10;\r\n\r\n  if (input.length >= 2 && input.charAt(0) === \"0\" && input.charAt(1).toLowerCase() === \"x\") {\r\n    input = input.substring(2);\r\n    R = 16;\r\n  } else if (input.length >= 2 && input.charAt(0) === \"0\") {\r\n    input = input.substring(1);\r\n    R = 8;\r\n  }\r\n\r\n  if (input === \"\") {\r\n    return 0;\r\n  }\r\n\r\n  const regex = R === 10 ? /[^0-9]/ : (R === 16 ? /[^0-9A-Fa-f]/ : /[^0-7]/);\r\n  if (regex.test(input)) {\r\n    return failure;\r\n  }\r\n\r\n  return parseInt(input, R);\r\n}\r\n\r\nfunction parseIPv4(input) {\r\n  const parts = input.split(\".\");\r\n  if (parts[parts.length - 1] === \"\") {\r\n    if (parts.length > 1) {\r\n      parts.pop();\r\n    }\r\n  }\r\n\r\n  if (parts.length > 4) {\r\n    return input;\r\n  }\r\n\r\n  const numbers = [];\r\n  for (const part of parts) {\r\n    if (part === \"\") {\r\n      return input;\r\n    }\r\n    const n = parseIPv4Number(part);\r\n    if (n === failure) {\r\n      return input;\r\n    }\r\n\r\n    numbers.push(n);\r\n  }\r\n\r\n  for (let i = 0; i < numbers.length - 1; ++i) {\r\n    if (numbers[i] > 255) {\r\n      return failure;\r\n    }\r\n  }\r\n  if (numbers[numbers.length - 1] >= Math.pow(256, 5 - numbers.length)) {\r\n    return failure;\r\n  }\r\n\r\n  let ipv4 = numbers.pop();\r\n  let counter = 0;\r\n\r\n  for (const n of numbers) {\r\n    ipv4 += n * Math.pow(256, 3 - counter);\r\n    ++counter;\r\n  }\r\n\r\n  return ipv4;\r\n}\r\n\r\nfunction serializeIPv4(address) {\r\n  let output = \"\";\r\n  let n = address;\r\n\r\n  for (let i = 1; i <= 4; ++i) {\r\n    output = String(n % 256) + output;\r\n    if (i !== 4) {\r\n      output = \".\" + output;\r\n    }\r\n    n = Math.floor(n / 256);\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction parseIPv6(input) {\r\n  const address = [0, 0, 0, 0, 0, 0, 0, 0];\r\n  let pieceIndex = 0;\r\n  let compress = null;\r\n  let pointer = 0;\r\n\r\n  input = punycode.ucs2.decode(input);\r\n\r\n  if (input[pointer] === 58) {\r\n    if (input[pointer + 1] !== 58) {\r\n      return failure;\r\n    }\r\n\r\n    pointer += 2;\r\n    ++pieceIndex;\r\n    compress = pieceIndex;\r\n  }\r\n\r\n  while (pointer < input.length) {\r\n    if (pieceIndex === 8) {\r\n      return failure;\r\n    }\r\n\r\n    if (input[pointer] === 58) {\r\n      if (compress !== null) {\r\n        return failure;\r\n      }\r\n      ++pointer;\r\n      ++pieceIndex;\r\n      compress = pieceIndex;\r\n      continue;\r\n    }\r\n\r\n    let value = 0;\r\n    let length = 0;\r\n\r\n    while (length < 4 && isASCIIHex(input[pointer])) {\r\n      value = value * 0x10 + parseInt(at(input, pointer), 16);\r\n      ++pointer;\r\n      ++length;\r\n    }\r\n\r\n    if (input[pointer] === 46) {\r\n      if (length === 0) {\r\n        return failure;\r\n      }\r\n\r\n      pointer -= length;\r\n\r\n      if (pieceIndex > 6) {\r\n        return failure;\r\n      }\r\n\r\n      let numbersSeen = 0;\r\n\r\n      while (input[pointer] !== undefined) {\r\n        let ipv4Piece = null;\r\n\r\n        if (numbersSeen > 0) {\r\n          if (input[pointer] === 46 && numbersSeen < 4) {\r\n            ++pointer;\r\n          } else {\r\n            return failure;\r\n          }\r\n        }\r\n\r\n        if (!isASCIIDigit(input[pointer])) {\r\n          return failure;\r\n        }\r\n\r\n        while (isASCIIDigit(input[pointer])) {\r\n          const number = parseInt(at(input, pointer));\r\n          if (ipv4Piece === null) {\r\n            ipv4Piece = number;\r\n          } else if (ipv4Piece === 0) {\r\n            return failure;\r\n          } else {\r\n            ipv4Piece = ipv4Piece * 10 + number;\r\n          }\r\n          if (ipv4Piece > 255) {\r\n            return failure;\r\n          }\r\n          ++pointer;\r\n        }\r\n\r\n        address[pieceIndex] = address[pieceIndex] * 0x100 + ipv4Piece;\r\n\r\n        ++numbersSeen;\r\n\r\n        if (numbersSeen === 2 || numbersSeen === 4) {\r\n          ++pieceIndex;\r\n        }\r\n      }\r\n\r\n      if (numbersSeen !== 4) {\r\n        return failure;\r\n      }\r\n\r\n      break;\r\n    } else if (input[pointer] === 58) {\r\n      ++pointer;\r\n      if (input[pointer] === undefined) {\r\n        return failure;\r\n      }\r\n    } else if (input[pointer] !== undefined) {\r\n      return failure;\r\n    }\r\n\r\n    address[pieceIndex] = value;\r\n    ++pieceIndex;\r\n  }\r\n\r\n  if (compress !== null) {\r\n    let swaps = pieceIndex - compress;\r\n    pieceIndex = 7;\r\n    while (pieceIndex !== 0 && swaps > 0) {\r\n      const temp = address[compress + swaps - 1];\r\n      address[compress + swaps - 1] = address[pieceIndex];\r\n      address[pieceIndex] = temp;\r\n      --pieceIndex;\r\n      --swaps;\r\n    }\r\n  } else if (compress === null && pieceIndex !== 8) {\r\n    return failure;\r\n  }\r\n\r\n  return address;\r\n}\r\n\r\nfunction serializeIPv6(address) {\r\n  let output = \"\";\r\n  const seqResult = findLongestZeroSequence(address);\r\n  const compress = seqResult.idx;\r\n  let ignore0 = false;\r\n\r\n  for (let pieceIndex = 0; pieceIndex <= 7; ++pieceIndex) {\r\n    if (ignore0 && address[pieceIndex] === 0) {\r\n      continue;\r\n    } else if (ignore0) {\r\n      ignore0 = false;\r\n    }\r\n\r\n    if (compress === pieceIndex) {\r\n      const separator = pieceIndex === 0 ? \"::\" : \":\";\r\n      output += separator;\r\n      ignore0 = true;\r\n      continue;\r\n    }\r\n\r\n    output += address[pieceIndex].toString(16);\r\n\r\n    if (pieceIndex !== 7) {\r\n      output += \":\";\r\n    }\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction parseHost(input, isSpecialArg) {\r\n  if (input[0] === \"[\") {\r\n    if (input[input.length - 1] !== \"]\") {\r\n      return failure;\r\n    }\r\n\r\n    return parseIPv6(input.substring(1, input.length - 1));\r\n  }\r\n\r\n  if (!isSpecialArg) {\r\n    return parseOpaqueHost(input);\r\n  }\r\n\r\n  const domain = utf8PercentDecode(input);\r\n  const asciiDomain = tr46.toASCII(domain, false, tr46.PROCESSING_OPTIONS.NONTRANSITIONAL, false);\r\n  if (asciiDomain === null) {\r\n    return failure;\r\n  }\r\n\r\n  if (containsForbiddenHostCodePoint(asciiDomain)) {\r\n    return failure;\r\n  }\r\n\r\n  const ipv4Host = parseIPv4(asciiDomain);\r\n  if (typeof ipv4Host === \"number\" || ipv4Host === failure) {\r\n    return ipv4Host;\r\n  }\r\n\r\n  return asciiDomain;\r\n}\r\n\r\nfunction parseOpaqueHost(input) {\r\n  if (containsForbiddenHostCodePointExcludingPercent(input)) {\r\n    return failure;\r\n  }\r\n\r\n  let output = \"\";\r\n  const decoded = punycode.ucs2.decode(input);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    output += percentEncodeChar(decoded[i], isC0ControlPercentEncode);\r\n  }\r\n  return output;\r\n}\r\n\r\nfunction findLongestZeroSequence(arr) {\r\n  let maxIdx = null;\r\n  let maxLen = 1; // only find elements > 1\r\n  let currStart = null;\r\n  let currLen = 0;\r\n\r\n  for (let i = 0; i < arr.length; ++i) {\r\n    if (arr[i] !== 0) {\r\n      if (currLen > maxLen) {\r\n        maxIdx = currStart;\r\n        maxLen = currLen;\r\n      }\r\n\r\n      currStart = null;\r\n      currLen = 0;\r\n    } else {\r\n      if (currStart === null) {\r\n        currStart = i;\r\n      }\r\n      ++currLen;\r\n    }\r\n  }\r\n\r\n  // if trailing zeros\r\n  if (currLen > maxLen) {\r\n    maxIdx = currStart;\r\n    maxLen = currLen;\r\n  }\r\n\r\n  return {\r\n    idx: maxIdx,\r\n    len: maxLen\r\n  };\r\n}\r\n\r\nfunction serializeHost(host) {\r\n  if (typeof host === \"number\") {\r\n    return serializeIPv4(host);\r\n  }\r\n\r\n  // IPv6 serializer\r\n  if (host instanceof Array) {\r\n    return \"[\" + serializeIPv6(host) + \"]\";\r\n  }\r\n\r\n  return host;\r\n}\r\n\r\nfunction trimControlChars(url) {\r\n  return url.replace(/^[\\u0000-\\u001F\\u0020]+|[\\u0000-\\u001F\\u0020]+$/g, \"\");\r\n}\r\n\r\nfunction trimTabAndNewline(url) {\r\n  return url.replace(/\\u0009|\\u000A|\\u000D/g, \"\");\r\n}\r\n\r\nfunction shortenPath(url) {\r\n  const path = url.path;\r\n  if (path.length === 0) {\r\n    return;\r\n  }\r\n  if (url.scheme === \"file\" && path.length === 1 && isNormalizedWindowsDriveLetter(path[0])) {\r\n    return;\r\n  }\r\n\r\n  path.pop();\r\n}\r\n\r\nfunction includesCredentials(url) {\r\n  return url.username !== \"\" || url.password !== \"\";\r\n}\r\n\r\nfunction cannotHaveAUsernamePasswordPort(url) {\r\n  return url.host === null || url.host === \"\" || url.cannotBeABaseURL || url.scheme === \"file\";\r\n}\r\n\r\nfunction isNormalizedWindowsDriveLetter(string) {\r\n  return /^[A-Za-z]:$/.test(string);\r\n}\r\n\r\nfunction URLStateMachine(input, base, encodingOverride, url, stateOverride) {\r\n  this.pointer = 0;\r\n  this.input = input;\r\n  this.base = base || null;\r\n  this.encodingOverride = encodingOverride || \"utf-8\";\r\n  this.stateOverride = stateOverride;\r\n  this.url = url;\r\n  this.failure = false;\r\n  this.parseError = false;\r\n\r\n  if (!this.url) {\r\n    this.url = {\r\n      scheme: \"\",\r\n      username: \"\",\r\n      password: \"\",\r\n      host: null,\r\n      port: null,\r\n      path: [],\r\n      query: null,\r\n      fragment: null,\r\n\r\n      cannotBeABaseURL: false\r\n    };\r\n\r\n    const res = trimControlChars(this.input);\r\n    if (res !== this.input) {\r\n      this.parseError = true;\r\n    }\r\n    this.input = res;\r\n  }\r\n\r\n  const res = trimTabAndNewline(this.input);\r\n  if (res !== this.input) {\r\n    this.parseError = true;\r\n  }\r\n  this.input = res;\r\n\r\n  this.state = stateOverride || \"scheme start\";\r\n\r\n  this.buffer = \"\";\r\n  this.atFlag = false;\r\n  this.arrFlag = false;\r\n  this.passwordTokenSeenFlag = false;\r\n\r\n  this.input = punycode.ucs2.decode(this.input);\r\n\r\n  for (; this.pointer <= this.input.length; ++this.pointer) {\r\n    const c = this.input[this.pointer];\r\n    const cStr = isNaN(c) ? undefined : String.fromCodePoint(c);\r\n\r\n    // exec state machine\r\n    const ret = this[\"parse \" + this.state](c, cStr);\r\n    if (!ret) {\r\n      break; // terminate algorithm\r\n    } else if (ret === failure) {\r\n      this.failure = true;\r\n      break;\r\n    }\r\n  }\r\n}\r\n\r\nURLStateMachine.prototype[\"parse scheme start\"] = function parseSchemeStart(c, cStr) {\r\n  if (isASCIIAlpha(c)) {\r\n    this.buffer += cStr.toLowerCase();\r\n    this.state = \"scheme\";\r\n  } else if (!this.stateOverride) {\r\n    this.state = \"no scheme\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse scheme\"] = function parseScheme(c, cStr) {\r\n  if (isASCIIAlphanumeric(c) || c === 43 || c === 45 || c === 46) {\r\n    this.buffer += cStr.toLowerCase();\r\n  } else if (c === 58) {\r\n    if (this.stateOverride) {\r\n      if (isSpecial(this.url) && !isSpecialScheme(this.buffer)) {\r\n        return false;\r\n      }\r\n\r\n      if (!isSpecial(this.url) && isSpecialScheme(this.buffer)) {\r\n        return false;\r\n      }\r\n\r\n      if ((includesCredentials(this.url) || this.url.port !== null) && this.buffer === \"file\") {\r\n        return false;\r\n      }\r\n\r\n      if (this.url.scheme === \"file\" && (this.url.host === \"\" || this.url.host === null)) {\r\n        return false;\r\n      }\r\n    }\r\n    this.url.scheme = this.buffer;\r\n    this.buffer = \"\";\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n    if (this.url.scheme === \"file\") {\r\n      if (this.input[this.pointer + 1] !== 47 || this.input[this.pointer + 2] !== 47) {\r\n        this.parseError = true;\r\n      }\r\n      this.state = \"file\";\r\n    } else if (isSpecial(this.url) && this.base !== null && this.base.scheme === this.url.scheme) {\r\n      this.state = \"special relative or authority\";\r\n    } else if (isSpecial(this.url)) {\r\n      this.state = \"special authority slashes\";\r\n    } else if (this.input[this.pointer + 1] === 47) {\r\n      this.state = \"path or authority\";\r\n      ++this.pointer;\r\n    } else {\r\n      this.url.cannotBeABaseURL = true;\r\n      this.url.path.push(\"\");\r\n      this.state = \"cannot-be-a-base-URL path\";\r\n    }\r\n  } else if (!this.stateOverride) {\r\n    this.buffer = \"\";\r\n    this.state = \"no scheme\";\r\n    this.pointer = -1;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse no scheme\"] = function parseNoScheme(c) {\r\n  if (this.base === null || (this.base.cannotBeABaseURL && c !== 35)) {\r\n    return failure;\r\n  } else if (this.base.cannotBeABaseURL && c === 35) {\r\n    this.url.scheme = this.base.scheme;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n    this.url.fragment = \"\";\r\n    this.url.cannotBeABaseURL = true;\r\n    this.state = \"fragment\";\r\n  } else if (this.base.scheme === \"file\") {\r\n    this.state = \"file\";\r\n    --this.pointer;\r\n  } else {\r\n    this.state = \"relative\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special relative or authority\"] = function parseSpecialRelativeOrAuthority(c) {\r\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\r\n    this.state = \"special authority ignore slashes\";\r\n    ++this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    this.state = \"relative\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path or authority\"] = function parsePathOrAuthority(c) {\r\n  if (c === 47) {\r\n    this.state = \"authority\";\r\n  } else {\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse relative\"] = function parseRelative(c) {\r\n  this.url.scheme = this.base.scheme;\r\n  if (isNaN(c)) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n  } else if (c === 47) {\r\n    this.state = \"relative slash\";\r\n  } else if (c === 63) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (c === 35) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else if (isSpecial(this.url) && c === 92) {\r\n    this.parseError = true;\r\n    this.state = \"relative slash\";\r\n  } else {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice(0, this.base.path.length - 1);\r\n\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse relative slash\"] = function parseRelativeSlash(c) {\r\n  if (isSpecial(this.url) && (c === 47 || c === 92)) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"special authority ignore slashes\";\r\n  } else if (c === 47) {\r\n    this.state = \"authority\";\r\n  } else {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special authority slashes\"] = function parseSpecialAuthoritySlashes(c) {\r\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\r\n    this.state = \"special authority ignore slashes\";\r\n    ++this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    this.state = \"special authority ignore slashes\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special authority ignore slashes\"] = function parseSpecialAuthorityIgnoreSlashes(c) {\r\n  if (c !== 47 && c !== 92) {\r\n    this.state = \"authority\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse authority\"] = function parseAuthority(c, cStr) {\r\n  if (c === 64) {\r\n    this.parseError = true;\r\n    if (this.atFlag) {\r\n      this.buffer = \"%40\" + this.buffer;\r\n    }\r\n    this.atFlag = true;\r\n\r\n    // careful, this is based on buffer and has its own pointer (this.pointer != pointer) and inner chars\r\n    const len = countSymbols(this.buffer);\r\n    for (let pointer = 0; pointer < len; ++pointer) {\r\n      const codePoint = this.buffer.codePointAt(pointer);\r\n\r\n      if (codePoint === 58 && !this.passwordTokenSeenFlag) {\r\n        this.passwordTokenSeenFlag = true;\r\n        continue;\r\n      }\r\n      const encodedCodePoints = percentEncodeChar(codePoint, isUserinfoPercentEncode);\r\n      if (this.passwordTokenSeenFlag) {\r\n        this.url.password += encodedCodePoints;\r\n      } else {\r\n        this.url.username += encodedCodePoints;\r\n      }\r\n    }\r\n    this.buffer = \"\";\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92)) {\r\n    if (this.atFlag && this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    }\r\n    this.pointer -= countSymbols(this.buffer) + 1;\r\n    this.buffer = \"\";\r\n    this.state = \"host\";\r\n  } else {\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse hostname\"] =\r\nURLStateMachine.prototype[\"parse host\"] = function parseHostName(c, cStr) {\r\n  if (this.stateOverride && this.url.scheme === \"file\") {\r\n    --this.pointer;\r\n    this.state = \"file host\";\r\n  } else if (c === 58 && !this.arrFlag) {\r\n    if (this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    }\r\n\r\n    const host = parseHost(this.buffer, isSpecial(this.url));\r\n    if (host === failure) {\r\n      return failure;\r\n    }\r\n\r\n    this.url.host = host;\r\n    this.buffer = \"\";\r\n    this.state = \"port\";\r\n    if (this.stateOverride === \"hostname\") {\r\n      return false;\r\n    }\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92)) {\r\n    --this.pointer;\r\n    if (isSpecial(this.url) && this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    } else if (this.stateOverride && this.buffer === \"\" &&\r\n               (includesCredentials(this.url) || this.url.port !== null)) {\r\n      this.parseError = true;\r\n      return false;\r\n    }\r\n\r\n    const host = parseHost(this.buffer, isSpecial(this.url));\r\n    if (host === failure) {\r\n      return failure;\r\n    }\r\n\r\n    this.url.host = host;\r\n    this.buffer = \"\";\r\n    this.state = \"path start\";\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n  } else {\r\n    if (c === 91) {\r\n      this.arrFlag = true;\r\n    } else if (c === 93) {\r\n      this.arrFlag = false;\r\n    }\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse port\"] = function parsePort(c, cStr) {\r\n  if (isASCIIDigit(c)) {\r\n    this.buffer += cStr;\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92) ||\r\n             this.stateOverride) {\r\n    if (this.buffer !== \"\") {\r\n      const port = parseInt(this.buffer);\r\n      if (port > Math.pow(2, 16) - 1) {\r\n        this.parseError = true;\r\n        return failure;\r\n      }\r\n      this.url.port = port === defaultPort(this.url.scheme) ? null : port;\r\n      this.buffer = \"\";\r\n    }\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n    this.state = \"path start\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nconst fileOtherwiseCodePoints = new Set([47, 92, 63, 35]);\r\n\r\nURLStateMachine.prototype[\"parse file\"] = function parseFile(c) {\r\n  this.url.scheme = \"file\";\r\n\r\n  if (c === 47 || c === 92) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"file slash\";\r\n  } else if (this.base !== null && this.base.scheme === \"file\") {\r\n    if (isNaN(c)) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = this.base.query;\r\n    } else if (c === 63) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = \"\";\r\n      this.state = \"query\";\r\n    } else if (c === 35) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = this.base.query;\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    } else {\r\n      if (this.input.length - this.pointer - 1 === 0 || // remaining consists of 0 code points\r\n          !isWindowsDriveLetterCodePoints(c, this.input[this.pointer + 1]) ||\r\n          (this.input.length - this.pointer - 1 >= 2 && // remaining has at least 2 code points\r\n           !fileOtherwiseCodePoints.has(this.input[this.pointer + 2]))) {\r\n        this.url.host = this.base.host;\r\n        this.url.path = this.base.path.slice();\r\n        shortenPath(this.url);\r\n      } else {\r\n        this.parseError = true;\r\n      }\r\n\r\n      this.state = \"path\";\r\n      --this.pointer;\r\n    }\r\n  } else {\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse file slash\"] = function parseFileSlash(c) {\r\n  if (c === 47 || c === 92) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"file host\";\r\n  } else {\r\n    if (this.base !== null && this.base.scheme === \"file\") {\r\n      if (isNormalizedWindowsDriveLetterString(this.base.path[0])) {\r\n        this.url.path.push(this.base.path[0]);\r\n      } else {\r\n        this.url.host = this.base.host;\r\n      }\r\n    }\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse file host\"] = function parseFileHost(c, cStr) {\r\n  if (isNaN(c) || c === 47 || c === 92 || c === 63 || c === 35) {\r\n    --this.pointer;\r\n    if (!this.stateOverride && isWindowsDriveLetterString(this.buffer)) {\r\n      this.parseError = true;\r\n      this.state = \"path\";\r\n    } else if (this.buffer === \"\") {\r\n      this.url.host = \"\";\r\n      if (this.stateOverride) {\r\n        return false;\r\n      }\r\n      this.state = \"path start\";\r\n    } else {\r\n      let host = parseHost(this.buffer, isSpecial(this.url));\r\n      if (host === failure) {\r\n        return failure;\r\n      }\r\n      if (host === \"localhost\") {\r\n        host = \"\";\r\n      }\r\n      this.url.host = host;\r\n\r\n      if (this.stateOverride) {\r\n        return false;\r\n      }\r\n\r\n      this.buffer = \"\";\r\n      this.state = \"path start\";\r\n    }\r\n  } else {\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path start\"] = function parsePathStart(c) {\r\n  if (isSpecial(this.url)) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"path\";\r\n\r\n    if (c !== 47 && c !== 92) {\r\n      --this.pointer;\r\n    }\r\n  } else if (!this.stateOverride && c === 63) {\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (!this.stateOverride && c === 35) {\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else if (c !== undefined) {\r\n    this.state = \"path\";\r\n    if (c !== 47) {\r\n      --this.pointer;\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path\"] = function parsePath(c) {\r\n  if (isNaN(c) || c === 47 || (isSpecial(this.url) && c === 92) ||\r\n      (!this.stateOverride && (c === 63 || c === 35))) {\r\n    if (isSpecial(this.url) && c === 92) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (isDoubleDot(this.buffer)) {\r\n      shortenPath(this.url);\r\n      if (c !== 47 && !(isSpecial(this.url) && c === 92)) {\r\n        this.url.path.push(\"\");\r\n      }\r\n    } else if (isSingleDot(this.buffer) && c !== 47 &&\r\n               !(isSpecial(this.url) && c === 92)) {\r\n      this.url.path.push(\"\");\r\n    } else if (!isSingleDot(this.buffer)) {\r\n      if (this.url.scheme === \"file\" && this.url.path.length === 0 && isWindowsDriveLetterString(this.buffer)) {\r\n        if (this.url.host !== \"\" && this.url.host !== null) {\r\n          this.parseError = true;\r\n          this.url.host = \"\";\r\n        }\r\n        this.buffer = this.buffer[0] + \":\";\r\n      }\r\n      this.url.path.push(this.buffer);\r\n    }\r\n    this.buffer = \"\";\r\n    if (this.url.scheme === \"file\" && (c === undefined || c === 63 || c === 35)) {\r\n      while (this.url.path.length > 1 && this.url.path[0] === \"\") {\r\n        this.parseError = true;\r\n        this.url.path.shift();\r\n      }\r\n    }\r\n    if (c === 63) {\r\n      this.url.query = \"\";\r\n      this.state = \"query\";\r\n    }\r\n    if (c === 35) {\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    }\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.buffer += percentEncodeChar(c, isPathPercentEncode);\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse cannot-be-a-base-URL path\"] = function parseCannotBeABaseURLPath(c) {\r\n  if (c === 63) {\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (c === 35) {\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else {\r\n    // TODO: Add: not a URL code point\r\n    if (!isNaN(c) && c !== 37) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (c === 37 &&\r\n        (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n         !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (!isNaN(c)) {\r\n      this.url.path[0] = this.url.path[0] + percentEncodeChar(c, isC0ControlPercentEncode);\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse query\"] = function parseQuery(c, cStr) {\r\n  if (isNaN(c) || (!this.stateOverride && c === 35)) {\r\n    if (!isSpecial(this.url) || this.url.scheme === \"ws\" || this.url.scheme === \"wss\") {\r\n      this.encodingOverride = \"utf-8\";\r\n    }\r\n\r\n    const buffer = new Buffer(this.buffer); // TODO: Use encoding override instead\r\n    for (let i = 0; i < buffer.length; ++i) {\r\n      if (buffer[i] < 0x21 || buffer[i] > 0x7E || buffer[i] === 0x22 || buffer[i] === 0x23 ||\r\n          buffer[i] === 0x3C || buffer[i] === 0x3E) {\r\n        this.url.query += percentEncode(buffer[i]);\r\n      } else {\r\n        this.url.query += String.fromCodePoint(buffer[i]);\r\n      }\r\n    }\r\n\r\n    this.buffer = \"\";\r\n    if (c === 35) {\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    }\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse fragment\"] = function parseFragment(c) {\r\n  if (isNaN(c)) { // do nothing\r\n  } else if (c === 0x0) {\r\n    this.parseError = true;\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.url.fragment += percentEncodeChar(c, isC0ControlPercentEncode);\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nfunction serializeURL(url, excludeFragment) {\r\n  let output = url.scheme + \":\";\r\n  if (url.host !== null) {\r\n    output += \"//\";\r\n\r\n    if (url.username !== \"\" || url.password !== \"\") {\r\n      output += url.username;\r\n      if (url.password !== \"\") {\r\n        output += \":\" + url.password;\r\n      }\r\n      output += \"@\";\r\n    }\r\n\r\n    output += serializeHost(url.host);\r\n\r\n    if (url.port !== null) {\r\n      output += \":\" + url.port;\r\n    }\r\n  } else if (url.host === null && url.scheme === \"file\") {\r\n    output += \"//\";\r\n  }\r\n\r\n  if (url.cannotBeABaseURL) {\r\n    output += url.path[0];\r\n  } else {\r\n    for (const string of url.path) {\r\n      output += \"/\" + string;\r\n    }\r\n  }\r\n\r\n  if (url.query !== null) {\r\n    output += \"?\" + url.query;\r\n  }\r\n\r\n  if (!excludeFragment && url.fragment !== null) {\r\n    output += \"#\" + url.fragment;\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction serializeOrigin(tuple) {\r\n  let result = tuple.scheme + \"://\";\r\n  result += serializeHost(tuple.host);\r\n\r\n  if (tuple.port !== null) {\r\n    result += \":\" + tuple.port;\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nmodule.exports.serializeURL = serializeURL;\r\n\r\nmodule.exports.serializeURLOrigin = function (url) {\r\n  // https://url.spec.whatwg.org/#concept-url-origin\r\n  switch (url.scheme) {\r\n    case \"blob\":\r\n      try {\r\n        return module.exports.serializeURLOrigin(module.exports.parseURL(url.path[0]));\r\n      } catch (e) {\r\n        // serializing an opaque origin returns \"null\"\r\n        return \"null\";\r\n      }\r\n    case \"ftp\":\r\n    case \"gopher\":\r\n    case \"http\":\r\n    case \"https\":\r\n    case \"ws\":\r\n    case \"wss\":\r\n      return serializeOrigin({\r\n        scheme: url.scheme,\r\n        host: url.host,\r\n        port: url.port\r\n      });\r\n    case \"file\":\r\n      // spec says \"exercise to the reader\", chrome says \"file://\"\r\n      return \"file://\";\r\n    default:\r\n      // serializing an opaque origin returns \"null\"\r\n      return \"null\";\r\n  }\r\n};\r\n\r\nmodule.exports.basicURLParse = function (input, options) {\r\n  if (options === undefined) {\r\n    options = {};\r\n  }\r\n\r\n  const usm = new URLStateMachine(input, options.baseURL, options.encodingOverride, options.url, options.stateOverride);\r\n  if (usm.failure) {\r\n    return \"failure\";\r\n  }\r\n\r\n  return usm.url;\r\n};\r\n\r\nmodule.exports.setTheUsername = function (url, username) {\r\n  url.username = \"\";\r\n  const decoded = punycode.ucs2.decode(username);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    url.username += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\r\n  }\r\n};\r\n\r\nmodule.exports.setThePassword = function (url, password) {\r\n  url.password = \"\";\r\n  const decoded = punycode.ucs2.decode(password);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    url.password += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\r\n  }\r\n};\r\n\r\nmodule.exports.serializeHost = serializeHost;\r\n\r\nmodule.exports.cannotHaveAUsernamePasswordPort = cannotHaveAUsernamePasswordPort;\r\n\r\nmodule.exports.serializeInteger = function (integer) {\r\n  return String(integer);\r\n};\r\n\r\nmodule.exports.parseURL = function (input, options) {\r\n  if (options === undefined) {\r\n    options = {};\r\n  }\r\n\r\n  // We don't handle blobs, so this just delegates:\r\n  return module.exports.basicURLParse(input, { baseURL: options.baseURL, encodingOverride: options.encodingOverride });\r\n};\r\n","\"use strict\";\nconst usm = require(\"./url-state-machine\");\n\nexports.implementation = class URLImpl {\n  constructor(constructorArgs) {\n    const url = constructorArgs[0];\n    const base = constructorArgs[1];\n\n    let parsedBase = null;\n    if (base !== undefined) {\n      parsedBase = usm.basicURLParse(base);\n      if (parsedBase === \"failure\") {\n        throw new TypeError(\"Invalid base URL\");\n      }\n    }\n\n    const parsedURL = usm.basicURLParse(url, { baseURL: parsedBase });\n    if (parsedURL === \"failure\") {\n      throw new TypeError(\"Invalid URL\");\n    }\n\n    this._url = parsedURL;\n\n    // TODO: query stuff\n  }\n\n  get href() {\n    return usm.serializeURL(this._url);\n  }\n\n  set href(v) {\n    const parsedURL = usm.basicURLParse(v);\n    if (parsedURL === \"failure\") {\n      throw new TypeError(\"Invalid URL\");\n    }\n\n    this._url = parsedURL;\n  }\n\n  get origin() {\n    return usm.serializeURLOrigin(this._url);\n  }\n\n  get protocol() {\n    return this._url.scheme + \":\";\n  }\n\n  set protocol(v) {\n    usm.basicURLParse(v + \":\", { url: this._url, stateOverride: \"scheme start\" });\n  }\n\n  get username() {\n    return this._url.username;\n  }\n\n  set username(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setTheUsername(this._url, v);\n  }\n\n  get password() {\n    return this._url.password;\n  }\n\n  set password(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setThePassword(this._url, v);\n  }\n\n  get host() {\n    const url = this._url;\n\n    if (url.host === null) {\n      return \"\";\n    }\n\n    if (url.port === null) {\n      return usm.serializeHost(url.host);\n    }\n\n    return usm.serializeHost(url.host) + \":\" + usm.serializeInteger(url.port);\n  }\n\n  set host(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"host\" });\n  }\n\n  get hostname() {\n    if (this._url.host === null) {\n      return \"\";\n    }\n\n    return usm.serializeHost(this._url.host);\n  }\n\n  set hostname(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"hostname\" });\n  }\n\n  get port() {\n    if (this._url.port === null) {\n      return \"\";\n    }\n\n    return usm.serializeInteger(this._url.port);\n  }\n\n  set port(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    if (v === \"\") {\n      this._url.port = null;\n    } else {\n      usm.basicURLParse(v, { url: this._url, stateOverride: \"port\" });\n    }\n  }\n\n  get pathname() {\n    if (this._url.cannotBeABaseURL) {\n      return this._url.path[0];\n    }\n\n    if (this._url.path.length === 0) {\n      return \"\";\n    }\n\n    return \"/\" + this._url.path.join(\"/\");\n  }\n\n  set pathname(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    this._url.path = [];\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"path start\" });\n  }\n\n  get search() {\n    if (this._url.query === null || this._url.query === \"\") {\n      return \"\";\n    }\n\n    return \"?\" + this._url.query;\n  }\n\n  set search(v) {\n    // TODO: query stuff\n\n    const url = this._url;\n\n    if (v === \"\") {\n      url.query = null;\n      return;\n    }\n\n    const input = v[0] === \"?\" ? v.substring(1) : v;\n    url.query = \"\";\n    usm.basicURLParse(input, { url, stateOverride: \"query\" });\n  }\n\n  get hash() {\n    if (this._url.fragment === null || this._url.fragment === \"\") {\n      return \"\";\n    }\n\n    return \"#\" + this._url.fragment;\n  }\n\n  set hash(v) {\n    if (v === \"\") {\n      this._url.fragment = null;\n      return;\n    }\n\n    const input = v[0] === \"#\" ? v.substring(1) : v;\n    this._url.fragment = \"\";\n    usm.basicURLParse(input, { url: this._url, stateOverride: \"fragment\" });\n  }\n\n  toJSON() {\n    return this.href;\n  }\n};\n","\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\nconst Impl = require(\".//URL-impl.js\");\n\nconst impl = utils.implSymbol;\n\nfunction URL(url) {\n  if (!this || this[impl] || !(this instanceof URL)) {\n    throw new TypeError(\"Failed to construct 'URL': Please use the 'new' operator, this DOM object constructor cannot be called as a function.\");\n  }\n  if (arguments.length < 1) {\n    throw new TypeError(\"Failed to construct 'URL': 1 argument required, but only \" + arguments.length + \" present.\");\n  }\n  const args = [];\n  for (let i = 0; i < arguments.length && i < 2; ++i) {\n    args[i] = arguments[i];\n  }\n  args[0] = conversions[\"USVString\"](args[0]);\n  if (args[1] !== undefined) {\n  args[1] = conversions[\"USVString\"](args[1]);\n  }\n\n  module.exports.setup(this, args);\n}\n\nURL.prototype.toJSON = function toJSON() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  const args = [];\n  for (let i = 0; i < arguments.length && i < 0; ++i) {\n    args[i] = arguments[i];\n  }\n  return this[impl].toJSON.apply(this[impl], args);\n};\nObject.defineProperty(URL.prototype, \"href\", {\n  get() {\n    return this[impl].href;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].href = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nURL.prototype.toString = function () {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  return this.href;\n};\n\nObject.defineProperty(URL.prototype, \"origin\", {\n  get() {\n    return this[impl].origin;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"protocol\", {\n  get() {\n    return this[impl].protocol;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].protocol = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"username\", {\n  get() {\n    return this[impl].username;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].username = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"password\", {\n  get() {\n    return this[impl].password;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].password = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"host\", {\n  get() {\n    return this[impl].host;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].host = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"hostname\", {\n  get() {\n    return this[impl].hostname;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].hostname = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"port\", {\n  get() {\n    return this[impl].port;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].port = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"pathname\", {\n  get() {\n    return this[impl].pathname;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].pathname = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"search\", {\n  get() {\n    return this[impl].search;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].search = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"hash\", {\n  get() {\n    return this[impl].hash;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].hash = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\n\nmodule.exports = {\n  is(obj) {\n    return !!obj && obj[impl] instanceof Impl.implementation;\n  },\n  create(constructorArgs, privateData) {\n    let obj = Object.create(URL.prototype);\n    this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    obj[impl] = new Impl.implementation(constructorArgs, privateData);\n    obj[impl][utils.wrapperSymbol] = obj;\n  },\n  interface: URL,\n  expose: {\n    Window: { URL: URL },\n    Worker: { URL: URL }\n  }\n};\n\n","\"use strict\";\n\nexports.URL = require(\"./URL\").interface;\nexports.serializeURL = require(\"./url-state-machine\").serializeURL;\nexports.serializeURLOrigin = require(\"./url-state-machine\").serializeURLOrigin;\nexports.basicURLParse = require(\"./url-state-machine\").basicURLParse;\nexports.setTheUsername = require(\"./url-state-machine\").setTheUsername;\nexports.setThePassword = require(\"./url-state-machine\").setThePassword;\nexports.serializeHost = require(\"./url-state-machine\").serializeHost;\nexports.serializeInteger = require(\"./url-state-machine\").serializeInteger;\nexports.parseURL = require(\"./url-state-machine\").parseURL;\n","import Stream from 'stream';\nimport http from 'http';\nimport Url from 'url';\nimport whatwgUrl from 'whatwg-url';\nimport https from 'https';\nimport zlib from 'zlib';\n\n// Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js\n\n// fix for \"Readable\" isn't a named export issue\nconst Readable = Stream.Readable;\n\nconst BUFFER = Symbol('buffer');\nconst TYPE = Symbol('type');\n\nclass Blob {\n\tconstructor() {\n\t\tthis[TYPE] = '';\n\n\t\tconst blobParts = arguments[0];\n\t\tconst options = arguments[1];\n\n\t\tconst buffers = [];\n\t\tlet size = 0;\n\n\t\tif (blobParts) {\n\t\t\tconst a = blobParts;\n\t\t\tconst length = Number(a.length);\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tconst element = a[i];\n\t\t\t\tlet buffer;\n\t\t\t\tif (element instanceof Buffer) {\n\t\t\t\t\tbuffer = element;\n\t\t\t\t} else if (ArrayBuffer.isView(element)) {\n\t\t\t\t\tbuffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);\n\t\t\t\t} else if (element instanceof ArrayBuffer) {\n\t\t\t\t\tbuffer = Buffer.from(element);\n\t\t\t\t} else if (element instanceof Blob) {\n\t\t\t\t\tbuffer = element[BUFFER];\n\t\t\t\t} else {\n\t\t\t\t\tbuffer = Buffer.from(typeof element === 'string' ? element : String(element));\n\t\t\t\t}\n\t\t\t\tsize += buffer.length;\n\t\t\t\tbuffers.push(buffer);\n\t\t\t}\n\t\t}\n\n\t\tthis[BUFFER] = Buffer.concat(buffers);\n\n\t\tlet type = options && options.type !== undefined && String(options.type).toLowerCase();\n\t\tif (type && !/[^\\u0020-\\u007E]/.test(type)) {\n\t\t\tthis[TYPE] = type;\n\t\t}\n\t}\n\tget size() {\n\t\treturn this[BUFFER].length;\n\t}\n\tget type() {\n\t\treturn this[TYPE];\n\t}\n\ttext() {\n\t\treturn Promise.resolve(this[BUFFER].toString());\n\t}\n\tarrayBuffer() {\n\t\tconst buf = this[BUFFER];\n\t\tconst ab = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\treturn Promise.resolve(ab);\n\t}\n\tstream() {\n\t\tconst readable = new Readable();\n\t\treadable._read = function () {};\n\t\treadable.push(this[BUFFER]);\n\t\treadable.push(null);\n\t\treturn readable;\n\t}\n\ttoString() {\n\t\treturn '[object Blob]';\n\t}\n\tslice() {\n\t\tconst size = this.size;\n\n\t\tconst start = arguments[0];\n\t\tconst end = arguments[1];\n\t\tlet relativeStart, relativeEnd;\n\t\tif (start === undefined) {\n\t\t\trelativeStart = 0;\n\t\t} else if (start < 0) {\n\t\t\trelativeStart = Math.max(size + start, 0);\n\t\t} else {\n\t\t\trelativeStart = Math.min(start, size);\n\t\t}\n\t\tif (end === undefined) {\n\t\t\trelativeEnd = size;\n\t\t} else if (end < 0) {\n\t\t\trelativeEnd = Math.max(size + end, 0);\n\t\t} else {\n\t\t\trelativeEnd = Math.min(end, size);\n\t\t}\n\t\tconst span = Math.max(relativeEnd - relativeStart, 0);\n\n\t\tconst buffer = this[BUFFER];\n\t\tconst slicedBuffer = buffer.slice(relativeStart, relativeStart + span);\n\t\tconst blob = new Blob([], { type: arguments[2] });\n\t\tblob[BUFFER] = slicedBuffer;\n\t\treturn blob;\n\t}\n}\n\nObject.defineProperties(Blob.prototype, {\n\tsize: { enumerable: true },\n\ttype: { enumerable: true },\n\tslice: { enumerable: true }\n});\n\nObject.defineProperty(Blob.prototype, Symbol.toStringTag, {\n\tvalue: 'Blob',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * fetch-error.js\n *\n * FetchError interface for operational errors\n */\n\n/**\n * Create FetchError instance\n *\n * @param   String      message      Error message for human\n * @param   String      type         Error type for machine\n * @param   String      systemError  For Node.js system error\n * @return  FetchError\n */\nfunction FetchError(message, type, systemError) {\n  Error.call(this, message);\n\n  this.message = message;\n  this.type = type;\n\n  // when err.type is `system`, err.code contains system error code\n  if (systemError) {\n    this.code = this.errno = systemError.code;\n  }\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nFetchError.prototype = Object.create(Error.prototype);\nFetchError.prototype.constructor = FetchError;\nFetchError.prototype.name = 'FetchError';\n\nlet convert;\ntry {\n\tconvert = require('encoding').convert;\n} catch (e) {}\n\nconst INTERNALS = Symbol('Body internals');\n\n// fix an issue where \"PassThrough\" isn't a named export for node <10\nconst PassThrough = Stream.PassThrough;\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nfunction Body(body) {\n\tvar _this = this;\n\n\tvar _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t    _ref$size = _ref.size;\n\n\tlet size = _ref$size === undefined ? 0 : _ref$size;\n\tvar _ref$timeout = _ref.timeout;\n\tlet timeout = _ref$timeout === undefined ? 0 : _ref$timeout;\n\n\tif (body == null) {\n\t\t// body is undefined or null\n\t\tbody = null;\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\tbody = Buffer.from(body.toString());\n\t} else if (isBlob(body)) ; else if (Buffer.isBuffer(body)) ; else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\tbody = Buffer.from(body);\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\tbody = Buffer.from(body.buffer, body.byteOffset, body.byteLength);\n\t} else if (body instanceof Stream) ; else {\n\t\t// none of the above\n\t\t// coerce to string then buffer\n\t\tbody = Buffer.from(String(body));\n\t}\n\tthis[INTERNALS] = {\n\t\tbody,\n\t\tdisturbed: false,\n\t\terror: null\n\t};\n\tthis.size = size;\n\tthis.timeout = timeout;\n\n\tif (body instanceof Stream) {\n\t\tbody.on('error', function (err) {\n\t\t\tconst error = err.name === 'AbortError' ? err : new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, 'system', err);\n\t\t\t_this[INTERNALS].error = error;\n\t\t});\n\t}\n}\n\nBody.prototype = {\n\tget body() {\n\t\treturn this[INTERNALS].body;\n\t},\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t},\n\n\t/**\n  * Decode response as ArrayBuffer\n  *\n  * @return  Promise\n  */\n\tarrayBuffer() {\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\t});\n\t},\n\n\t/**\n  * Return raw response as Blob\n  *\n  * @return Promise\n  */\n\tblob() {\n\t\tlet ct = this.headers && this.headers.get('content-type') || '';\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn Object.assign(\n\t\t\t// Prevent copying\n\t\t\tnew Blob([], {\n\t\t\t\ttype: ct.toLowerCase()\n\t\t\t}), {\n\t\t\t\t[BUFFER]: buf\n\t\t\t});\n\t\t});\n\t},\n\n\t/**\n  * Decode response as json\n  *\n  * @return  Promise\n  */\n\tjson() {\n\t\tvar _this2 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(buffer.toString());\n\t\t\t} catch (err) {\n\t\t\t\treturn Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, 'invalid-json'));\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n  * Decode response as text\n  *\n  * @return  Promise\n  */\n\ttext() {\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn buffer.toString();\n\t\t});\n\t},\n\n\t/**\n  * Decode response as buffer (non-spec api)\n  *\n  * @return  Promise\n  */\n\tbuffer() {\n\t\treturn consumeBody.call(this);\n\t},\n\n\t/**\n  * Decode response as text, while automatically detecting the encoding and\n  * trying to decode to UTF-8 (non-spec api)\n  *\n  * @return  Promise\n  */\n\ttextConverted() {\n\t\tvar _this3 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn convertBody(buffer, _this3.headers);\n\t\t});\n\t}\n};\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: { enumerable: true },\n\tbodyUsed: { enumerable: true },\n\tarrayBuffer: { enumerable: true },\n\tblob: { enumerable: true },\n\tjson: { enumerable: true },\n\ttext: { enumerable: true }\n});\n\nBody.mixIn = function (proto) {\n\tfor (const name of Object.getOwnPropertyNames(Body.prototype)) {\n\t\t// istanbul ignore else: future proof\n\t\tif (!(name in proto)) {\n\t\t\tconst desc = Object.getOwnPropertyDescriptor(Body.prototype, name);\n\t\t\tObject.defineProperty(proto, name, desc);\n\t\t}\n\t}\n};\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return  Promise\n */\nfunction consumeBody() {\n\tvar _this4 = this;\n\n\tif (this[INTERNALS].disturbed) {\n\t\treturn Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));\n\t}\n\n\tthis[INTERNALS].disturbed = true;\n\n\tif (this[INTERNALS].error) {\n\t\treturn Body.Promise.reject(this[INTERNALS].error);\n\t}\n\n\tlet body = this.body;\n\n\t// body is null\n\tif (body === null) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is blob\n\tif (isBlob(body)) {\n\t\tbody = body.stream();\n\t}\n\n\t// body is buffer\n\tif (Buffer.isBuffer(body)) {\n\t\treturn Body.Promise.resolve(body);\n\t}\n\n\t// istanbul ignore if: should never happen\n\tif (!(body instanceof Stream)) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is stream\n\t// get ready to actually consume the body\n\tlet accum = [];\n\tlet accumBytes = 0;\n\tlet abort = false;\n\n\treturn new Body.Promise(function (resolve, reject) {\n\t\tlet resTimeout;\n\n\t\t// allow timeout on slow response body\n\t\tif (_this4.timeout) {\n\t\t\tresTimeout = setTimeout(function () {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, 'body-timeout'));\n\t\t\t}, _this4.timeout);\n\t\t}\n\n\t\t// handle stream errors\n\t\tbody.on('error', function (err) {\n\t\t\tif (err.name === 'AbortError') {\n\t\t\t\t// if the request was aborted, reject with this Error\n\t\t\t\tabort = true;\n\t\t\t\treject(err);\n\t\t\t} else {\n\t\t\t\t// other errors, such as incorrect content-encoding\n\t\t\t\treject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\n\t\tbody.on('data', function (chunk) {\n\t\t\tif (abort || chunk === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (_this4.size && accumBytes + chunk.length > _this4.size) {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, 'max-size'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t});\n\n\t\tbody.on('end', function () {\n\t\t\tif (abort) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclearTimeout(resTimeout);\n\n\t\t\ttry {\n\t\t\t\tresolve(Buffer.concat(accum, accumBytes));\n\t\t\t} catch (err) {\n\t\t\t\t// handle streams that have accumulated too much data (issue #414)\n\t\t\t\treject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Detect buffer encoding and convert to target encoding\n * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding\n *\n * @param   Buffer  buffer    Incoming buffer\n * @param   String  encoding  Target encoding\n * @return  String\n */\nfunction convertBody(buffer, headers) {\n\tif (typeof convert !== 'function') {\n\t\tthrow new Error('The package `encoding` must be installed to use the textConverted() function');\n\t}\n\n\tconst ct = headers.get('content-type');\n\tlet charset = 'utf-8';\n\tlet res, str;\n\n\t// header\n\tif (ct) {\n\t\tres = /charset=([^;]*)/i.exec(ct);\n\t}\n\n\t// no charset in content type, peek at response body for at most 1024 bytes\n\tstr = buffer.slice(0, 1024).toString();\n\n\t// html5\n\tif (!res && str) {\n\t\tres = /<meta.+?charset=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// html4\n\tif (!res && str) {\n\t\tres = /<meta[\\s]+?http-equiv=(['\"])content-type\\1[\\s]+?content=(['\"])(.+?)\\2/i.exec(str);\n\t\tif (!res) {\n\t\t\tres = /<meta[\\s]+?content=(['\"])(.+?)\\1[\\s]+?http-equiv=(['\"])content-type\\3/i.exec(str);\n\t\t\tif (res) {\n\t\t\t\tres.pop(); // drop last quote\n\t\t\t}\n\t\t}\n\n\t\tif (res) {\n\t\t\tres = /charset=(.*)/i.exec(res.pop());\n\t\t}\n\t}\n\n\t// xml\n\tif (!res && str) {\n\t\tres = /<\\?xml.+?encoding=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// found charset\n\tif (res) {\n\t\tcharset = res.pop();\n\n\t\t// prevent decode issues when sites use incorrect encoding\n\t\t// ref: https://hsivonen.fi/encoding-menu/\n\t\tif (charset === 'gb2312' || charset === 'gbk') {\n\t\t\tcharset = 'gb18030';\n\t\t}\n\t}\n\n\t// turn raw buffers into a single utf-8 buffer\n\treturn convert(buffer, 'UTF-8', charset).toString();\n}\n\n/**\n * Detect a URLSearchParams object\n * ref: https://github.com/bitinn/node-fetch/issues/296#issuecomment-307598143\n *\n * @param   Object  obj     Object to detect by type or brand\n * @return  String\n */\nfunction isURLSearchParams(obj) {\n\t// Duck-typing as a necessary condition.\n\tif (typeof obj !== 'object' || typeof obj.append !== 'function' || typeof obj.delete !== 'function' || typeof obj.get !== 'function' || typeof obj.getAll !== 'function' || typeof obj.has !== 'function' || typeof obj.set !== 'function') {\n\t\treturn false;\n\t}\n\n\t// Brand-checking and more duck-typing as optional condition.\n\treturn obj.constructor.name === 'URLSearchParams' || Object.prototype.toString.call(obj) === '[object URLSearchParams]' || typeof obj.sort === 'function';\n}\n\n/**\n * Check if `obj` is a W3C `Blob` object (which `File` inherits from)\n * @param  {*} obj\n * @return {boolean}\n */\nfunction isBlob(obj) {\n\treturn typeof obj === 'object' && typeof obj.arrayBuffer === 'function' && typeof obj.type === 'string' && typeof obj.stream === 'function' && typeof obj.constructor === 'function' && typeof obj.constructor.name === 'string' && /^(Blob|File)$/.test(obj.constructor.name) && /^(Blob|File)$/.test(obj[Symbol.toStringTag]);\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed  instance  Response or Request instance\n * @return  Mixed\n */\nfunction clone(instance) {\n\tlet p1, p2;\n\tlet body = instance.body;\n\n\t// don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif (body instanceof Stream && typeof body.getBoundary !== 'function') {\n\t\t// tee instance body\n\t\tp1 = new PassThrough();\n\t\tp2 = new PassThrough();\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS].body = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n}\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param   Mixed  instance  Any options.body input\n */\nfunction extractContentType(body) {\n\tif (body === null) {\n\t\t// body is null\n\t\treturn null;\n\t} else if (typeof body === 'string') {\n\t\t// body is string\n\t\treturn 'text/plain;charset=UTF-8';\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t} else if (isBlob(body)) {\n\t\t// body is blob\n\t\treturn body.type || null;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn null;\n\t} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\treturn null;\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\treturn null;\n\t} else if (typeof body.getBoundary === 'function') {\n\t\t// detect form data input from form-data module\n\t\treturn `multipart/form-data;boundary=${body.getBoundary()}`;\n\t} else if (body instanceof Stream) {\n\t\t// body is stream\n\t\t// can't really do much about this\n\t\treturn null;\n\t} else {\n\t\t// Body constructor defaults other things to string\n\t\treturn 'text/plain;charset=UTF-8';\n\t}\n}\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param   Body    instance   Instance of Body\n * @return  Number?            Number of bytes, or null if not possible\n */\nfunction getTotalBytes(instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\treturn 0;\n\t} else if (isBlob(body)) {\n\t\treturn body.size;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn body.length;\n\t} else if (body && typeof body.getLengthSync === 'function') {\n\t\t// detect form data input from form-data module\n\t\tif (body._lengthRetrievers && body._lengthRetrievers.length == 0 || // 1.x\n\t\tbody.hasKnownLength && body.hasKnownLength()) {\n\t\t\t// 2.x\n\t\t\treturn body.getLengthSync();\n\t\t}\n\t\treturn null;\n\t} else {\n\t\t// body is stream\n\t\treturn null;\n\t}\n}\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param   Body    instance   Instance of Body\n * @return  Void\n */\nfunction writeToStream(dest, instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\tdest.end();\n\t} else if (isBlob(body)) {\n\t\tbody.stream().pipe(dest);\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\tdest.write(body);\n\t\tdest.end();\n\t} else {\n\t\t// body is stream\n\t\tbody.pipe(dest);\n\t}\n}\n\n// expose Promise\nBody.Promise = global.Promise;\n\n/**\n * headers.js\n *\n * Headers class offers convenient helpers\n */\n\nconst invalidTokenRegex = /[^\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]/;\nconst invalidHeaderCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/;\n\nfunction validateName(name) {\n\tname = `${name}`;\n\tif (invalidTokenRegex.test(name) || name === '') {\n\t\tthrow new TypeError(`${name} is not a legal HTTP header name`);\n\t}\n}\n\nfunction validateValue(value) {\n\tvalue = `${value}`;\n\tif (invalidHeaderCharRegex.test(value)) {\n\t\tthrow new TypeError(`${value} is not a legal HTTP header value`);\n\t}\n}\n\n/**\n * Find the key in the map object given a header name.\n *\n * Returns undefined if not found.\n *\n * @param   String  name  Header name\n * @return  String|Undefined\n */\nfunction find(map, name) {\n\tname = name.toLowerCase();\n\tfor (const key in map) {\n\t\tif (key.toLowerCase() === name) {\n\t\t\treturn key;\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst MAP = Symbol('map');\nclass Headers {\n\t/**\n  * Headers class\n  *\n  * @param   Object  headers  Response headers\n  * @return  Void\n  */\n\tconstructor() {\n\t\tlet init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n\t\tthis[MAP] = Object.create(null);\n\n\t\tif (init instanceof Headers) {\n\t\t\tconst rawHeaders = init.raw();\n\t\t\tconst headerNames = Object.keys(rawHeaders);\n\n\t\t\tfor (const headerName of headerNames) {\n\t\t\t\tfor (const value of rawHeaders[headerName]) {\n\t\t\t\t\tthis.append(headerName, value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// We don't worry about converting prop to ByteString here as append()\n\t\t// will handle it.\n\t\tif (init == null) ; else if (typeof init === 'object') {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\tif (method != null) {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tconst pairs = [];\n\t\t\t\tfor (const pair of init) {\n\t\t\t\t\tif (typeof pair !== 'object' || typeof pair[Symbol.iterator] !== 'function') {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be iterable');\n\t\t\t\t\t}\n\t\t\t\t\tpairs.push(Array.from(pair));\n\t\t\t\t}\n\n\t\t\t\tfor (const pair of pairs) {\n\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t}\n\t\t\t\t\tthis.append(pair[0], pair[1]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// record<ByteString, ByteString>\n\t\t\t\tfor (const key of Object.keys(init)) {\n\t\t\t\t\tconst value = init[key];\n\t\t\t\t\tthis.append(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Provided initializer must be an object');\n\t\t}\n\t}\n\n\t/**\n  * Return combined header value given name\n  *\n  * @param   String  name  Header name\n  * @return  Mixed\n  */\n\tget(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key === undefined) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this[MAP][key].join(', ');\n\t}\n\n\t/**\n  * Iterate over all headers\n  *\n  * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)\n  * @param   Boolean   thisArg   `this` context for callback function\n  * @return  Void\n  */\n\tforEach(callback) {\n\t\tlet thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n\t\tlet pairs = getHeaders(this);\n\t\tlet i = 0;\n\t\twhile (i < pairs.length) {\n\t\t\tvar _pairs$i = pairs[i];\n\t\t\tconst name = _pairs$i[0],\n\t\t\t      value = _pairs$i[1];\n\n\t\t\tcallback.call(thisArg, value, name, this);\n\t\t\tpairs = getHeaders(this);\n\t\t\ti++;\n\t\t}\n\t}\n\n\t/**\n  * Overwrite header values given name\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tset(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tthis[MAP][key !== undefined ? key : name] = [value];\n\t}\n\n\t/**\n  * Append a value onto existing header\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tappend(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tthis[MAP][key].push(value);\n\t\t} else {\n\t\t\tthis[MAP][name] = [value];\n\t\t}\n\t}\n\n\t/**\n  * Check for header name existence\n  *\n  * @param   String   name  Header name\n  * @return  Boolean\n  */\n\thas(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\treturn find(this[MAP], name) !== undefined;\n\t}\n\n\t/**\n  * Delete all header values given name\n  *\n  * @param   String  name  Header name\n  * @return  Void\n  */\n\tdelete(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tdelete this[MAP][key];\n\t\t}\n\t}\n\n\t/**\n  * Return raw headers (non-spec api)\n  *\n  * @return  Object\n  */\n\traw() {\n\t\treturn this[MAP];\n\t}\n\n\t/**\n  * Get an iterator on keys.\n  *\n  * @return  Iterator\n  */\n\tkeys() {\n\t\treturn createHeadersIterator(this, 'key');\n\t}\n\n\t/**\n  * Get an iterator on values.\n  *\n  * @return  Iterator\n  */\n\tvalues() {\n\t\treturn createHeadersIterator(this, 'value');\n\t}\n\n\t/**\n  * Get an iterator on entries.\n  *\n  * This is the default iterator of the Headers object.\n  *\n  * @return  Iterator\n  */\n\t[Symbol.iterator]() {\n\t\treturn createHeadersIterator(this, 'key+value');\n\t}\n}\nHeaders.prototype.entries = Headers.prototype[Symbol.iterator];\n\nObject.defineProperty(Headers.prototype, Symbol.toStringTag, {\n\tvalue: 'Headers',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Headers.prototype, {\n\tget: { enumerable: true },\n\tforEach: { enumerable: true },\n\tset: { enumerable: true },\n\tappend: { enumerable: true },\n\thas: { enumerable: true },\n\tdelete: { enumerable: true },\n\tkeys: { enumerable: true },\n\tvalues: { enumerable: true },\n\tentries: { enumerable: true }\n});\n\nfunction getHeaders(headers) {\n\tlet kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key+value';\n\n\tconst keys = Object.keys(headers[MAP]).sort();\n\treturn keys.map(kind === 'key' ? function (k) {\n\t\treturn k.toLowerCase();\n\t} : kind === 'value' ? function (k) {\n\t\treturn headers[MAP][k].join(', ');\n\t} : function (k) {\n\t\treturn [k.toLowerCase(), headers[MAP][k].join(', ')];\n\t});\n}\n\nconst INTERNAL = Symbol('internal');\n\nfunction createHeadersIterator(target, kind) {\n\tconst iterator = Object.create(HeadersIteratorPrototype);\n\titerator[INTERNAL] = {\n\t\ttarget,\n\t\tkind,\n\t\tindex: 0\n\t};\n\treturn iterator;\n}\n\nconst HeadersIteratorPrototype = Object.setPrototypeOf({\n\tnext() {\n\t\t// istanbul ignore if\n\t\tif (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {\n\t\t\tthrow new TypeError('Value of `this` is not a HeadersIterator');\n\t\t}\n\n\t\tvar _INTERNAL = this[INTERNAL];\n\t\tconst target = _INTERNAL.target,\n\t\t      kind = _INTERNAL.kind,\n\t\t      index = _INTERNAL.index;\n\n\t\tconst values = getHeaders(target, kind);\n\t\tconst len = values.length;\n\t\tif (index >= len) {\n\t\t\treturn {\n\t\t\t\tvalue: undefined,\n\t\t\t\tdone: true\n\t\t\t};\n\t\t}\n\n\t\tthis[INTERNAL].index = index + 1;\n\n\t\treturn {\n\t\t\tvalue: values[index],\n\t\t\tdone: false\n\t\t};\n\t}\n}, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));\n\nObject.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {\n\tvalue: 'HeadersIterator',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * Export the Headers object in a form that Node.js can consume.\n *\n * @param   Headers  headers\n * @return  Object\n */\nfunction exportNodeCompatibleHeaders(headers) {\n\tconst obj = Object.assign({ __proto__: null }, headers[MAP]);\n\n\t// http.request() only supports string as Host header. This hack makes\n\t// specifying custom Host header possible.\n\tconst hostHeaderKey = find(headers[MAP], 'Host');\n\tif (hostHeaderKey !== undefined) {\n\t\tobj[hostHeaderKey] = obj[hostHeaderKey][0];\n\t}\n\n\treturn obj;\n}\n\n/**\n * Create a Headers object from an object of headers, ignoring those that do\n * not conform to HTTP grammar productions.\n *\n * @param   Object  obj  Object of headers\n * @return  Headers\n */\nfunction createHeadersLenient(obj) {\n\tconst headers = new Headers();\n\tfor (const name of Object.keys(obj)) {\n\t\tif (invalidTokenRegex.test(name)) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (Array.isArray(obj[name])) {\n\t\t\tfor (const val of obj[name]) {\n\t\t\t\tif (invalidHeaderCharRegex.test(val)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (headers[MAP][name] === undefined) {\n\t\t\t\t\theaders[MAP][name] = [val];\n\t\t\t\t} else {\n\t\t\t\t\theaders[MAP][name].push(val);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (!invalidHeaderCharRegex.test(obj[name])) {\n\t\t\theaders[MAP][name] = [obj[name]];\n\t\t}\n\t}\n\treturn headers;\n}\n\nconst INTERNALS$1 = Symbol('Response internals');\n\n// fix an issue where \"STATUS_CODES\" aren't a named export for node <10\nconst STATUS_CODES = http.STATUS_CODES;\n\n/**\n * Response class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nclass Response {\n\tconstructor() {\n\t\tlet body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t\tlet opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tBody.call(this, body, opts);\n\n\t\tconst status = opts.status || 200;\n\t\tconst headers = new Headers(opts.headers);\n\n\t\tif (body != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(body);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS$1] = {\n\t\t\turl: opts.url,\n\t\t\tstatus,\n\t\t\tstatusText: opts.statusText || STATUS_CODES[status],\n\t\t\theaders,\n\t\t\tcounter: opts.counter\n\t\t};\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS$1].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS$1].status;\n\t}\n\n\t/**\n  * Convenience property representing if the request ended normally\n  */\n\tget ok() {\n\t\treturn this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS$1].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS$1].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$1].headers;\n\t}\n\n\t/**\n  * Clone this response\n  *\n  * @return  Response\n  */\n\tclone() {\n\t\treturn new Response(clone(this), {\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok,\n\t\t\tredirected: this.redirected\n\t\t});\n\t}\n}\n\nBody.mixIn(Response.prototype);\n\nObject.defineProperties(Response.prototype, {\n\turl: { enumerable: true },\n\tstatus: { enumerable: true },\n\tok: { enumerable: true },\n\tredirected: { enumerable: true },\n\tstatusText: { enumerable: true },\n\theaders: { enumerable: true },\n\tclone: { enumerable: true }\n});\n\nObject.defineProperty(Response.prototype, Symbol.toStringTag, {\n\tvalue: 'Response',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nconst INTERNALS$2 = Symbol('Request internals');\nconst URL = Url.URL || whatwgUrl.URL;\n\n// fix an issue where \"format\", \"parse\" aren't a named export for node <10\nconst parse_url = Url.parse;\nconst format_url = Url.format;\n\n/**\n * Wrapper around `new URL` to handle arbitrary URLs\n *\n * @param  {string} urlStr\n * @return {void}\n */\nfunction parseURL(urlStr) {\n\t/*\n \tCheck whether the URL is absolute or not\n \t\tScheme: https://tools.ietf.org/html/rfc3986#section-3.1\n \tAbsolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\n */\n\tif (/^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.exec(urlStr)) {\n\t\turlStr = new URL(urlStr).toString();\n\t}\n\n\t// Fallback to old implementation for arbitrary URLs\n\treturn parse_url(urlStr);\n}\n\nconst streamDestructionSupported = 'destroy' in Stream.Readable.prototype;\n\n/**\n * Check if a value is an instance of Request.\n *\n * @param   Mixed   input\n * @return  Boolean\n */\nfunction isRequest(input) {\n\treturn typeof input === 'object' && typeof input[INTERNALS$2] === 'object';\n}\n\nfunction isAbortSignal(signal) {\n\tconst proto = signal && typeof signal === 'object' && Object.getPrototypeOf(signal);\n\treturn !!(proto && proto.constructor.name === 'AbortSignal');\n}\n\n/**\n * Request class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nclass Request {\n\tconstructor(input) {\n\t\tlet init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tlet parsedURL;\n\n\t\t// normalize input\n\t\tif (!isRequest(input)) {\n\t\t\tif (input && input.href) {\n\t\t\t\t// in order to support Node.js' Url objects; though WHATWG's URL objects\n\t\t\t\t// will fall into this branch also (since their `toString()` will return\n\t\t\t\t// `href` property anyway)\n\t\t\t\tparsedURL = parseURL(input.href);\n\t\t\t} else {\n\t\t\t\t// coerce input to a string before attempting to parse\n\t\t\t\tparsedURL = parseURL(`${input}`);\n\t\t\t}\n\t\t\tinput = {};\n\t\t} else {\n\t\t\tparsedURL = parseURL(input.url);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tmethod = method.toUpperCase();\n\n\t\tif ((init.body != null || isRequest(input) && input.body !== null) && (method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tlet inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;\n\n\t\tBody.call(this, inputBody, {\n\t\t\ttimeout: init.timeout || input.timeout || 0,\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (inputBody != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(inputBody);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ? input.signal : null;\n\t\tif ('signal' in init) signal = init.signal;\n\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal');\n\t\t}\n\n\t\tthis[INTERNALS$2] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal\n\t\t};\n\n\t\t// node-fetch-only options\n\t\tthis.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;\n\t\tthis.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t}\n\n\tget method() {\n\t\treturn this[INTERNALS$2].method;\n\t}\n\n\tget url() {\n\t\treturn format_url(this[INTERNALS$2].parsedURL);\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$2].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS$2].redirect;\n\t}\n\n\tget signal() {\n\t\treturn this[INTERNALS$2].signal;\n\t}\n\n\t/**\n  * Clone this request\n  *\n  * @return  Request\n  */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n}\n\nBody.mixIn(Request.prototype);\n\nObject.defineProperty(Request.prototype, Symbol.toStringTag, {\n\tvalue: 'Request',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Request.prototype, {\n\tmethod: { enumerable: true },\n\turl: { enumerable: true },\n\theaders: { enumerable: true },\n\tredirect: { enumerable: true },\n\tclone: { enumerable: true },\n\tsignal: { enumerable: true }\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param   Request  A Request instance\n * @return  Object   The options object to be passed to http.request\n */\nfunction getNodeRequestOptions(request) {\n\tconst parsedURL = request[INTERNALS$2].parsedURL;\n\tconst headers = new Headers(request[INTERNALS$2].headers);\n\n\t// fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// Basic fetch\n\tif (!parsedURL.protocol || !parsedURL.hostname) {\n\t\tthrow new TypeError('Only absolute URLs are supported');\n\t}\n\n\tif (!/^https?:$/.test(parsedURL.protocol)) {\n\t\tthrow new TypeError('Only HTTP(S) protocols are supported');\n\t}\n\n\tif (request.signal && request.body instanceof Stream.Readable && !streamDestructionSupported) {\n\t\tthrow new Error('Cancellation of streamed requests with AbortSignal is not supported in node < 8');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body == null && /^(POST|PUT)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\tif (request.body != null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\tif (typeof totalBytes === 'number') {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip,deflate');\n\t}\n\n\tlet agent = request.agent;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\tif (!headers.has('Connection') && !agent) {\n\t\theaders.set('Connection', 'close');\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\treturn Object.assign({}, parsedURL, {\n\t\tmethod: request.method,\n\t\theaders: exportNodeCompatibleHeaders(headers),\n\t\tagent\n\t});\n}\n\n/**\n * abort-error.js\n *\n * AbortError interface for cancelled requests\n */\n\n/**\n * Create AbortError instance\n *\n * @param   String      message      Error message for human\n * @return  AbortError\n */\nfunction AbortError(message) {\n  Error.call(this, message);\n\n  this.type = 'aborted';\n  this.message = message;\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nAbortError.prototype = Object.create(Error.prototype);\nAbortError.prototype.constructor = AbortError;\nAbortError.prototype.name = 'AbortError';\n\nconst URL$1 = Url.URL || whatwgUrl.URL;\n\n// fix an issue where \"PassThrough\", \"resolve\" aren't a named export for node <10\nconst PassThrough$1 = Stream.PassThrough;\n\nconst isDomainOrSubdomain = function isDomainOrSubdomain(destination, original) {\n\tconst orig = new URL$1(original).hostname;\n\tconst dest = new URL$1(destination).hostname;\n\n\treturn orig === dest || orig[orig.length - dest.length - 1] === '.' && orig.endsWith(dest);\n};\n\n/**\n * Fetch function\n *\n * @param   Mixed    url   Absolute url or Request instance\n * @param   Object   opts  Fetch options\n * @return  Promise\n */\nfunction fetch(url, opts) {\n\n\t// allow custom promise\n\tif (!fetch.Promise) {\n\t\tthrow new Error('native promise missing, set fetch.Promise to your favorite alternative');\n\t}\n\n\tBody.Promise = fetch.Promise;\n\n\t// wrap http.request into fetch\n\treturn new fetch.Promise(function (resolve, reject) {\n\t\t// build request object\n\t\tconst request = new Request(url, opts);\n\t\tconst options = getNodeRequestOptions(request);\n\n\t\tconst send = (options.protocol === 'https:' ? https : http).request;\n\t\tconst signal = request.signal;\n\n\t\tlet response = null;\n\n\t\tconst abort = function abort() {\n\t\t\tlet error = new AbortError('The user aborted a request.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof Stream.Readable) {\n\t\t\t\trequest.body.destroy(error);\n\t\t\t}\n\t\t\tif (!response || !response.body) return;\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = function abortAndFinalize() {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// send request\n\t\tconst req = send(options);\n\t\tlet reqTimeout;\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tfunction finalize() {\n\t\t\treq.abort();\n\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\tclearTimeout(reqTimeout);\n\t\t}\n\n\t\tif (request.timeout) {\n\t\t\treq.once('socket', function (socket) {\n\t\t\t\treqTimeout = setTimeout(function () {\n\t\t\t\t\treject(new FetchError(`network timeout at: ${request.url}`, 'request-timeout'));\n\t\t\t\t\tfinalize();\n\t\t\t\t}, request.timeout);\n\t\t\t});\n\t\t}\n\n\t\treq.on('error', function (err) {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));\n\t\t\tfinalize();\n\t\t});\n\n\t\treq.on('response', function (res) {\n\t\t\tclearTimeout(reqTimeout);\n\n\t\t\tconst headers = createHeadersLenient(res.headers);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (fetch.isRedirect(res.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tlet locationURL = null;\n\t\t\t\ttry {\n\t\t\t\t\tlocationURL = location === null ? null : new URL$1(location, request.url).toString();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// error here can only be invalid URL in Location: header\n\t\t\t\t\t// do not throw when options.redirect == manual\n\t\t\t\t\t// let the user extract the errorneous redirect URL\n\t\t\t\t\tif (request.redirect !== 'manual') {\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with an invalid redirect URL: ${location}`, 'invalid-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.\n\t\t\t\t\t\tif (locationURL !== null) {\n\t\t\t\t\t\t\t// handle corrupted header\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\theaders.set('Location', locationURL);\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t// istanbul ignore next: nodejs server prevent invalid response headers, we can't test this through normal request\n\t\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow':\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOpts = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: request.body,\n\t\t\t\t\t\t\tsignal: request.signal,\n\t\t\t\t\t\t\ttimeout: request.timeout,\n\t\t\t\t\t\t\tsize: request.size\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (!isDomainOrSubdomain(request.url, locationURL)) {\n\t\t\t\t\t\t\tfor (const name of ['authorization', 'www-authenticate', 'cookie', 'cookie2']) {\n\t\t\t\t\t\t\t\trequestOpts.headers.delete(name);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === 'POST') {\n\t\t\t\t\t\t\trequestOpts.method = 'GET';\n\t\t\t\t\t\t\trequestOpts.body = undefined;\n\t\t\t\t\t\t\trequestOpts.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOpts)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// prepare response\n\t\t\tres.once('end', function () {\n\t\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\t});\n\t\t\tlet body = res.pipe(new PassThrough$1());\n\n\t\t\tconst response_options = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: res.statusCode,\n\t\t\t\tstatusText: res.statusMessage,\n\t\t\t\theaders: headers,\n\t\t\t\tsize: request.size,\n\t\t\t\ttimeout: request.timeout,\n\t\t\t\tcounter: request.counter\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || res.statusCode === 204 || res.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// for gzip\n\t\t\tif (codings == 'gzip' || codings == 'x-gzip') {\n\t\t\t\tbody = body.pipe(zlib.createGunzip(zlibOptions));\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for deflate\n\t\t\tif (codings == 'deflate' || codings == 'x-deflate') {\n\t\t\t\t// handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = res.pipe(new PassThrough$1());\n\t\t\t\traw.once('data', function (chunk) {\n\t\t\t\t\t// see http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflate());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflateRaw());\n\t\t\t\t\t}\n\t\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for br\n\t\t\tif (codings == 'br' && typeof zlib.createBrotliDecompress === 'function') {\n\t\t\t\tbody = body.pipe(zlib.createBrotliDecompress());\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// otherwise, use response as-is\n\t\t\tresponse = new Response(body, response_options);\n\t\t\tresolve(response);\n\t\t});\n\n\t\twriteToStream(req, request);\n\t});\n}\n/**\n * Redirect code matching\n *\n * @param   Number   code  Status code\n * @return  Boolean\n */\nfetch.isRedirect = function (code) {\n\treturn code === 301 || code === 302 || code === 303 || code === 307 || code === 308;\n};\n\n// expose Promise\nfetch.Promise = global.Promise;\n\nexport default fetch;\nexport { Headers, Request, Response, FetchError };\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","try {\n  var util = require('util');\n  /* istanbul ignore next */\n  if (typeof util.inherits !== 'function') throw '';\n  module.exports = util.inherits;\n} catch (e) {\n  /* istanbul ignore next */\n  module.exports = require('./inherits_browser.js');\n}\n","var inherits = require('inherits')\nvar EventEmitter = require('events').EventEmitter\n\nmodule.exports = Queue\nmodule.exports.default = Queue\n\nfunction Queue (options) {\n  if (!(this instanceof Queue)) {\n    return new Queue(options)\n  }\n\n  EventEmitter.call(this)\n  options = options || {}\n  this.concurrency = options.concurrency || Infinity\n  this.timeout = options.timeout || 0\n  this.autostart = options.autostart || false\n  this.results = options.results || null\n  this.pending = 0\n  this.session = 0\n  this.running = false\n  this.jobs = []\n  this.timers = {}\n}\ninherits(Queue, EventEmitter)\n\nvar arrayMethods = [\n  'pop',\n  'shift',\n  'indexOf',\n  'lastIndexOf'\n]\n\narrayMethods.forEach(function (method) {\n  Queue.prototype[method] = function () {\n    return Array.prototype[method].apply(this.jobs, arguments)\n  }\n})\n\nQueue.prototype.slice = function (begin, end) {\n  this.jobs = this.jobs.slice(begin, end)\n  return this\n}\n\nQueue.prototype.reverse = function () {\n  this.jobs.reverse()\n  return this\n}\n\nvar arrayAddMethods = [\n  'push',\n  'unshift',\n  'splice'\n]\n\narrayAddMethods.forEach(function (method) {\n  Queue.prototype[method] = function () {\n    var methodResult = Array.prototype[method].apply(this.jobs, arguments)\n    if (this.autostart) {\n      this.start()\n    }\n    return methodResult\n  }\n})\n\nObject.defineProperty(Queue.prototype, 'length', {\n  get: function () {\n    return this.pending + this.jobs.length\n  }\n})\n\nQueue.prototype.start = function (cb) {\n  if (cb) {\n    callOnErrorOrEnd.call(this, cb)\n  }\n\n  this.running = true\n\n  if (this.pending >= this.concurrency) {\n    return\n  }\n\n  if (this.jobs.length === 0) {\n    if (this.pending === 0) {\n      done.call(this)\n    }\n    return\n  }\n\n  var self = this\n  var job = this.jobs.shift()\n  var once = true\n  var session = this.session\n  var timeoutId = null\n  var didTimeout = false\n  var resultIndex = null\n  var timeout = job.hasOwnProperty('timeout') ? job.timeout : this.timeout\n\n  function next (err, result) {\n    if (once && self.session === session) {\n      once = false\n      self.pending--\n      if (timeoutId !== null) {\n        delete self.timers[timeoutId]\n        clearTimeout(timeoutId)\n      }\n\n      if (err) {\n        self.emit('error', err, job)\n      } else if (didTimeout === false) {\n        if (resultIndex !== null) {\n          self.results[resultIndex] = Array.prototype.slice.call(arguments, 1)\n        }\n        self.emit('success', result, job)\n      }\n\n      if (self.session === session) {\n        if (self.pending === 0 && self.jobs.length === 0) {\n          done.call(self)\n        } else if (self.running) {\n          self.start()\n        }\n      }\n    }\n  }\n\n  if (timeout) {\n    timeoutId = setTimeout(function () {\n      didTimeout = true\n      if (self.listeners('timeout').length > 0) {\n        self.emit('timeout', next, job)\n      } else {\n        next()\n      }\n    }, timeout)\n    this.timers[timeoutId] = timeoutId\n  }\n\n  if (this.results) {\n    resultIndex = this.results.length\n    this.results[resultIndex] = null\n  }\n\n  this.pending++\n  self.emit('start', job)\n  var promise = job(next)\n  if (promise && promise.then && typeof promise.then === 'function') {\n    promise.then(function (result) {\n      return next(null, result)\n    }).catch(function (err) {\n      return next(err || true)\n    })\n  }\n\n  if (this.running && this.jobs.length > 0) {\n    this.start()\n  }\n}\n\nQueue.prototype.stop = function () {\n  this.running = false\n}\n\nQueue.prototype.end = function (err) {\n  clearTimers.call(this)\n  this.jobs.length = 0\n  this.pending = 0\n  done.call(this, err)\n}\n\nfunction clearTimers () {\n  for (var key in this.timers) {\n    var timeoutId = this.timers[key]\n    delete this.timers[key]\n    clearTimeout(timeoutId)\n  }\n}\n\nfunction callOnErrorOrEnd (cb) {\n  var self = this\n  this.on('error', onerror)\n  this.on('end', onend)\n\n  function onerror (err) { self.end(err) }\n  function onend (err) {\n    self.removeListener('error', onerror)\n    self.removeListener('end', onend)\n    cb(err, this.results)\n  }\n}\n\nfunction done (err) {\n  this.session++\n  this.running = false\n  this.emit('end', err)\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BMP = void 0;\nexports.BMP = {\n    validate(buffer) {\n        return ('BM' === buffer.toString('ascii', 0, 2));\n    },\n    calculate(buffer) {\n        return {\n            height: Math.abs(buffer.readInt32LE(22)),\n            width: buffer.readUInt32LE(18)\n        };\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ICO = void 0;\nconst TYPE_ICON = 1;\n/**\n * ICON Header\n *\n * | Offset | Size | Purpose |\n * | 0\t    | 2    | Reserved. Must always be 0.  |\n * | 2      | 2    | Image type: 1 for icon (.ICO) image, 2 for cursor (.CUR) image. Other values are invalid. |\n * | 4      | 2    | Number of images in the file. |\n *\n */\nconst SIZE_HEADER = 2 + 2 + 2; // 6\n/**\n * Image Entry\n *\n * | Offset | Size | Purpose |\n * | 0\t    | 1    | Image width in pixels. Can be any number between 0 and 255. Value 0 means width is 256 pixels. |\n * | 1      | 1    | Image height in pixels. Can be any number between 0 and 255. Value 0 means height is 256 pixels. |\n * | 2      | 1    | Number of colors in the color palette. Should be 0 if the image does not use a color palette. |\n * | 3      | 1    | Reserved. Should be 0. |\n * | 4      | 2    | ICO format: Color planes. Should be 0 or 1. |\n * |        |      | CUR format: The horizontal coordinates of the hotspot in number of pixels from the left. |\n * | 6      | 2    | ICO format: Bits per pixel. |\n * |        |      | CUR format: The vertical coordinates of the hotspot in number of pixels from the top. |\n * | 8      | 4    | The size of the image's data in bytes |\n * | 12     | 4    | The offset of BMP or PNG data from the beginning of the ICO/CUR file |\n *\n */\nconst SIZE_IMAGE_ENTRY = 1 + 1 + 1 + 1 + 2 + 2 + 4 + 4; // 16\nfunction getSizeFromOffset(buffer, offset) {\n    const value = buffer.readUInt8(offset);\n    return value === 0 ? 256 : value;\n}\nfunction getImageSize(buffer, imageIndex) {\n    const offset = SIZE_HEADER + (imageIndex * SIZE_IMAGE_ENTRY);\n    return {\n        height: getSizeFromOffset(buffer, offset + 1),\n        width: getSizeFromOffset(buffer, offset)\n    };\n}\nexports.ICO = {\n    validate(buffer) {\n        if (buffer.readUInt16LE(0) !== 0) {\n            return false;\n        }\n        return buffer.readUInt16LE(2) === TYPE_ICON;\n    },\n    calculate(buffer) {\n        const nbImages = buffer.readUInt16LE(4);\n        const imageSize = getImageSize(buffer, 0);\n        if (nbImages === 1) {\n            return imageSize;\n        }\n        const imgs = [imageSize];\n        for (let imageIndex = 1; imageIndex < nbImages; imageIndex += 1) {\n            imgs.push(getImageSize(buffer, imageIndex));\n        }\n        const result = {\n            height: imageSize.height,\n            images: imgs,\n            width: imageSize.width\n        };\n        return result;\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CUR = void 0;\nconst ico_1 = require(\"./ico\");\nconst TYPE_CURSOR = 2;\nexports.CUR = {\n    validate(buffer) {\n        if (buffer.readUInt16LE(0) !== 0) {\n            return false;\n        }\n        return buffer.readUInt16LE(2) === TYPE_CURSOR;\n    },\n    calculate(buffer) {\n        return ico_1.ICO.calculate(buffer);\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DDS = void 0;\nexports.DDS = {\n    validate(buffer) {\n        return buffer.readUInt32LE(0) === 0x20534444;\n    },\n    calculate(buffer) {\n        return {\n            height: buffer.readUInt32LE(12),\n            width: buffer.readUInt32LE(16)\n        };\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GIF = void 0;\nconst gifRegexp = /^GIF8[79]a/;\nexports.GIF = {\n    validate(buffer) {\n        const signature = buffer.toString('ascii', 0, 6);\n        return (gifRegexp.test(signature));\n    },\n    calculate(buffer) {\n        return {\n            height: buffer.readUInt16LE(8),\n            width: buffer.readUInt16LE(6)\n        };\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ICNS = void 0;\n/**\n * ICNS Header\n *\n * | Offset | Size | Purpose                                                |\n * | 0\t    | 4    | Magic literal, must be \"icns\" (0x69, 0x63, 0x6e, 0x73) |\n * | 4      | 4    | Length of file, in bytes, msb first.                   |\n *\n */\nconst SIZE_HEADER = 4 + 4; // 8\nconst FILE_LENGTH_OFFSET = 4; // MSB => BIG ENDIAN\n/**\n * Image Entry\n *\n * | Offset | Size | Purpose                                                          |\n * | 0\t    | 4    | Icon type, see OSType below.                                     |\n * | 4      | 4    | Length of data, in bytes (including type and length), msb first. |\n * | 8      | n    | Icon data                                                        |\n */\nconst ENTRY_LENGTH_OFFSET = 4; // MSB => BIG ENDIAN\nconst ICON_TYPE_SIZE = {\n    ICON: 32,\n    'ICN#': 32,\n    // m => 16 x 16\n    'icm#': 16,\n    icm4: 16,\n    icm8: 16,\n    // s => 16 x 16\n    'ics#': 16,\n    ics4: 16,\n    ics8: 16,\n    is32: 16,\n    s8mk: 16,\n    icp4: 16,\n    // l => 32 x 32\n    icl4: 32,\n    icl8: 32,\n    il32: 32,\n    l8mk: 32,\n    icp5: 32,\n    ic11: 32,\n    // h => 48 x 48\n    ich4: 48,\n    ich8: 48,\n    ih32: 48,\n    h8mk: 48,\n    // . => 64 x 64\n    icp6: 64,\n    ic12: 32,\n    // t => 128 x 128\n    it32: 128,\n    t8mk: 128,\n    ic07: 128,\n    // . => 256 x 256\n    ic08: 256,\n    ic13: 256,\n    // . => 512 x 512\n    ic09: 512,\n    ic14: 512,\n    // . => 1024 x 1024\n    ic10: 1024,\n};\nfunction readImageHeader(buffer, imageOffset) {\n    const imageLengthOffset = imageOffset + ENTRY_LENGTH_OFFSET;\n    return [\n        buffer.toString('ascii', imageOffset, imageLengthOffset),\n        buffer.readUInt32BE(imageLengthOffset)\n    ];\n}\nfunction getImageSize(type) {\n    const size = ICON_TYPE_SIZE[type];\n    return { width: size, height: size, type };\n}\nexports.ICNS = {\n    validate(buffer) {\n        return ('icns' === buffer.toString('ascii', 0, 4));\n    },\n    calculate(buffer) {\n        const bufferLength = buffer.length;\n        const fileLength = buffer.readUInt32BE(FILE_LENGTH_OFFSET);\n        let imageOffset = SIZE_HEADER;\n        let imageHeader = readImageHeader(buffer, imageOffset);\n        let imageSize = getImageSize(imageHeader[0]);\n        imageOffset += imageHeader[1];\n        if (imageOffset === fileLength) {\n            return imageSize;\n        }\n        const result = {\n            height: imageSize.height,\n            images: [imageSize],\n            width: imageSize.width\n        };\n        while (imageOffset < fileLength && imageOffset < bufferLength) {\n            imageHeader = readImageHeader(buffer, imageOffset);\n            imageSize = getImageSize(imageHeader[0]);\n            imageOffset += imageHeader[1];\n            result.images.push(imageSize);\n        }\n        return result;\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.J2C = void 0;\nexports.J2C = {\n    validate(buffer) {\n        // TODO: this doesn't seem right. SIZ marker doesn't have to be right after the SOC\n        return buffer.toString('hex', 0, 4) === 'ff4fff51';\n    },\n    calculate(buffer) {\n        return {\n            height: buffer.readUInt32BE(12),\n            width: buffer.readUInt32BE(8),\n        };\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JP2 = void 0;\nconst BoxTypes = {\n    ftyp: '66747970',\n    ihdr: '69686472',\n    jp2h: '6a703268',\n    jp__: '6a502020',\n    rreq: '72726571',\n    xml_: '786d6c20'\n};\nconst calculateRREQLength = (box) => {\n    const unit = box.readUInt8(0);\n    let offset = 1 + (2 * unit);\n    const numStdFlags = box.readUInt16BE(offset);\n    const flagsLength = numStdFlags * (2 + unit);\n    offset = offset + 2 + flagsLength;\n    const numVendorFeatures = box.readUInt16BE(offset);\n    const featuresLength = numVendorFeatures * (16 + unit);\n    return offset + 2 + featuresLength;\n};\nconst parseIHDR = (box) => {\n    return {\n        height: box.readUInt32BE(4),\n        width: box.readUInt32BE(8),\n    };\n};\nexports.JP2 = {\n    validate(buffer) {\n        const signature = buffer.toString('hex', 4, 8);\n        const signatureLength = buffer.readUInt32BE(0);\n        if (signature !== BoxTypes.jp__ || signatureLength < 1) {\n            return false;\n        }\n        const ftypeBoxStart = signatureLength + 4;\n        const ftypBoxLength = buffer.readUInt32BE(signatureLength);\n        const ftypBox = buffer.slice(ftypeBoxStart, ftypeBoxStart + ftypBoxLength);\n        return ftypBox.toString('hex', 0, 4) === BoxTypes.ftyp;\n    },\n    calculate(buffer) {\n        const signatureLength = buffer.readUInt32BE(0);\n        const ftypBoxLength = buffer.readUInt16BE(signatureLength + 2);\n        let offset = signatureLength + 4 + ftypBoxLength;\n        const nextBoxType = buffer.toString('hex', offset, offset + 4);\n        switch (nextBoxType) {\n            case BoxTypes.rreq:\n                // WHAT ARE THESE 4 BYTES?????\n                // eslint-disable-next-line no-case-declarations\n                const MAGIC = 4;\n                offset = offset + 4 + MAGIC + calculateRREQLength(buffer.slice(offset + 4));\n                return parseIHDR(buffer.slice(offset + 8, offset + 24));\n            case BoxTypes.jp2h:\n                return parseIHDR(buffer.slice(offset + 8, offset + 24));\n            default:\n                throw new TypeError('Unsupported header found: ' + buffer.toString('ascii', offset, offset + 4));\n        }\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.readUInt = void 0;\n// Abstract reading multi-byte unsigned integers\nfunction readUInt(buffer, bits, offset, isBigEndian) {\n    offset = offset || 0;\n    const endian = isBigEndian ? 'BE' : 'LE';\n    const methodName = ('readUInt' + bits + endian);\n    return buffer[methodName].call(buffer, offset);\n}\nexports.readUInt = readUInt;\n","\"use strict\";\n// NOTE: we only support baseline and progressive JPGs here\n// due to the structure of the loader class, we only get a buffer\n// with a maximum size of 4096 bytes. so if the SOF marker is outside\n// if this range we can't detect the file size correctly.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JPG = void 0;\nconst readUInt_1 = require(\"../readUInt\");\nconst EXIF_MARKER = '45786966';\nconst APP1_DATA_SIZE_BYTES = 2;\nconst EXIF_HEADER_BYTES = 6;\nconst TIFF_BYTE_ALIGN_BYTES = 2;\nconst BIG_ENDIAN_BYTE_ALIGN = '4d4d';\nconst LITTLE_ENDIAN_BYTE_ALIGN = '4949';\n// Each entry is exactly 12 bytes\nconst IDF_ENTRY_BYTES = 12;\nconst NUM_DIRECTORY_ENTRIES_BYTES = 2;\nfunction isEXIF(buffer) {\n    return (buffer.toString('hex', 2, 6) === EXIF_MARKER);\n}\nfunction extractSize(buffer, index) {\n    return {\n        height: buffer.readUInt16BE(index),\n        width: buffer.readUInt16BE(index + 2)\n    };\n}\nfunction extractOrientation(exifBlock, isBigEndian) {\n    // TODO: assert that this contains 0x002A\n    // let STATIC_MOTOROLA_TIFF_HEADER_BYTES = 2\n    // let TIFF_IMAGE_FILE_DIRECTORY_BYTES = 4\n    // TODO: derive from TIFF_IMAGE_FILE_DIRECTORY_BYTES\n    const idfOffset = 8;\n    // IDF osset works from right after the header bytes\n    // (so the offset includes the tiff byte align)\n    const offset = EXIF_HEADER_BYTES + idfOffset;\n    const idfDirectoryEntries = readUInt_1.readUInt(exifBlock, 16, offset, isBigEndian);\n    for (let directoryEntryNumber = 0; directoryEntryNumber < idfDirectoryEntries; directoryEntryNumber++) {\n        const start = offset + NUM_DIRECTORY_ENTRIES_BYTES + (directoryEntryNumber * IDF_ENTRY_BYTES);\n        const end = start + IDF_ENTRY_BYTES;\n        // Skip on corrupt EXIF blocks\n        if (start > exifBlock.length) {\n            return;\n        }\n        const block = exifBlock.slice(start, end);\n        const tagNumber = readUInt_1.readUInt(block, 16, 0, isBigEndian);\n        // 0x0112 (decimal: 274) is the `orientation` tag ID\n        if (tagNumber === 274) {\n            const dataFormat = readUInt_1.readUInt(block, 16, 2, isBigEndian);\n            if (dataFormat !== 3) {\n                return;\n            }\n            // unsinged int has 2 bytes per component\n            // if there would more than 4 bytes in total it's a pointer\n            const numberOfComponents = readUInt_1.readUInt(block, 32, 4, isBigEndian);\n            if (numberOfComponents !== 1) {\n                return;\n            }\n            return readUInt_1.readUInt(block, 16, 8, isBigEndian);\n        }\n    }\n}\nfunction validateExifBlock(buffer, index) {\n    // Skip APP1 Data Size\n    const exifBlock = buffer.slice(APP1_DATA_SIZE_BYTES, index);\n    // Consider byte alignment\n    const byteAlign = exifBlock.toString('hex', EXIF_HEADER_BYTES, EXIF_HEADER_BYTES + TIFF_BYTE_ALIGN_BYTES);\n    // Ignore Empty EXIF. Validate byte alignment\n    const isBigEndian = byteAlign === BIG_ENDIAN_BYTE_ALIGN;\n    const isLittleEndian = byteAlign === LITTLE_ENDIAN_BYTE_ALIGN;\n    if (isBigEndian || isLittleEndian) {\n        return extractOrientation(exifBlock, isBigEndian);\n    }\n}\nfunction validateBuffer(buffer, index) {\n    // index should be within buffer limits\n    if (index > buffer.length) {\n        throw new TypeError('Corrupt JPG, exceeded buffer limits');\n    }\n    // Every JPEG block must begin with a 0xFF\n    if (buffer[index] !== 0xFF) {\n        throw new TypeError('Invalid JPG, marker table corrupted');\n    }\n}\nexports.JPG = {\n    validate(buffer) {\n        const SOIMarker = buffer.toString('hex', 0, 2);\n        return ('ffd8' === SOIMarker);\n    },\n    calculate(buffer) {\n        // Skip 4 chars, they are for signature\n        buffer = buffer.slice(4);\n        let orientation;\n        let next;\n        while (buffer.length) {\n            // read length of the next block\n            const i = buffer.readUInt16BE(0);\n            if (isEXIF(buffer)) {\n                orientation = validateExifBlock(buffer, i);\n            }\n            // ensure correct format\n            validateBuffer(buffer, i);\n            // 0xFFC0 is baseline standard(SOF)\n            // 0xFFC1 is baseline optimized(SOF)\n            // 0xFFC2 is progressive(SOF2)\n            next = buffer[i + 1];\n            if (next === 0xC0 || next === 0xC1 || next === 0xC2) {\n                const size = extractSize(buffer, i + 5);\n                // TODO: is orientation=0 a valid answer here?\n                if (!orientation) {\n                    return size;\n                }\n                return {\n                    height: size.height,\n                    orientation,\n                    width: size.width\n                };\n            }\n            // move to the next block\n            buffer = buffer.slice(i + 2);\n        }\n        throw new TypeError('Invalid JPG, no size found');\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.KTX = void 0;\nconst SIGNATURE = 'KTX 11';\nexports.KTX = {\n    validate(buffer) {\n        return SIGNATURE === buffer.toString('ascii', 1, 7);\n    },\n    calculate(buffer) {\n        return {\n            height: buffer.readUInt32LE(40),\n            width: buffer.readUInt32LE(36),\n        };\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PNG = void 0;\nconst pngSignature = 'PNG\\r\\n\\x1a\\n';\nconst pngImageHeaderChunkName = 'IHDR';\n// Used to detect \"fried\" png's: http://www.jongware.com/pngdefry.html\nconst pngFriedChunkName = 'CgBI';\nexports.PNG = {\n    validate(buffer) {\n        if (pngSignature === buffer.toString('ascii', 1, 8)) {\n            let chunkName = buffer.toString('ascii', 12, 16);\n            if (chunkName === pngFriedChunkName) {\n                chunkName = buffer.toString('ascii', 28, 32);\n            }\n            if (chunkName !== pngImageHeaderChunkName) {\n                throw new TypeError('Invalid PNG');\n            }\n            return true;\n        }\n        return false;\n    },\n    calculate(buffer) {\n        if (buffer.toString('ascii', 12, 16) === pngFriedChunkName) {\n            return {\n                height: buffer.readUInt32BE(36),\n                width: buffer.readUInt32BE(32)\n            };\n        }\n        return {\n            height: buffer.readUInt32BE(20),\n            width: buffer.readUInt32BE(16)\n        };\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PNM = void 0;\nconst PNMTypes = {\n    P1: 'pbm/ascii',\n    P2: 'pgm/ascii',\n    P3: 'ppm/ascii',\n    P4: 'pbm',\n    P5: 'pgm',\n    P6: 'ppm',\n    P7: 'pam',\n    PF: 'pfm'\n};\nconst Signatures = Object.keys(PNMTypes);\nconst handlers = {\n    default: (lines) => {\n        let dimensions = [];\n        while (lines.length > 0) {\n            const line = lines.shift();\n            if (line[0] === '#') {\n                continue;\n            }\n            dimensions = line.split(' ');\n            break;\n        }\n        if (dimensions.length === 2) {\n            return {\n                height: parseInt(dimensions[1], 10),\n                width: parseInt(dimensions[0], 10),\n            };\n        }\n        else {\n            throw new TypeError('Invalid PNM');\n        }\n    },\n    pam: (lines) => {\n        const size = {};\n        while (lines.length > 0) {\n            const line = lines.shift();\n            if (line.length > 16 || line.charCodeAt(0) > 128) {\n                continue;\n            }\n            const [key, value] = line.split(' ');\n            if (key && value) {\n                size[key.toLowerCase()] = parseInt(value, 10);\n            }\n            if (size.height && size.width) {\n                break;\n            }\n        }\n        if (size.height && size.width) {\n            return {\n                height: size.height,\n                width: size.width\n            };\n        }\n        else {\n            throw new TypeError('Invalid PAM');\n        }\n    }\n};\nexports.PNM = {\n    validate(buffer) {\n        const signature = buffer.toString('ascii', 0, 2);\n        return Signatures.includes(signature);\n    },\n    calculate(buffer) {\n        const signature = buffer.toString('ascii', 0, 2);\n        const type = PNMTypes[signature];\n        // TODO: this probably generates garbage. move to a stream based parser\n        const lines = buffer.toString('ascii', 3).split(/[\\r\\n]+/);\n        const handler = handlers[type] || handlers.default;\n        return handler(lines);\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PSD = void 0;\nexports.PSD = {\n    validate(buffer) {\n        return ('8BPS' === buffer.toString('ascii', 0, 4));\n    },\n    calculate(buffer) {\n        return {\n            height: buffer.readUInt32BE(14),\n            width: buffer.readUInt32BE(18)\n        };\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SVG = void 0;\nconst svgReg = /<svg\\s([^>\"']|\"[^\"]*\"|'[^']*')*>/;\nconst extractorRegExps = {\n    height: /\\sheight=(['\"])([^%]+?)\\1/,\n    root: svgReg,\n    viewbox: /\\sviewBox=(['\"])(.+?)\\1/i,\n    width: /\\swidth=(['\"])([^%]+?)\\1/,\n};\nconst INCH_CM = 2.54;\nconst units = {\n    in: 96,\n    cm: 96 / INCH_CM,\n    em: 16,\n    ex: 8,\n    m: 96 / INCH_CM * 100,\n    mm: 96 / INCH_CM / 10,\n    pc: 96 / 72 / 12,\n    pt: 96 / 72,\n    px: 1\n};\nconst unitsReg = new RegExp(`^([0-9.]+(?:e\\\\d+)?)(${Object.keys(units).join('|')})?$`);\nfunction parseLength(len) {\n    const m = unitsReg.exec(len);\n    if (!m) {\n        return undefined;\n    }\n    return Math.round(Number(m[1]) * (units[m[2]] || 1));\n}\nfunction parseViewbox(viewbox) {\n    const bounds = viewbox.split(' ');\n    return {\n        height: parseLength(bounds[3]),\n        width: parseLength(bounds[2])\n    };\n}\nfunction parseAttributes(root) {\n    const width = root.match(extractorRegExps.width);\n    const height = root.match(extractorRegExps.height);\n    const viewbox = root.match(extractorRegExps.viewbox);\n    return {\n        height: height && parseLength(height[2]),\n        viewbox: viewbox && parseViewbox(viewbox[2]),\n        width: width && parseLength(width[2]),\n    };\n}\nfunction calculateByDimensions(attrs) {\n    return {\n        height: attrs.height,\n        width: attrs.width,\n    };\n}\nfunction calculateByViewbox(attrs, viewbox) {\n    const ratio = viewbox.width / viewbox.height;\n    if (attrs.width) {\n        return {\n            height: Math.floor(attrs.width / ratio),\n            width: attrs.width,\n        };\n    }\n    if (attrs.height) {\n        return {\n            height: attrs.height,\n            width: Math.floor(attrs.height * ratio),\n        };\n    }\n    return {\n        height: viewbox.height,\n        width: viewbox.width,\n    };\n}\nexports.SVG = {\n    validate(buffer) {\n        const str = String(buffer);\n        return svgReg.test(str);\n    },\n    calculate(buffer) {\n        const root = buffer.toString('utf8').match(extractorRegExps.root);\n        if (root) {\n            const attrs = parseAttributes(root[0]);\n            if (attrs.width && attrs.height) {\n                return calculateByDimensions(attrs);\n            }\n            if (attrs.viewbox) {\n                return calculateByViewbox(attrs, attrs.viewbox);\n            }\n        }\n        throw new TypeError('Invalid SVG');\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TIFF = void 0;\n// based on http://www.compix.com/fileformattif.htm\n// TO-DO: support big-endian as well\nconst fs = require(\"fs\");\nconst readUInt_1 = require(\"../readUInt\");\n// Read IFD (image-file-directory) into a buffer\nfunction readIFD(buffer, filepath, isBigEndian) {\n    const ifdOffset = readUInt_1.readUInt(buffer, 32, 4, isBigEndian);\n    // read only till the end of the file\n    let bufferSize = 1024;\n    const fileSize = fs.statSync(filepath).size;\n    if (ifdOffset + bufferSize > fileSize) {\n        bufferSize = fileSize - ifdOffset - 10;\n    }\n    // populate the buffer\n    const endBuffer = Buffer.alloc(bufferSize);\n    const descriptor = fs.openSync(filepath, 'r');\n    fs.readSync(descriptor, endBuffer, 0, bufferSize, ifdOffset);\n    fs.closeSync(descriptor);\n    return endBuffer.slice(2);\n}\n// TIFF values seem to be messed up on Big-Endian, this helps\nfunction readValue(buffer, isBigEndian) {\n    const low = readUInt_1.readUInt(buffer, 16, 8, isBigEndian);\n    const high = readUInt_1.readUInt(buffer, 16, 10, isBigEndian);\n    return (high << 16) + low;\n}\n// move to the next tag\nfunction nextTag(buffer) {\n    if (buffer.length > 24) {\n        return buffer.slice(12);\n    }\n}\n// Extract IFD tags from TIFF metadata\nfunction extractTags(buffer, isBigEndian) {\n    const tags = {};\n    let temp = buffer;\n    while (temp && temp.length) {\n        const code = readUInt_1.readUInt(temp, 16, 0, isBigEndian);\n        const type = readUInt_1.readUInt(temp, 16, 2, isBigEndian);\n        const length = readUInt_1.readUInt(temp, 32, 4, isBigEndian);\n        // 0 means end of IFD\n        if (code === 0) {\n            break;\n        }\n        else {\n            // 256 is width, 257 is height\n            // if (code === 256 || code === 257) {\n            if (length === 1 && (type === 3 || type === 4)) {\n                tags[code] = readValue(temp, isBigEndian);\n            }\n            // move to the next tag\n            temp = nextTag(temp);\n        }\n    }\n    return tags;\n}\n// Test if the TIFF is Big Endian or Little Endian\nfunction determineEndianness(buffer) {\n    const signature = buffer.toString('ascii', 0, 2);\n    if ('II' === signature) {\n        return 'LE';\n    }\n    else if ('MM' === signature) {\n        return 'BE';\n    }\n}\nconst signatures = [\n    // '492049', // currently not supported\n    '49492a00',\n    '4d4d002a', // Big Endian\n    // '4d4d002a', // BigTIFF > 4GB. currently not supported\n];\nexports.TIFF = {\n    validate(buffer) {\n        return signatures.includes(buffer.toString('hex', 0, 4));\n    },\n    calculate(buffer, filepath) {\n        if (!filepath) {\n            throw new TypeError('Tiff doesn\\'t support buffer');\n        }\n        // Determine BE/LE\n        const isBigEndian = determineEndianness(buffer) === 'BE';\n        // read the IFD\n        const ifdBuffer = readIFD(buffer, filepath, isBigEndian);\n        // extract the tags from the IFD\n        const tags = extractTags(ifdBuffer, isBigEndian);\n        const width = tags[256];\n        const height = tags[257];\n        if (!width || !height) {\n            throw new TypeError('Invalid Tiff. Missing tags');\n        }\n        return { height, width };\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WEBP = void 0;\nfunction calculateExtended(buffer) {\n    return {\n        height: 1 + buffer.readUIntLE(7, 3),\n        width: 1 + buffer.readUIntLE(4, 3)\n    };\n}\nfunction calculateLossless(buffer) {\n    return {\n        height: 1 + (((buffer[4] & 0xF) << 10) | (buffer[3] << 2) | ((buffer[2] & 0xC0) >> 6)),\n        width: 1 + (((buffer[2] & 0x3F) << 8) | buffer[1])\n    };\n}\nfunction calculateLossy(buffer) {\n    // `& 0x3fff` returns the last 14 bits\n    // TO-DO: include webp scaling in the calculations\n    return {\n        height: buffer.readInt16LE(8) & 0x3fff,\n        width: buffer.readInt16LE(6) & 0x3fff\n    };\n}\nexports.WEBP = {\n    validate(buffer) {\n        const riffHeader = 'RIFF' === buffer.toString('ascii', 0, 4);\n        const webpHeader = 'WEBP' === buffer.toString('ascii', 8, 12);\n        const vp8Header = 'VP8' === buffer.toString('ascii', 12, 15);\n        return (riffHeader && webpHeader && vp8Header);\n    },\n    calculate(buffer) {\n        const chunkHeader = buffer.toString('ascii', 12, 16);\n        buffer = buffer.slice(20, 30);\n        // Extended webp stream signature\n        if (chunkHeader === 'VP8X') {\n            const extendedHeader = buffer[0];\n            const validStart = (extendedHeader & 0xc0) === 0;\n            const validEnd = (extendedHeader & 0x01) === 0;\n            if (validStart && validEnd) {\n                return calculateExtended(buffer);\n            }\n            else {\n                // TODO: breaking change\n                throw new TypeError('Invalid WebP');\n            }\n        }\n        // Lossless webp stream signature\n        if (chunkHeader === 'VP8 ' && buffer[0] !== 0x2f) {\n            return calculateLossy(buffer);\n        }\n        // Lossy webp stream signature\n        const signature = buffer.toString('hex', 3, 6);\n        if (chunkHeader === 'VP8L' && signature !== '9d012a') {\n            return calculateLossless(buffer);\n        }\n        throw new TypeError('Invalid WebP');\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.typeHandlers = void 0;\n// load all available handlers explicitely for browserify support\nconst bmp_1 = require(\"./types/bmp\");\nconst cur_1 = require(\"./types/cur\");\nconst dds_1 = require(\"./types/dds\");\nconst gif_1 = require(\"./types/gif\");\nconst icns_1 = require(\"./types/icns\");\nconst ico_1 = require(\"./types/ico\");\nconst j2c_1 = require(\"./types/j2c\");\nconst jp2_1 = require(\"./types/jp2\");\nconst jpg_1 = require(\"./types/jpg\");\nconst ktx_1 = require(\"./types/ktx\");\nconst png_1 = require(\"./types/png\");\nconst pnm_1 = require(\"./types/pnm\");\nconst psd_1 = require(\"./types/psd\");\nconst svg_1 = require(\"./types/svg\");\nconst tiff_1 = require(\"./types/tiff\");\nconst webp_1 = require(\"./types/webp\");\nexports.typeHandlers = {\n    bmp: bmp_1.BMP,\n    cur: cur_1.CUR,\n    dds: dds_1.DDS,\n    gif: gif_1.GIF,\n    icns: icns_1.ICNS,\n    ico: ico_1.ICO,\n    j2c: j2c_1.J2C,\n    jp2: jp2_1.JP2,\n    jpg: jpg_1.JPG,\n    ktx: ktx_1.KTX,\n    png: png_1.PNG,\n    pnm: pnm_1.PNM,\n    psd: psd_1.PSD,\n    svg: svg_1.SVG,\n    tiff: tiff_1.TIFF,\n    webp: webp_1.WEBP,\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.detector = void 0;\nconst types_1 = require(\"./types\");\nconst keys = Object.keys(types_1.typeHandlers);\n// This map helps avoid validating for every single image type\nconst firstBytes = {\n    0x38: 'psd',\n    0x42: 'bmp',\n    0x44: 'dds',\n    0x47: 'gif',\n    0x49: 'tiff',\n    0x4d: 'tiff',\n    0x52: 'webp',\n    0x69: 'icns',\n    0x89: 'png',\n    0xff: 'jpg'\n};\nfunction detector(buffer) {\n    const byte = buffer[0];\n    if (byte in firstBytes) {\n        const type = firstBytes[byte];\n        if (type && types_1.typeHandlers[type].validate(buffer)) {\n            return type;\n        }\n    }\n    const finder = (key) => types_1.typeHandlers[key].validate(buffer);\n    return keys.find(finder);\n}\nexports.detector = detector;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.types = exports.setConcurrency = exports.disableTypes = exports.disableFS = exports.imageSize = void 0;\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nconst queue_1 = require(\"queue\");\nconst types_1 = require(\"./types\");\nconst detector_1 = require(\"./detector\");\n// Maximum buffer size, with a default of 512 kilobytes.\n// TO-DO: make this adaptive based on the initial signature of the image\nconst MaxBufferSize = 512 * 1024;\n// This queue is for async `fs` operations, to avoid reaching file-descriptor limits\nconst queue = new queue_1.default({ concurrency: 100, autostart: true });\nconst globalOptions = {\n    disabledFS: false,\n    disabledTypes: []\n};\n/**\n * Return size information based on a buffer\n *\n * @param {Buffer} buffer\n * @param {String} filepath\n * @returns {Object}\n */\nfunction lookup(buffer, filepath) {\n    // detect the file type.. don't rely on the extension\n    const type = detector_1.detector(buffer);\n    if (typeof type !== 'undefined') {\n        if (globalOptions.disabledTypes.indexOf(type) > -1) {\n            throw new TypeError('disabled file type: ' + type);\n        }\n        // find an appropriate handler for this file type\n        if (type in types_1.typeHandlers) {\n            const size = types_1.typeHandlers[type].calculate(buffer, filepath);\n            if (size !== undefined) {\n                size.type = type;\n                return size;\n            }\n        }\n    }\n    // throw up, if we don't understand the file\n    throw new TypeError('unsupported file type: ' + type + ' (file: ' + filepath + ')');\n}\n/**\n * Reads a file into a buffer.\n * @param {String} filepath\n * @returns {Promise<Buffer>}\n */\nfunction asyncFileToBuffer(filepath) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const handle = yield fs.promises.open(filepath, 'r');\n        const { size } = yield handle.stat();\n        if (size <= 0) {\n            yield handle.close();\n            throw new Error('Empty file');\n        }\n        const bufferSize = Math.min(size, MaxBufferSize);\n        const buffer = Buffer.alloc(bufferSize);\n        yield handle.read(buffer, 0, bufferSize, 0);\n        yield handle.close();\n        return buffer;\n    });\n}\n/**\n * Synchronously reads a file into a buffer, blocking the nodejs process.\n *\n * @param {String} filepath\n * @returns {Buffer}\n */\nfunction syncFileToBuffer(filepath) {\n    // read from the file, synchronously\n    const descriptor = fs.openSync(filepath, 'r');\n    const { size } = fs.fstatSync(descriptor);\n    if (size <= 0) {\n        fs.closeSync(descriptor);\n        throw new Error('Empty file');\n    }\n    const bufferSize = Math.min(size, MaxBufferSize);\n    const buffer = Buffer.alloc(bufferSize);\n    fs.readSync(descriptor, buffer, 0, bufferSize, 0);\n    fs.closeSync(descriptor);\n    return buffer;\n}\n// eslint-disable-next-line @typescript-eslint/no-use-before-define\nmodule.exports = exports = imageSize; // backwards compatibility\nexports.default = imageSize;\n/**\n * @param {Buffer|string} input - buffer or relative/absolute path of the image file\n * @param {Function=} [callback] - optional function for async detection\n */\nfunction imageSize(input, callback) {\n    // Handle buffer input\n    if (Buffer.isBuffer(input)) {\n        return lookup(input);\n    }\n    // input should be a string at this point\n    if (typeof input !== 'string' || globalOptions.disabledFS) {\n        throw new TypeError('invalid invocation. input should be a Buffer');\n    }\n    // resolve the file path\n    const filepath = path.resolve(input);\n    if (typeof callback === 'function') {\n        queue.push(() => asyncFileToBuffer(filepath)\n            .then((buffer) => process.nextTick(callback, null, lookup(buffer, filepath)))\n            .catch(callback));\n    }\n    else {\n        const buffer = syncFileToBuffer(filepath);\n        return lookup(buffer, filepath);\n    }\n}\nexports.imageSize = imageSize;\nconst disableFS = (v) => { globalOptions.disabledFS = v; };\nexports.disableFS = disableFS;\nconst disableTypes = (types) => { globalOptions.disabledTypes = types; };\nexports.disableTypes = disableTypes;\nconst setConcurrency = (c) => { queue.concurrency = c; };\nexports.setConcurrency = setConcurrency;\nexports.types = Object.keys(types_1.typeHandlers);\n","export const arrayChunk = (arr, size) =>\n  arr.length > size\n    ? [arr.slice(0, size), ...arrayChunk(arr.slice(size), size)]\n    : [arr];\n","import fs from \"fs\";\nimport path from \"path\";\nimport NodeCache from \"node-cache\";\nimport fetch from \"node-fetch\";\nimport sizeOf from \"image-size\";\nimport sharp from \"sharp\";\nimport { arrayChunk } from \"./utils\";\n\ntype TImage = Buffer | string;\n\n/* getImageSize\n   =========================================== */\n\ntype TGetImageSizeParam = TImage;\ninterface IGetImageSizeReturn {\n  height: number;\n  width: number;\n  type?: string;\n}\n\ninterface IGetImageSize {\n  (file: TGetImageSizeParam): IGetImageSizeReturn;\n}\n\nconst getImageSize: IGetImageSize = (file) => {\n  const { width, height, type } = sizeOf(file);\n\n  return {\n    width,\n    height,\n    type,\n  };\n};\n\n/* loadImage\n   =========================================== */\n\nconst remoteImageCache = new NodeCache();\n\ninterface ILoadRemoteImage {\n  (src: string): Promise<Buffer>;\n}\n\nconst loadRemoteImage: ILoadRemoteImage = async (src) => {\n  const cachedImage = remoteImageCache.get(src);\n\n  if (typeof cachedImage === \"undefined\") {\n    const response = await fetch(src);\n    const buffer = await response.buffer();\n\n    remoteImageCache.set(src, buffer);\n\n    return buffer;\n  }\n\n  if (!Buffer.isBuffer(cachedImage))\n    throw Error(`Cached value for ${src} is invalid.`);\n\n  return cachedImage;\n};\n\ninterface ILoadImageImg extends IGetImageSizeReturn {\n  src: string;\n}\ninterface ILoadImageReturn {\n  img: ILoadImageImg;\n  file: TImage;\n}\n\ninterface ILoadImage {\n  (imagePath: TImage): Promise<ILoadImageReturn>;\n}\n\nconst loadImage: ILoadImage = async (imagePath) => {\n  if (Buffer.isBuffer(imagePath)) {\n    const imageSize = getImageSize(imagePath);\n\n    return {\n      file: imagePath,\n      img: {\n        src: null,\n        ...imageSize,\n      },\n    };\n  }\n\n  if (imagePath.startsWith(\"http\")) {\n    const buffer = await loadRemoteImage(imagePath);\n    const imageSize = getImageSize(buffer);\n\n    return {\n      file: buffer,\n      img: {\n        src: imagePath,\n        ...imageSize,\n      },\n    };\n  }\n\n  if (!imagePath.startsWith(\"/\"))\n    throw new Error(\n      `Failed to parse src \\\"${imagePath}\\\", if using relative image it must start with a leading slash \"/\"`\n    );\n\n  const file = path.join(\"./public/\", imagePath);\n  const imageSize = getImageSize(file);\n\n  return {\n    file,\n    img: {\n      src: imagePath,\n      ...imageSize,\n    },\n  };\n};\n\n/* optimizeImage\n   =========================================== */\n\ninterface IOptimizeImageOptions {\n  size?: number;\n}\ninterface IOptimizeImageReturn\n  extends Record<\n    | \"optimizedForBase64\"\n    | \"optimizedForBlurhash\"\n    | \"optimizedForCSS\"\n    | \"optimizedForSVG\",\n    {\n      data: Buffer;\n      info: sharp.OutputInfo;\n      rawBuffer: number[];\n      rows: number[][][];\n    }\n  > {}\n\ninterface IOptimizeImage {\n  (src: TImage, options?: IOptimizeImageOptions): Promise<IOptimizeImageReturn>;\n}\n\nconst optimizeImage: IOptimizeImage = async (src, options = { size: 4 }) => {\n  const sizeMin = 4;\n  const sizeMax = 64;\n\n  const isSizeValid = sizeMin <= options.size && options.size <= sizeMax;\n  !isSizeValid &&\n    console.error(\n      [\"Please enter a `size` value between\", sizeMin, \"and\", sizeMax].join(\" \")\n    );\n\n  const size = isSizeValid ? options.size : 4;\n\n  const pipeline = sharp(src).resize(size, size, {\n    fit: \"inside\",\n  });\n\n  const getOptimizedForBase64 = pipeline\n    .clone()\n    .normalise()\n    .modulate({ saturation: 1.2, brightness: 1 })\n    .removeAlpha()\n    .toBuffer({ resolveWithObject: true });\n\n  const getOptimizedForBlurhash = pipeline\n    .clone()\n    .raw()\n    .ensureAlpha()\n    .toBuffer({ resolveWithObject: true });\n\n  const getOptimizedForPixels = pipeline\n    .clone()\n    .raw()\n    .toBuffer({ resolveWithObject: true });\n\n  return Promise.all([\n    getOptimizedForBase64,\n    getOptimizedForBlurhash,\n    getOptimizedForPixels,\n  ])\n\n    .then((values) =>\n      values.map((value) => {\n        const { channels, width } = value.info;\n\n        const rawBuffer = [].concat(...value.data) as number[];\n        const pixels = arrayChunk(rawBuffer, channels);\n        const rows = arrayChunk(pixels, width);\n\n        return {\n          ...value,\n          rawBuffer,\n          rows,\n        };\n      })\n    )\n    .then((values) => ({\n      optimizedForBase64: values[0],\n      optimizedForBlurhash: values[1],\n      optimizedForCSS: values[2],\n      optimizedForSVG: values[2],\n    }))\n    .catch((err) => {\n      console.error(\"transform failed\", err);\n      throw err;\n    });\n};\n\n/* getImage\n   =========================================== */\n\nexport type TGetImageSrc = TImage;\nexport interface IGetImageOptions extends IOptimizeImageOptions {}\nexport interface IGetImageReturn\n  extends Omit<ILoadImageReturn, \"file\">,\n    IOptimizeImageReturn {}\n\nexport interface IGetImage {\n  (src: TGetImageSrc, options?: IGetImageOptions): Promise<IGetImageReturn>;\n}\n\nexport const getImage: IGetImage = async (src, options) => {\n  const { file, img } = await loadImage(src);\n  const optimized = await optimizeImage(file, options);\n\n  return {\n    img,\n    ...optimized,\n  };\n};\n","import { arrayChunk } from \"./utils\";\nimport type { IGetImageReturn } from \"./get-image\";\n\ntype TRects = [\n  \"rect\",\n  Record<\"width\" | \"height\" | \"x\" | \"y\" | \"fillOpacity\", {} & number> &\n    Record<\"fill\", {} & string>\n];\n\nconst rgb = (channels: string[]) => `rgb(${channels.slice(0, 3).join(\",\")})`;\nconst alphaToOpacity = (alpha: number) => ((alpha / 255) * 100) / 100;\n\ntype TGetImageReturnSVG = IGetImageReturn[\"optimizedForSVG\"];\n\nexport interface IGetSVGOptions extends TGetImageReturnSVG {}\nexport type TGetSVGReturn = [\n  \"svg\",\n  {\n    viewBox: string;\n    width: string;\n    height: string;\n    shapeRendering: string;\n    preserveAspectRatio: string;\n    style: any;\n    xmlns: string;\n  },\n  TRects[]\n];\n\nexport interface IGetSVG {\n  (options: IGetSVGOptions): TGetSVGReturn;\n}\n\nexport const getSVG: IGetSVG = ({ data, info, rawBuffer }) => {\n  const { channels, width, height } = info;\n\n  const pixels = arrayChunk(rawBuffer, channels).map((value) => {\n    const channelToProps = {\n      3: { fill: rgb(value), fillOpacity: 1 },\n      4: {\n        fill: rgb(value),\n        fillOpacity: alphaToOpacity(value[3]),\n      },\n    };\n\n    if (!channelToProps.hasOwnProperty(channels)) {\n      throw new Error(\n        `Images with ${channels} channels aren't currently supported`\n      );\n    }\n\n    return channelToProps[channels];\n  });\n\n  const chunkRects = arrayChunk(pixels, width).map((row, y) =>\n    row.map((col, x): TRects[] => [\n      \"rect\",\n      {\n        ...col,\n        width: 1,\n        height: 1,\n        x,\n        y,\n      },\n    ])\n  );\n\n  if (chunkRects.length !== height) {\n    console.error(\n      \"Woops! Something went wrong here and caused the color height to differ from the source height.\"\n    );\n  }\n\n  const rects: TRects[] = [].concat(...chunkRects);\n\n  return [\n    \"svg\",\n    {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      width: \"100%\",\n      height: \"100%\",\n      shapeRendering: \"crispEdges\",\n      preserveAspectRatio: \"none\",\n      viewBox: `0 0 ${width} ${height}`,\n      style: {\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        transformOrigin: \"top left\",\n        transform: \"translate(-50%, -50%)\",\n        right: 0,\n        bottom: 0,\n      },\n    },\n    rects,\n  ];\n};\n","import { getBase64, TGetBase64Return } from \"./base64\";\nimport { getBlurhash, IGetBlurhashReturn } from \"./blurhash\";\nimport { getCSS, IGetCSSReturn } from \"./css\";\nimport {\n  getImage,\n  TGetImageSrc,\n  IGetImageOptions,\n  IGetImageReturn,\n} from \"./get-image\";\nimport { getSVG, TGetSVGReturn } from \"./svg\";\n\nexport type TGetPlaiceholderSrc = TGetImageSrc;\nexport interface IGetPlaiceholderOptions extends IGetImageOptions {}\nexport interface IGetPlaiceholderReturn extends Pick<IGetImageReturn, \"img\"> {\n  base64: TGetBase64Return;\n  blurhash: IGetBlurhashReturn;\n  css: IGetCSSReturn;\n  svg: TGetSVGReturn;\n}\n\nexport interface IGetPlaiceholder {\n  (\n    src: TGetPlaiceholderSrc,\n    options?: IGetPlaiceholderOptions\n  ): Promise<IGetPlaiceholderReturn>;\n}\n\nexport const getPlaiceholder: IGetPlaiceholder = async (src, options) => {\n  const {\n    img,\n    optimizedForBase64,\n    optimizedForBlurhash,\n    optimizedForCSS,\n    optimizedForSVG,\n  } = await getImage(src, options);\n\n  return Promise.all([\n    getBase64(optimizedForBase64),\n    getBlurhash(optimizedForBlurhash),\n    getCSS(optimizedForCSS),\n    getSVG(optimizedForSVG),\n  ]).then((values) => {\n    const [base64, blurhash, css, svg] = values;\n\n    return {\n      img,\n      css,\n      base64,\n      blurhash,\n      svg,\n    };\n  });\n};\n","export const ACCEPTED_FILE_TYPES = [\"jpeg\", \"png\"] as const;\n"],"names":["getBase64","data","info","format","toString","digitCharacters","encode83","n","length","result","i","digit","Math","floor","pow","sRGBToLinear","value","v","linearTosRGB","max","min","round","sign","signPow","val","exp","abs","ValidationError","Error","constructor","message","name","bytesPerPixel","multiplyBasisFunction","pixels","width","height","basisFunction","r","g","b","bytesPerRow","x","y","basis","scale","encodeDC","roundedR","roundedG","roundedB","encodeAC","maximumValue","quantR","quantG","quantB","encode","componentX","componentY","factors","normalisation","factor","j","cos","PI","push","dc","ac","slice","hash","sizeFlag","actualMaximumValue","map","quantisedMaximumValue","forEach","getBlurhash","Uint8ClampedArray","rgb","channels","join","rgba","toFixed","getCSS","rows","linearGradients","row","pixel","gradient","start","end","console","error","backgroundPosition","_","backgroundSize","backgroundImage","backgroundRepeat","clone","_instanceof","obj","type","nativeMap","Map","nativeSet","Set","nativePromise","Promise","parent","circular","depth","prototype","includeNonEnumerable","allParents","allChildren","useBuffer","Buffer","Infinity","_clone","child","proto","resolve","reject","then","err","__isArray","__isRegExp","RegExp","source","__getRegExpFlags","lastIndex","__isDate","Date","getTime","isBuffer","allocUnsafe","copy","Object","create","getPrototypeOf","index","indexOf","key","keyChild","valueChild","set","entryChild","add","attrs","getOwnPropertyDescriptor","getOwnPropertySymbols","symbols","symbol","descriptor","enumerable","defineProperty","allPropertyNames","getOwnPropertyNames","propertyName","clonePrototype","c","__objToStr","o","call","re","flags","global","ignoreCase","multiline","module","exports","EventEmitter","splice","boundMethodCheck","instance","Constructor","require$$0","require$$1","NodeCache","options","get","bind","mget","mset","del","take","ttl","getTtl","keys","has","getStats","flushAll","flushStats","close","_checkData","_check","_isInvalidKey","_wrap","_getValLength","_error","_initErrors","assign","forceString","objectValueSize","promiseValueSize","arrayValueSize","stdTTL","checkperiod","useClones","deleteOnExpire","enableLegacyCallbacks","maxKeys","warn","methodKey","oldMethod","args","cb","ref","res","error1","stats","hits","misses","ksize","vsize","validKeyTypes","_ret","_unwrap","_err","len","oRet","Array","isArray","existent","JSON","stringify","_getKeyLength","emit","keyValueSet","keyValuePair","len1","delCount","oldVal","_ttl","t","_keys","_exists","_startPeriod","_killCheckPeriod","startPeriod","checkTimeout","setTimeout","unref","clearTimeout","_retval","now","asClone","livetime","oReturn","ttlMultiplicator","errorcode","ERRORS","_errMsg","_errT","_ERRORS","createErrorMessage","errMsg","replace","this","version","conversions","lib","evenRound","createNumberConversion","bitLength","typeOpts","unsigned","lowerBound","upperBound","moduloVal","moduloBitLength","moduloBound","V","opts","enforceRange","Number","isFinite","TypeError","isNaN","clamp","undefined","treatNullAsEmptyString","String","codePointAt","S","U","charCodeAt","fromCodePoint","d","a","mixin","target","wrapperSymbol","Symbol","implSymbol","wrapperForImpl","impl","implForWrapper","wrapper","PROCESSING_OPTIONS","TRANSITIONAL","NONTRANSITIONAL","normalize","str","split","s","findStatus","mappingTable","mid","regexAstralSymbols","countSymbols","string","mapChars","domain_name","useSTD3","processing_option","hasError","processed","codePoint","status","apply","combiningMarksRegex","validateLabel","label","substr","punycode","toUnicode","search","processing","labels","validation","e","toASCII","verifyDnsLength","l","total","domain","PROCESSING_OPTIONS_1","specialSchemes","ftp","file","gopher","http","https","ws","wss","failure","ucs2","decode","at","input","idx","isASCIIDigit","isASCIIAlpha","isASCIIAlphanumeric","isASCIIHex","isSingleDot","buffer","toLowerCase","isDoubleDot","isWindowsDriveLetterCodePoints","cp1","cp2","isWindowsDriveLetterString","isNormalizedWindowsDriveLetterString","containsForbiddenHostCodePoint","containsForbiddenHostCodePointExcludingPercent","isSpecialScheme","scheme","isSpecial","url","defaultPort","percentEncode","hex","toUpperCase","utf8PercentEncode","buf","utf8PercentDecode","output","parseInt","isC0ControlPercentEncode","extraPathPercentEncodeSet","isPathPercentEncode","extraUserinfoPercentEncodeSet","isUserinfoPercentEncode","percentEncodeChar","encodeSetPredicate","cStr","parseIPv4Number","R","charAt","substring","regex","test","parseIPv4","parts","pop","numbers","part","ipv4","counter","serializeIPv4","address","parseIPv6","pieceIndex","compress","pointer","numbersSeen","ipv4Piece","number","swaps","temp","serializeIPv6","seqResult","findLongestZeroSequence","ignore0","separator","parseHost","isSpecialArg","parseOpaqueHost","asciiDomain","tr46","ipv4Host","decoded","arr","maxIdx","maxLen","currStart","currLen","serializeHost","host","trimControlChars","trimTabAndNewline","shortenPath","path","isNormalizedWindowsDriveLetter","includesCredentials","username","password","cannotHaveAUsernamePasswordPort","cannotBeABaseURL","URLStateMachine","base","encodingOverride","stateOverride","parseError","port","query","fragment","state","atFlag","arrFlag","passwordTokenSeenFlag","ret","parseSchemeStart","parseScheme","parseNoScheme","parseSpecialRelativeOrAuthority","parsePathOrAuthority","parseRelative","parseRelativeSlash","parseSpecialAuthoritySlashes","parseSpecialAuthorityIgnoreSlashes","parseAuthority","encodedCodePoints","parseHostName","parsePort","fileOtherwiseCodePoints","parseFile","parseFileSlash","parseFileHost","parsePathStart","parsePath","shift","parseCannotBeABaseURLPath","parseQuery","parseFragment","serializeURL","excludeFragment","serializeOrigin","tuple","serializeURLOrigin","parseURL","basicURLParse","usm","baseURL","setTheUsername","setThePassword","serializeInteger","integer","implementation","URLImpl","constructorArgs","parsedBase","parsedURL","_url","href","origin","protocol","hostname","pathname","toJSON","utils","URL","arguments","setup","is","configurable","Impl","privateData","interface","expose","Window","Worker","Readable","Stream","BUFFER","TYPE","Blob","blobParts","buffers","element","ArrayBuffer","isView","from","byteOffset","byteLength","concat","size","text","arrayBuffer","ab","stream","readable","_read","relativeStart","relativeEnd","span","slicedBuffer","blob","defineProperties","toStringTag","writable","FetchError","systemError","code","errno","captureStackTrace","convert","require","INTERNALS","PassThrough","Body","body","_this","_ref","_ref$size","_ref$timeout","timeout","isURLSearchParams","isBlob","disturbed","on","bodyUsed","consumeBody","ct","headers","json","_this2","parse","textConverted","_this3","convertBody","mixIn","desc","_this4","alloc","accum","accumBytes","abort","resTimeout","chunk","charset","exec","append","delete","getAll","sort","p1","p2","getBoundary","pipe","extractContentType","getTotalBytes","getLengthSync","_lengthRetrievers","hasKnownLength","writeToStream","dest","write","invalidTokenRegex","invalidHeaderCharRegex","validateName","validateValue","find","MAP","Headers","init","rawHeaders","raw","headerNames","headerName","method","iterator","pairs","pair","callback","thisArg","getHeaders","_pairs$i","createHeadersIterator","values","entries","kind","k","INTERNAL","HeadersIteratorPrototype","setPrototypeOf","next","_INTERNAL","done","exportNodeCompatibleHeaders","__proto__","hostHeaderKey","createHeadersLenient","INTERNALS$1","STATUS_CODES","Response","contentType","statusText","ok","redirected","INTERNALS$2","Url","whatwgUrl","parse_url","format_url","urlStr","streamDestructionSupported","isRequest","isAbortSignal","signal","Request","inputBody","redirect","follow","agent","getNodeRequestOptions","request","contentLengthValue","totalBytes","AbortError","URL$1","PassThrough$1","isDomainOrSubdomain","destination","original","orig","endsWith","fetch","send","response","destroy","aborted","abortAndFinalize","finalize","req","reqTimeout","addEventListener","removeEventListener","once","socket","isRedirect","statusCode","location","locationURL","requestOpts","response_options","statusMessage","codings","zlibOptions","flush","zlib","Z_SYNC_FLUSH","finishFlush","createGunzip","createInflate","createInflateRaw","createBrotliDecompress","inherits","ctor","superCtor","super_","TempCtor","util","queue","Queue","_default","concurrency","autostart","results","pending","session","running","jobs","timers","arrayMethods","begin","reverse","arrayAddMethods","methodResult","callOnErrorOrEnd","self","job","timeoutId","didTimeout","resultIndex","hasOwnProperty","listeners","promise","catch","stop","clearTimers","onerror","onend","removeListener","BMP","validate","calculate","readInt32LE","readUInt32LE","ICO","TYPE_ICON","SIZE_HEADER","SIZE_IMAGE_ENTRY","getSizeFromOffset","offset","readUInt8","getImageSize","imageIndex","readUInt16LE","nbImages","imageSize","imgs","images","CUR","TYPE_CURSOR","ico_1","DDS","GIF","gifRegexp","signature","ICNS","FILE_LENGTH_OFFSET","ENTRY_LENGTH_OFFSET","ICON_TYPE_SIZE","ICON","icm4","icm8","ics4","ics8","is32","s8mk","icp4","icl4","icl8","il32","l8mk","icp5","ic11","ich4","ich8","ih32","h8mk","icp6","ic12","it32","t8mk","ic07","ic08","ic13","ic09","ic14","ic10","readImageHeader","imageOffset","imageLengthOffset","readUInt32BE","bufferLength","fileLength","imageHeader","J2C","JP2","BoxTypes","ftyp","ihdr","jp2h","jp__","rreq","xml_","calculateRREQLength","box","unit","numStdFlags","readUInt16BE","flagsLength","numVendorFeatures","featuresLength","parseIHDR","signatureLength","ftypeBoxStart","ftypBoxLength","ftypBox","nextBoxType","MAGIC","readUInt","bits","isBigEndian","endian","methodName","JPG","EXIF_MARKER","APP1_DATA_SIZE_BYTES","EXIF_HEADER_BYTES","TIFF_BYTE_ALIGN_BYTES","BIG_ENDIAN_BYTE_ALIGN","LITTLE_ENDIAN_BYTE_ALIGN","IDF_ENTRY_BYTES","NUM_DIRECTORY_ENTRIES_BYTES","isEXIF","extractSize","extractOrientation","exifBlock","idfOffset","idfDirectoryEntries","readUInt_1","directoryEntryNumber","block","tagNumber","dataFormat","numberOfComponents","validateExifBlock","byteAlign","isLittleEndian","validateBuffer","SOIMarker","orientation","KTX","SIGNATURE","PNG","pngSignature","pngImageHeaderChunkName","pngFriedChunkName","chunkName","PNM","PNMTypes","P1","P2","P3","P4","P5","P6","P7","PF","Signatures","handlers","default","lines","dimensions","line","pam","includes","handler","PSD","SVG","svgReg","extractorRegExps","root","viewbox","INCH_CM","units","in","cm","em","ex","m","mm","pc","pt","px","unitsReg","parseLength","parseViewbox","bounds","parseAttributes","match","calculateByDimensions","calculateByViewbox","ratio","TIFF","readIFD","filepath","ifdOffset","bufferSize","fileSize","fs","statSync","endBuffer","openSync","readSync","closeSync","readValue","low","high","nextTag","extractTags","tags","determineEndianness","signatures","ifdBuffer","WEBP","calculateExtended","readUIntLE","calculateLossless","calculateLossy","readInt16LE","riffHeader","webpHeader","vp8Header","chunkHeader","extendedHeader","validStart","validEnd","typeHandlers","bmp","bmp_1","cur","cur_1","dds","dds_1","gif","gif_1","icns","icns_1","ico","j2c","j2c_1","jp2","jp2_1","jpg","jpg_1","ktx","ktx_1","png","png_1","pnm","pnm_1","psd","psd_1","svg","svg_1","tiff","tiff_1","webp","webp_1","detector","types_1","firstBytes","byte","finder","__awaiter","_arguments","P","generator","adopt","fulfilled","step","rejected","types","disableTypes","disableFS","MaxBufferSize","queue_1","globalOptions","disabledFS","disabledTypes","lookup","detector_1","asyncFileToBuffer","handle","promises","open","stat","read","syncFileToBuffer","fstatSync","process","nextTick","setConcurrency","arrayChunk","sizeOf","remoteImageCache","loadRemoteImage","src","cachedImage","loadImage","imagePath","img","startsWith","optimizeImage","sizeMin","sizeMax","isSizeValid","pipeline","sharp","resize","fit","getOptimizedForBase64","normalise","modulate","saturation","brightness","removeAlpha","toBuffer","resolveWithObject","getOptimizedForBlurhash","ensureAlpha","getOptimizedForPixels","all","rawBuffer","optimizedForBase64","optimizedForBlurhash","optimizedForCSS","optimizedForSVG","getImage","optimized","alphaToOpacity","alpha","getSVG","channelToProps","fill","fillOpacity","chunkRects","col","rects","xmlns","shapeRendering","preserveAspectRatio","viewBox","style","position","top","left","transformOrigin","transform","right","bottom","getPlaiceholder","base64","blurhash","css","ACCEPTED_FILE_TYPES"],"mappings":";;;;;;;;;;;;;;;;;;;EAWO,MAAMA,SAAS,GAAe,CAAC;IAAEC,IAAF;EAAQC,EAAAA,IAAAA;EAAR,CAAD,KACrB,CAAA,WAAA,EAAAA,IAAI,CAACC,MAAiB,CAAA,QAAA,EAAAF,IAAI,CAACG,QAAL,CAAc,QAAd,CAAuB,CADtD,CAAA;;ECXP,MAAMC,eAAe,GAAG,CACtB,GADsB,EAEtB,GAFsB,EAGtB,GAHsB,EAItB,GAJsB,EAKtB,GALsB,EAMtB,GANsB,EAOtB,GAPsB,EAQtB,GARsB,EAStB,GATsB,EAUtB,GAVsB,EAWtB,GAXsB,EAYtB,GAZsB,EAatB,GAbsB,EActB,GAdsB,EAetB,GAfsB,EAgBtB,GAhBsB,EAiBtB,GAjBsB,EAkBtB,GAlBsB,EAmBtB,GAnBsB,EAoBtB,GApBsB,EAqBtB,GArBsB,EAsBtB,GAtBsB,EAuBtB,GAvBsB,EAwBtB,GAxBsB,EAyBtB,GAzBsB,EA0BtB,GA1BsB,EA2BtB,GA3BsB,EA4BtB,GA5BsB,EA6BtB,GA7BsB,EA8BtB,GA9BsB,EA+BtB,GA/BsB,EAgCtB,GAhCsB,EAiCtB,GAjCsB,EAkCtB,GAlCsB,EAmCtB,GAnCsB,EAoCtB,GApCsB,EAqCtB,GArCsB,EAsCtB,GAtCsB,EAuCtB,GAvCsB,EAwCtB,GAxCsB,EAyCtB,GAzCsB,EA0CtB,GA1CsB,EA2CtB,GA3CsB,EA4CtB,GA5CsB,EA6CtB,GA7CsB,EA8CtB,GA9CsB,EA+CtB,GA/CsB,EAgDtB,GAhDsB,EAiDtB,GAjDsB,EAkDtB,GAlDsB,EAmDtB,GAnDsB,EAoDtB,GApDsB,EAqDtB,GArDsB,EAsDtB,GAtDsB,EAuDtB,GAvDsB,EAwDtB,GAxDsB,EAyDtB,GAzDsB,EA0DtB,GA1DsB,EA2DtB,GA3DsB,EA4DtB,GA5DsB,EA6DtB,GA7DsB,EA8DtB,GA9DsB,EA+DtB,GA/DsB,EAgEtB,GAhEsB,EAiEtB,GAjEsB,EAkEtB,GAlEsB,EAmEtB,GAnEsB,EAoEtB,GApEsB,EAqEtB,GArEsB,EAsEtB,GAtEsB,EAuEtB,GAvEsB,EAwEtB,GAxEsB,EAyEtB,GAzEsB,EA0EtB,GA1EsB,EA2EtB,GA3EsB,EA4EtB,GA5EsB,EA6EtB,GA7EsB,EA8EtB,GA9EsB,EA+EtB,GA/EsB,EAgFtB,GAhFsB,EAiFtB,GAjFsB,EAkFtB,GAlFsB,EAmFtB,GAnFsB,CAAxB,CAAA;EAgGO,MAAMC,QAAQ,GAAG,CAACC,CAAD,EAAYC,MAAZ,KAAsC;IAC5D,IAAIC,MAAM,GAAG,EAAb,CAAA;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIF,MAArB,EAA6BE,CAAC,EAA9B,EAAkC;EAChC,IAAA,IAAIC,KAAK,GAAIC,IAAI,CAACC,KAAL,CAAWN,CAAX,CAAgBK,GAAAA,IAAI,CAACE,GAAL,CAAS,EAAT,EAAaN,MAAM,GAAGE,CAAtB,CAAjB,GAA6C,EAAzD,CAAA;MACAD,MAAM,IAAIJ,eAAe,CAACO,IAAI,CAACC,KAAL,CAAWF,KAAX,CAAD,CAAzB,CAAA;EACD,GAAA;;EACD,EAAA,OAAOF,MAAP,CAAA;EACD,CAPM;;EChGA,MAAMM,YAAY,GAAIC,KAAD,IAAkB;EAC5C,EAAA,IAAIC,CAAC,GAAGD,KAAK,GAAG,GAAhB,CAAA;;IACA,IAAIC,CAAC,IAAI,OAAT,EAAkB;MAChB,OAAOA,CAAC,GAAG,KAAX,CAAA;EACD,GAFD,MAEO;EACL,IAAA,OAAOL,IAAI,CAACE,GAAL,CAAS,CAACG,CAAC,GAAG,KAAL,IAAc,KAAvB,EAA8B,GAA9B,CAAP,CAAA;EACD,GAAA;EACF,CAPM,CAAA;EASA,MAAMC,YAAY,GAAIF,KAAD,IAAkB;EAC5C,EAAA,IAAIC,CAAC,GAAGL,IAAI,CAACO,GAAL,CAAS,CAAT,EAAYP,IAAI,CAACQ,GAAL,CAAS,CAAT,EAAYJ,KAAZ,CAAZ,CAAR,CAAA;;IACA,IAAIC,CAAC,IAAI,SAAT,EAAoB;MAClB,OAAOL,IAAI,CAACS,KAAL,CAAWJ,CAAC,GAAG,KAAJ,GAAY,GAAZ,GAAkB,GAA7B,CAAP,CAAA;EACD,GAFD,MAEO;MACL,OAAOL,IAAI,CAACS,KAAL,CAAW,CAAC,KAAQT,GAAAA,IAAI,CAACE,GAAL,CAASG,CAAT,EAAY,CAAA,GAAI,GAAhB,CAAR,GAA+B,KAAhC,IAAyC,GAAzC,GAA+C,GAA1D,CAAP,CAAA;EACD,GAAA;EACF,CAPM,CAAA;EASA,MAAMK,MAAI,GAAIf,CAAD,IAAgBA,CAAC,GAAG,CAAJ,GAAQ,CAAC,CAAT,GAAa,CAA1C,CAAA;EAEA,MAAMgB,OAAO,GAAG,CAACC,GAAD,EAAcC,GAAd,KACrBH,MAAI,CAACE,GAAD,CAAJ,GAAYZ,IAAI,CAACE,GAAL,CAASF,IAAI,CAACc,GAAL,CAASF,GAAT,CAAT,EAAwBC,GAAxB,CADP;;ECpBD,MAAOE,eAAP,SAA+BC,KAA/B,CAAoC;EACxCC,EAAAA,WAAAA,CAAYC,OAAZ,EAA2B;EACzB,IAAA,KAAA,CAAMA,OAAN,CAAA,CAAA;MACA,IAAKC,CAAAA,IAAL,GAAY,iBAAZ,CAAA;MACA,IAAKD,CAAAA,OAAL,GAAeA,OAAf,CAAA;EACD,GAAA;;EALuC;;ECM1C,MAAME,aAAa,GAAG,CAAtB,CAAA;;EAEA,MAAMC,qBAAqB,GAAG,CAC5BC,MAD4B,EAE5BC,KAF4B,EAG5BC,MAH4B,EAI5BC,aAJ4B,KAKX;IACjB,IAAIC,CAAC,GAAG,CAAR,CAAA;IACA,IAAIC,CAAC,GAAG,CAAR,CAAA;IACA,IAAIC,CAAC,GAAG,CAAR,CAAA;EACA,EAAA,MAAMC,WAAW,GAAGN,KAAK,GAAGH,aAA5B,CAAA;;IAEA,KAAK,IAAIU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,KAApB,EAA2BO,CAAC,EAA5B,EAAgC;MAC9B,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,MAApB,EAA4BO,CAAC,EAA7B,EAAiC;EAC/B,MAAA,MAAMC,KAAK,GAAGP,aAAa,CAACK,CAAD,EAAIC,CAAJ,CAA3B,CAAA;EACAL,MAAAA,CAAC,IACCM,KAAK,GAAG7B,YAAY,CAACmB,MAAM,CAACF,aAAa,GAAGU,CAAhB,GAAoB,CAApB,GAAwBC,CAAC,GAAGF,WAA7B,CAAP,CADtB,CAAA;EAEAF,MAAAA,CAAC,IACCK,KAAK,GAAG7B,YAAY,CAACmB,MAAM,CAACF,aAAa,GAAGU,CAAhB,GAAoB,CAApB,GAAwBC,CAAC,GAAGF,WAA7B,CAAP,CADtB,CAAA;EAEAD,MAAAA,CAAC,IACCI,KAAK,GAAG7B,YAAY,CAACmB,MAAM,CAACF,aAAa,GAAGU,CAAhB,GAAoB,CAApB,GAAwBC,CAAC,GAAGF,WAA7B,CAAP,CADtB,CAAA;EAED,KAAA;EACF,GAAA;;EAED,EAAA,IAAII,KAAK,GAAG,CAAA,IAAKV,KAAK,GAAGC,MAAb,CAAZ,CAAA;EAEA,EAAA,OAAO,CAACE,CAAC,GAAGO,KAAL,EAAYN,CAAC,GAAGM,KAAhB,EAAuBL,CAAC,GAAGK,KAA3B,CAAP,CAAA;EACD,CA1BD,CAAA;;EA4BA,MAAMC,QAAQ,GAAI9B,KAAD,IAAiC;IAChD,MAAM+B,QAAQ,GAAG7B,YAAY,CAACF,KAAK,CAAC,CAAD,CAAN,CAA7B,CAAA;IACA,MAAMgC,QAAQ,GAAG9B,YAAY,CAACF,KAAK,CAAC,CAAD,CAAN,CAA7B,CAAA;IACA,MAAMiC,QAAQ,GAAG/B,YAAY,CAACF,KAAK,CAAC,CAAD,CAAN,CAA7B,CAAA;IACA,OAAO,CAAC+B,QAAQ,IAAI,EAAb,KAAoBC,QAAQ,IAAI,CAAhC,CAAA,GAAqCC,QAA5C,CAAA;EACD,CALD,CAAA;;EAOA,MAAMC,QAAQ,GAAG,CAAClC,KAAD,EAAuBmC,YAAvB,KAAuD;EACtE,EAAA,IAAIC,MAAM,GAAGxC,IAAI,CAACC,KAAL,CACXD,IAAI,CAACO,GAAL,CACE,CADF,EAEEP,IAAI,CAACQ,GAAL,CAAS,EAAT,EAAaR,IAAI,CAACC,KAAL,CAAWU,OAAO,CAACP,KAAK,CAAC,CAAD,CAAL,GAAWmC,YAAZ,EAA0B,GAA1B,CAAP,GAAwC,CAAxC,GAA4C,GAAvD,CAAb,CAFF,CADW,CAAb,CAAA;EAMA,EAAA,IAAIE,MAAM,GAAGzC,IAAI,CAACC,KAAL,CACXD,IAAI,CAACO,GAAL,CACE,CADF,EAEEP,IAAI,CAACQ,GAAL,CAAS,EAAT,EAAaR,IAAI,CAACC,KAAL,CAAWU,OAAO,CAACP,KAAK,CAAC,CAAD,CAAL,GAAWmC,YAAZ,EAA0B,GAA1B,CAAP,GAAwC,CAAxC,GAA4C,GAAvD,CAAb,CAFF,CADW,CAAb,CAAA;EAMA,EAAA,IAAIG,MAAM,GAAG1C,IAAI,CAACC,KAAL,CACXD,IAAI,CAACO,GAAL,CACE,CADF,EAEEP,IAAI,CAACQ,GAAL,CAAS,EAAT,EAAaR,IAAI,CAACC,KAAL,CAAWU,OAAO,CAACP,KAAK,CAAC,CAAD,CAAL,GAAWmC,YAAZ,EAA0B,GAA1B,CAAP,GAAwC,CAAxC,GAA4C,GAAvD,CAAb,CAFF,CADW,CAAb,CAAA;IAOA,OAAOC,MAAM,GAAG,EAAT,GAAc,EAAd,GAAmBC,MAAM,GAAG,EAA5B,GAAiCC,MAAxC,CAAA;EACD,CArBD,CAAA;;EAuBA,MAAMC,MAAM,GAAG,CACbrB,MADa,EAEbC,KAFa,EAGbC,MAHa,EAIboB,UAJa,EAKbC,UALa,KAMH;EACV,EAAA,IAAID,UAAU,GAAG,CAAb,IAAkBA,UAAU,GAAG,CAA/B,IAAoCC,UAAU,GAAG,CAAjD,IAAsDA,UAAU,GAAG,CAAvE,EAA0E;EACxE,IAAA,MAAM,IAAI9B,eAAJ,CAAoB,+CAApB,CAAN,CAAA;EACD,GAAA;;IACD,IAAIQ,KAAK,GAAGC,MAAR,GAAiB,CAAjB,KAAuBF,MAAM,CAAC1B,MAAlC,EAA0C;EACxC,IAAA,MAAM,IAAImB,eAAJ,CAAoB,8CAApB,CAAN,CAAA;EACD,GAAA;;IAED,IAAI+B,OAAO,GAAoC,EAA/C,CAAA;;IACA,KAAK,IAAIf,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGc,UAApB,EAAgCd,CAAC,EAAjC,EAAqC;MACnC,KAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGc,UAApB,EAAgCd,CAAC,EAAjC,EAAqC;EACnC,MAAA,MAAMiB,aAAa,GAAGjB,CAAC,IAAI,CAAL,IAAUC,CAAC,IAAI,CAAf,GAAmB,CAAnB,GAAuB,CAA7C,CAAA;QACA,MAAMiB,MAAM,GAAG3B,qBAAqB,CAClCC,MADkC,EAElCC,KAFkC,EAGlCC,MAHkC,EAIlC,CAAC1B,CAAD,EAAYmD,CAAZ,KACEF,aAAa,GACb/C,IAAI,CAACkD,GAAL,CAAUlD,IAAI,CAACmD,EAAL,GAAUrB,CAAV,GAAchC,CAAf,GAAoByB,KAA7B,CADA,GAEAvB,IAAI,CAACkD,GAAL,CAAUlD,IAAI,CAACmD,EAAL,GAAUpB,CAAV,GAAckB,CAAf,GAAoBzB,MAA7B,CAPgC,CAApC,CAAA;QASAsB,OAAO,CAACM,IAAR,CAAaJ,MAAb,CAAA,CAAA;EACD,KAAA;EACF,GAAA;;EAED,EAAA,MAAMK,EAAE,GAAGP,OAAO,CAAC,CAAD,CAAlB,CAAA;EACA,EAAA,MAAMQ,EAAE,GAAGR,OAAO,CAACS,KAAR,CAAc,CAAd,CAAX,CAAA;IAEA,IAAIC,IAAI,GAAG,EAAX,CAAA;IAEA,IAAIC,QAAQ,GAAGb,UAAU,GAAG,CAAb,GAAiB,CAACC,UAAU,GAAG,CAAd,IAAmB,CAAnD,CAAA;EACAW,EAAAA,IAAI,IAAI9D,QAAQ,CAAC+D,QAAD,EAAW,CAAX,CAAhB,CAAA;EAEA,EAAA,IAAIlB,YAAJ,CAAA;;EACA,EAAA,IAAIe,EAAE,CAAC1D,MAAH,GAAY,CAAhB,EAAmB;MACjB,IAAI8D,kBAAkB,GAAG1D,IAAI,CAACO,GAAL,CAAS,GAAG+C,EAAE,CAACK,GAAH,CAAO/C,GAAG,IAAIZ,IAAI,CAACO,GAAL,CAAS,GAAGK,GAAZ,CAAd,CAAZ,CAAzB,CAAA;EACA,IAAA,IAAIgD,qBAAqB,GAAG5D,IAAI,CAACC,KAAL,CAC1BD,IAAI,CAACO,GAAL,CAAS,CAAT,EAAYP,IAAI,CAACQ,GAAL,CAAS,EAAT,EAAaR,IAAI,CAACC,KAAL,CAAWyD,kBAAkB,GAAG,GAArB,GAA2B,GAAtC,CAAb,CAAZ,CAD0B,CAA5B,CAAA;EAGAnB,IAAAA,YAAY,GAAG,CAACqB,qBAAqB,GAAG,CAAzB,IAA8B,GAA7C,CAAA;EACAJ,IAAAA,IAAI,IAAI9D,QAAQ,CAACkE,qBAAD,EAAwB,CAAxB,CAAhB,CAAA;EACD,GAPD,MAOO;EACLrB,IAAAA,YAAY,GAAG,CAAf,CAAA;EACAiB,IAAAA,IAAI,IAAI9D,QAAQ,CAAC,CAAD,EAAI,CAAJ,CAAhB,CAAA;EACD,GAAA;;IAED8D,IAAI,IAAI9D,QAAQ,CAACwC,QAAQ,CAACmB,EAAD,CAAT,EAAe,CAAf,CAAhB,CAAA;EAEAC,EAAAA,EAAE,CAACO,OAAH,CAAWb,MAAM,IAAG;MAClBQ,IAAI,IAAI9D,QAAQ,CAAC4C,QAAQ,CAACU,MAAD,EAAST,YAAT,CAAT,EAAiC,CAAjC,CAAhB,CAAA;KADF,CAAA,CAAA;EAIA,EAAA,OAAOiB,IAAP,CAAA;EACD,CA3DD,CAAA;;AA6DA,iBAAeb,MAAf;;EChHO,MAAMmB,WAAW,GAAiB,CAAC;IAAEzE,IAAF;EAAQC,EAAAA,IAAAA;EAAR,CAAD,KAAmB;IAC1D,MAAM;MAAEiC,KAAF;EAASC,IAAAA,MAAAA;EAAT,GAAA,GAAoBlC,IAA1B,CAAA;EAEA,EAAA,MAAMkE,IAAI,GAAGb,QAAM,CAAC,IAAIoB,iBAAJ,CAAsB1E,IAAtB,CAAD,EAA8BkC,KAA9B,EAAqCC,MAArC,EAA6C,CAA7C,EAAgD,CAAhD,CAAnB,CAAA;IAEA,OAAO;MACLD,KADK;MAELC,MAFK;EAGLgC,IAAAA,IAAAA;KAHF,CAAA;EAKD,CAVM;;ECXP,MAAMQ,KAAG,GAAIC,QAAD,IAA+B,CAAA,IAAA,EAAAA,QAAQ,CAACV,KAAT,CAAe,CAAf,EAAkB,CAAlB,CAAA,CAAqBW,IAArB,CAA0B,GAA1B,CAA8B,CAAzE,CAAA,CAAA,CAAA;;EACA,MAAMC,IAAI,GAAIF,QAAD,IACX,CAAQA,KAAAA,EAAAA,QAAQ,CAACV,KAAT,CAAe,CAAf,EAAkB,CAAlB,EAAqBW,IAArB,CAA0B,GAA1B,CAAkC,CAAA,CAAA,EAAA,CAACD,QAAQ,CAAC,CAAD,CAAR,GAAc,GAAf,EAAoBG,OAApB,CAA4B,CAA5B,EAD5C,CAAA,CAAA,CAAA;;EAiBO,MAAMC,MAAM,GAAY,CAAC;IAAE/E,IAAF;EAAQgF,EAAAA,IAAAA;EAAR,CAAD,KAAmB;EAChD,EAAA,MAAMC,eAAe,GAAGD,IAAI,CAACX,GAAL,CAAUa,GAAD,IAAQ;MACvC,MAAMlD,MAAM,GAAGkD,GAAG,CAACb,GAAJ,CAASc,KAAD,IACrBA,KAAK,CAAC7E,MAAN,KAAiB,CAAjB,GAAqBuE,IAAI,CAACM,KAAD,CAAzB,GAAmCT,KAAG,CAACS,KAAD,CADzB,CAAf,CAAA;MAIA,MAAMC,QAAQ,GAAGpD,MAAM,CACpBqC,GADc,CACV,CAACc,KAAD,EAAQ3E,CAAR,KAAa;EAChB,MAAA,MAAM6E,KAAK,GAAG7E,CAAC,KAAK,CAAN,GAAU,EAAV,GAAmB,CAACA,CAAAA,EAAAA,CAAC,GAAGwB,MAAM,CAAC1B,MAAZ,GAAsB,GAAG,CAA1D,CAAA,CAAA,CAAA;QACA,MAAMgF,GAAG,GACP9E,CAAC,KAAKwB,MAAM,CAAC1B,MAAb,GAAsB,EAAtB,GAA+B,IAAC,CAACE,CAAC,GAAG,CAAL,IAAUwB,MAAM,CAAC1B,MAAlB,GAA4B,IAD7D,CAAA,CAAA,CAAA;EAGA,MAAA,UAAU6E,KAAK,CAAA,EAAGE,KAAQ,CAAA,EAAAC,IAA1B,CAAA,CAAA;EACD,KAPc,CAQdV,CAAAA,IARc,CAQT,GARS,CAAjB,CAAA;MAUA,OAAO,CAAA,uBAAA,EAA0BQ,QAAQ,CAAzC,CAAA,CAAA,CAAA;EACD,GAhBuB,CAAxB,CAAA;;EAkBA,EAAA,IAAIH,eAAe,CAAC3E,MAAhB,KAA2BN,IAAI,CAACkC,MAApC,EAA4C;MAC1CqD,OAAO,CAACC,KAAR,CACE,gGADF,CAAA,CAAA;EAGD,GAAA;;EAED,EAAA,MAAMC,kBAAkB,GAAGR,eAAe,CACvCZ,GADwB,CACpB,CAACqB,CAAD,EAAIlF,CAAJ,KACHA,CAAC,KAAK,CAAN,GAAU,MAAV,GAAwB,CAAA,EAAA,EAACA,CAAC,IAAIyE,eAAe,CAAC3E,MAAhB,GAAyB,CAA7B,CAAF,GAAqC,IAFtC,CAAA,CAAA,CAAA,CAIxBsE,IAJwB,CAInB,GAJmB,CAA3B,CAAA;EAMA,EAAA,MAAMe,cAAc,GAAW,CAAA,KAAA,EAAA,MAAMV,eAAe,CAAC3E,MAAM,CAA3D,CAAA,CAAA,CAAA;IAEA,OAAO;EACLsF,IAAAA,eAAe,EAAEX,eAAe,CAACL,IAAhB,CAAqB,GAArB,CADZ;MAELa,kBAFK;MAGLE,cAHK;EAILE,IAAAA,gBAAgB,EAAE,WAAA;KAJpB,CAAA;EAMD,CAvCM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICtBP,IAAIC,KAAK,GAAI,YAAW;;EAGxB,IAAA,SAASC,WAAT,CAAqBC,GAArB,EAA0BC,IAA1B,EAAgC;EAC9B,MAAA,OAAOA,IAAI,IAAI,IAAR,IAAgBD,GAAG,YAAYC,IAAtC,CAAA;EACD,KAAA;;EAED,IAAA,IAAIC,SAAJ,CAAA;;MACA,IAAI;EACFA,MAAAA,SAAS,GAAGC,GAAZ,CAAA;OADF,CAEE,OAAMT,CAAN,EAAS;EACX;EACA;QACEQ,SAAS,GAAG,YAAW,EAAvB,CAAA;EACD,KAAA;;EAED,IAAA,IAAIE,SAAJ,CAAA;;MACA,IAAI;EACFA,MAAAA,SAAS,GAAGC,GAAZ,CAAA;OADF,CAEE,OAAMX,CAAN,EAAS;QACTU,SAAS,GAAG,YAAW,EAAvB,CAAA;EACD,KAAA;;EAED,IAAA,IAAIE,aAAJ,CAAA;;MACA,IAAI;EACFA,MAAAA,aAAa,GAAGC,OAAhB,CAAA;OADF,CAEE,OAAMb,CAAN,EAAS;QACTY,aAAa,GAAG,YAAW,EAA3B,CAAA;EACD,KAAA;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;MACA,SAASR,KAAT,CAAeU,MAAf,EAAuBC,QAAvB,EAAiCC,KAAjC,EAAwCC,SAAxC,EAAmDC,oBAAnD,EAAyE;EACvE,MAAA,IAAI,OAAOH,QAAP,KAAoB,QAAxB,EAAkC;UAChCC,KAAK,GAAGD,QAAQ,CAACC,KAAjB,CAAA;UACAC,SAAS,GAAGF,QAAQ,CAACE,SAArB,CAAA;UACAC,oBAAoB,GAAGH,QAAQ,CAACG,oBAAhC,CAAA;UACAH,QAAQ,GAAGA,QAAQ,CAACA,QAApB,CAAA;EACD,OANsE;EAQzE;;;QACE,IAAII,UAAU,GAAG,EAAjB,CAAA;QACA,IAAIC,WAAW,GAAG,EAAlB,CAAA;EAEA,MAAA,IAAIC,SAAS,GAAG,OAAOC,MAAP,IAAiB,WAAjC,CAAA;EAEA,MAAA,IAAI,OAAOP,QAAP,IAAmB,WAAvB,EACEA,QAAQ,GAAG,IAAX,CAAA;QAEF,IAAI,OAAOC,KAAP,IAAgB,WAApB,EACEA,KAAK,GAAGO,QAAR,CAlBqE;;EAqBvE,MAAA,SAASC,MAAT,CAAgBV,MAAhB,EAAwBE,KAAxB,EAA+B;EACjC;EACI,QAAA,IAAIF,MAAM,KAAK,IAAf,EACE,OAAO,IAAP,CAAA;EAEF,QAAA,IAAIE,KAAK,KAAK,CAAd,EACE,OAAOF,MAAP,CAAA;EAEF,QAAA,IAAIW,KAAJ,CAAA;EACA,QAAA,IAAIC,KAAJ,CAAA;;EACA,QAAA,IAAI,OAAOZ,MAAP,IAAiB,QAArB,EAA+B;EAC7B,UAAA,OAAOA,MAAP,CAAA;EACD,SAAA;;EAED,QAAA,IAAIT,WAAW,CAACS,MAAD,EAASN,SAAT,CAAf,EAAoC;YAClCiB,KAAK,GAAG,IAAIjB,SAAJ,EAAR,CAAA;WADF,MAEO,IAAIH,WAAW,CAACS,MAAD,EAASJ,SAAT,CAAf,EAAoC;YACzCe,KAAK,GAAG,IAAIf,SAAJ,EAAR,CAAA;WADK,MAEA,IAAIL,WAAW,CAACS,MAAD,EAASF,aAAT,CAAf,EAAwC;YAC7Ca,KAAK,GAAG,IAAIb,aAAJ,CAAkB,UAAUe,OAAV,EAAmBC,MAAnB,EAA2B;EACnDd,YAAAA,MAAM,CAACe,IAAP,CAAY,UAASzG,KAAT,EAAgB;gBAC1BuG,OAAO,CAACH,MAAM,CAACpG,KAAD,EAAQ4F,KAAK,GAAG,CAAhB,CAAP,CAAP,CAAA;eADF,EAEG,UAASc,GAAT,EAAc;gBACfF,MAAM,CAACJ,MAAM,CAACM,GAAD,EAAMd,KAAK,GAAG,CAAd,CAAP,CAAN,CAAA;eAHF,CAAA,CAAA;EAKD,WANO,CAAR,CAAA;WADK,MAQA,IAAIZ,KAAK,CAAC2B,SAAN,CAAgBjB,MAAhB,CAAJ,EAA6B;EAClCW,UAAAA,KAAK,GAAG,EAAR,CAAA;WADK,MAEA,IAAIrB,KAAK,CAAC4B,UAAN,CAAiBlB,MAAjB,CAAJ,EAA8B;EACnCW,UAAAA,KAAK,GAAG,IAAIQ,MAAJ,CAAWnB,MAAM,CAACoB,MAAlB,EAA0BC,gBAAgB,CAACrB,MAAD,CAA1C,CAAR,CAAA;YACA,IAAIA,MAAM,CAACsB,SAAX,EAAsBX,KAAK,CAACW,SAAN,GAAkBtB,MAAM,CAACsB,SAAzB,CAAA;WAFjB,MAGA,IAAIhC,KAAK,CAACiC,QAAN,CAAevB,MAAf,CAAJ,EAA4B;YACjCW,KAAK,GAAG,IAAIa,IAAJ,CAASxB,MAAM,CAACyB,OAAP,EAAT,CAAR,CAAA;WADK,MAEA,IAAIlB,SAAS,IAAIC,MAAM,CAACkB,QAAP,CAAgB1B,MAAhB,CAAjB,EAA0C;YAC/C,IAAIQ,MAAM,CAACmB,WAAX,EAAwB;EAC9B;cACQhB,KAAK,GAAGH,MAAM,CAACmB,WAAP,CAAmB3B,MAAM,CAAClG,MAA1B,CAAR,CAAA;EACD,WAHD,MAGO;EACb;EACQ6G,YAAAA,KAAK,GAAG,IAAIH,MAAJ,CAAWR,MAAM,CAAClG,MAAlB,CAAR,CAAA;EACD,WAAA;;YACDkG,MAAM,CAAC4B,IAAP,CAAYjB,KAAZ,CAAA,CAAA;EACA,UAAA,OAAOA,KAAP,CAAA;WATK,MAUA,IAAIpB,WAAW,CAACS,MAAD,EAAS9E,KAAT,CAAf,EAAgC;EACrCyF,UAAAA,KAAK,GAAGkB,MAAM,CAACC,MAAP,CAAc9B,MAAd,CAAR,CAAA;EACD,SAFM,MAEA;EACL,UAAA,IAAI,OAAOG,SAAP,IAAoB,WAAxB,EAAqC;EACnCS,YAAAA,KAAK,GAAGiB,MAAM,CAACE,cAAP,CAAsB/B,MAAtB,CAAR,CAAA;EACAW,YAAAA,KAAK,GAAGkB,MAAM,CAACC,MAAP,CAAclB,KAAd,CAAR,CAAA;EACD,WAHD,MAIK;EACHD,YAAAA,KAAK,GAAGkB,MAAM,CAACC,MAAP,CAAc3B,SAAd,CAAR,CAAA;EACAS,YAAAA,KAAK,GAAGT,SAAR,CAAA;EACD,WAAA;EACF,SAAA;;EAED,QAAA,IAAIF,QAAJ,EAAc;EACZ,UAAA,IAAI+B,KAAK,GAAG3B,UAAU,CAAC4B,OAAX,CAAmBjC,MAAnB,CAAZ,CAAA;;EAEA,UAAA,IAAIgC,KAAK,IAAI,CAAC,CAAd,EAAiB;cACf,OAAO1B,WAAW,CAAC0B,KAAD,CAAlB,CAAA;EACD,WAAA;;YACD3B,UAAU,CAAC/C,IAAX,CAAgB0C,MAAhB,CAAA,CAAA;YACAM,WAAW,CAAChD,IAAZ,CAAiBqD,KAAjB,CAAA,CAAA;EACD,SAAA;;EAED,QAAA,IAAIpB,WAAW,CAACS,MAAD,EAASN,SAAT,CAAf,EAAoC;EAClCM,UAAAA,MAAM,CAACjC,OAAP,CAAe,UAASzD,KAAT,EAAgB4H,GAAhB,EAAqB;cAClC,IAAIC,QAAQ,GAAGzB,MAAM,CAACwB,GAAD,EAAMhC,KAAK,GAAG,CAAd,CAArB,CAAA;;cACA,IAAIkC,UAAU,GAAG1B,MAAM,CAACpG,KAAD,EAAQ4F,KAAK,GAAG,CAAhB,CAAvB,CAAA;;EACAS,YAAAA,KAAK,CAAC0B,GAAN,CAAUF,QAAV,EAAoBC,UAApB,CAAA,CAAA;aAHF,CAAA,CAAA;EAKD,SAAA;;EACD,QAAA,IAAI7C,WAAW,CAACS,MAAD,EAASJ,SAAT,CAAf,EAAoC;EAClCI,UAAAA,MAAM,CAACjC,OAAP,CAAe,UAASzD,KAAT,EAAgB;cAC7B,IAAIgI,UAAU,GAAG5B,MAAM,CAACpG,KAAD,EAAQ4F,KAAK,GAAG,CAAhB,CAAvB,CAAA;;cACAS,KAAK,CAAC4B,GAAN,CAAUD,UAAV,CAAA,CAAA;aAFF,CAAA,CAAA;EAID,SAAA;;EAED,QAAA,KAAK,IAAItI,CAAT,IAAcgG,MAAd,EAAsB;EACpB,UAAA,IAAIwC,KAAJ,CAAA;;EACA,UAAA,IAAI5B,KAAJ,EAAW;cACT4B,KAAK,GAAGX,MAAM,CAACY,wBAAP,CAAgC7B,KAAhC,EAAuC5G,CAAvC,CAAR,CAAA;EACD,WAAA;;EAED,UAAA,IAAIwI,KAAK,IAAIA,KAAK,CAACH,GAAN,IAAa,IAA1B,EAAgC;EAC9B,YAAA,SAAA;EACD,WAAA;;EACD1B,UAAAA,KAAK,CAAC3G,CAAD,CAAL,GAAW0G,MAAM,CAACV,MAAM,CAAChG,CAAD,CAAP,EAAYkG,KAAK,GAAG,CAApB,CAAjB,CAAA;EACD,SAAA;;UAED,IAAI2B,MAAM,CAACa,qBAAX,EAAkC;EAChC,UAAA,IAAIC,OAAO,GAAGd,MAAM,CAACa,qBAAP,CAA6B1C,MAA7B,CAAd,CAAA;;EACA,UAAA,KAAK,IAAIhG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2I,OAAO,CAAC7I,MAA5B,EAAoCE,CAAC,EAArC,EAAyC;EAC/C;EACA;EACQ,YAAA,IAAI4I,MAAM,GAAGD,OAAO,CAAC3I,CAAD,CAApB,CAAA;cACA,IAAI6I,UAAU,GAAGhB,MAAM,CAACY,wBAAP,CAAgCzC,MAAhC,EAAwC4C,MAAxC,CAAjB,CAAA;;cACA,IAAIC,UAAU,IAAI,CAACA,UAAU,CAACC,UAA1B,IAAwC,CAAC1C,oBAA7C,EAAmE;EACjE,cAAA,SAAA;EACD,aAAA;;EACDO,YAAAA,KAAK,CAACiC,MAAD,CAAL,GAAgBlC,MAAM,CAACV,MAAM,CAAC4C,MAAD,CAAP,EAAiB1C,KAAK,GAAG,CAAzB,CAAtB,CAAA;;EACA,YAAA,IAAI,CAAC2C,UAAU,CAACC,UAAhB,EAA4B;EAC1BjB,cAAAA,MAAM,CAACkB,cAAP,CAAsBpC,KAAtB,EAA6BiC,MAA7B,EAAqC;EACnCE,gBAAAA,UAAU,EAAE,KAAA;iBADd,CAAA,CAAA;EAGD,aAAA;EACF,WAAA;EACF,SAAA;;EAED,QAAA,IAAI1C,oBAAJ,EAA0B;EACxB,UAAA,IAAI4C,gBAAgB,GAAGnB,MAAM,CAACoB,mBAAP,CAA2BjD,MAA3B,CAAvB,CAAA;;EACA,UAAA,KAAK,IAAIhG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgJ,gBAAgB,CAAClJ,MAArC,EAA6CE,CAAC,EAA9C,EAAkD;EAChD,YAAA,IAAIkJ,YAAY,GAAGF,gBAAgB,CAAChJ,CAAD,CAAnC,CAAA;cACA,IAAI6I,UAAU,GAAGhB,MAAM,CAACY,wBAAP,CAAgCzC,MAAhC,EAAwCkD,YAAxC,CAAjB,CAAA;;EACA,YAAA,IAAIL,UAAU,IAAIA,UAAU,CAACC,UAA7B,EAAyC;EACvC,cAAA,SAAA;EACD,aAAA;;EACDnC,YAAAA,KAAK,CAACuC,YAAD,CAAL,GAAsBxC,MAAM,CAACV,MAAM,CAACkD,YAAD,CAAP,EAAuBhD,KAAK,GAAG,CAA/B,CAA5B,CAAA;EACA2B,YAAAA,MAAM,CAACkB,cAAP,CAAsBpC,KAAtB,EAA6BuC,YAA7B,EAA2C;EACzCJ,cAAAA,UAAU,EAAE,KAAA;eADd,CAAA,CAAA;EAGD,WAAA;EACF,SAAA;;EAED,QAAA,OAAOnC,KAAP,CAAA;EACD,OAAA;;EAED,MAAA,OAAOD,MAAM,CAACV,MAAD,EAASE,KAAT,CAAb,CAAA;EACD,KAAA;EAED;EACA;EACA;EACA;EACA;EACA;EACA;;;EACAZ,IAAAA,KAAK,CAAC6D,cAAN,GAAuB,SAASA,cAAT,CAAwBnD,MAAxB,EAAgC;EACrD,MAAA,IAAIA,MAAM,KAAK,IAAf,EACE,OAAO,IAAP,CAAA;;EAEF,MAAA,IAAIoD,CAAC,GAAG,YAAY,EAApB,CAAA;;QACAA,CAAC,CAACjD,SAAF,GAAcH,MAAd,CAAA;QACA,OAAO,IAAIoD,CAAJ,EAAP,CAAA;EACD,KAPD,CAnNwB;;;MA8NxB,SAASC,UAAT,CAAoBC,CAApB,EAAuB;QACrB,OAAOzB,MAAM,CAAC1B,SAAP,CAAiBzG,QAAjB,CAA0B6J,IAA1B,CAA+BD,CAA/B,CAAP,CAAA;EACD,KAAA;;MACDhE,KAAK,CAAC+D,UAAN,GAAmBA,UAAnB,CAAA;;MAEA,SAAS9B,QAAT,CAAkB+B,CAAlB,EAAqB;QACnB,OAAO,OAAOA,CAAP,KAAa,QAAb,IAAyBD,UAAU,CAACC,CAAD,CAAV,KAAkB,eAAlD,CAAA;EACD,KAAA;;MACDhE,KAAK,CAACiC,QAAN,GAAiBA,QAAjB,CAAA;;MAEA,SAASN,SAAT,CAAmBqC,CAAnB,EAAsB;QACpB,OAAO,OAAOA,CAAP,KAAa,QAAb,IAAyBD,UAAU,CAACC,CAAD,CAAV,KAAkB,gBAAlD,CAAA;EACD,KAAA;;MACDhE,KAAK,CAAC2B,SAAN,GAAkBA,SAAlB,CAAA;;MAEA,SAASC,UAAT,CAAoBoC,CAApB,EAAuB;QACrB,OAAO,OAAOA,CAAP,KAAa,QAAb,IAAyBD,UAAU,CAACC,CAAD,CAAV,KAAkB,iBAAlD,CAAA;EACD,KAAA;;MACDhE,KAAK,CAAC4B,UAAN,GAAmBA,UAAnB,CAAA;;MAEA,SAASG,gBAAT,CAA0BmC,EAA1B,EAA8B;QAC5B,IAAIC,KAAK,GAAG,EAAZ,CAAA;EACA,MAAA,IAAID,EAAE,CAACE,MAAP,EAAeD,KAAK,IAAI,GAAT,CAAA;EACf,MAAA,IAAID,EAAE,CAACG,UAAP,EAAmBF,KAAK,IAAI,GAAT,CAAA;EACnB,MAAA,IAAID,EAAE,CAACI,SAAP,EAAkBH,KAAK,IAAI,GAAT,CAAA;EAClB,MAAA,OAAOA,KAAP,CAAA;EACD,KAAA;;MACDnE,KAAK,CAAC+B,gBAAN,GAAyBA,gBAAzB,CAAA;EAEA,IAAA,OAAO/B,KAAP,CAAA;EACC,GA5PW,EAAZ,CAAA;;EA8PA,EAAA,IAAkCuE,MAAM,CAACC,OAAzC,EAAkD;MAChDD,MAAA,CAAAC,OAAA,GAAiBxE,KAAjB,CAAA;EACF,GAAA;;;;;;;;;;;;;ECvPA,EAAA,CAAC,YAAW;EACV,IAAA,IAAIyE,YAAJ,CAAA;EAAA,QAA6BzE,KAA7B,CAAA;UACE0E,MAAM,GAAG,EAAA,CAAGA,MADd,CAAA;EAAA,QAEEC,gBAAgB,GAAG,UAASC,QAAT,EAAmBC,WAAnB,EAAgC;EAAE,MAAA,IAAI,EAAED,QAAQ,YAAYC,WAAtB,CAAJ,EAAwC;EAAE,QAAA,MAAM,IAAIjJ,KAAJ,CAAU,+CAAV,CAAN,CAAA;EAAmE,OAAA;OAFpK,CAAA;UAGE+G,OAAO,GAAG,EAAA,CAAGA,QAHf;;EAKA3C,IAAAA,KAAK,GAAG8E,OAAR,CAAA;EAEAL,IAAAA,YAAY,GAAGM,8BAAiB,CAACN,YAAjC,CARU;;EAWVF,IAAAA,MAAiB,CAAAC,OAAjB,GAA8B,YAAW;QACvC,MAAMQ,SAAN,SAAwBP,YAAxB,CAAqC;EACnC5I,QAAAA,WAAW,CAACoJ,OAAO,GAAG,EAAX,EAAe;EACxB,UAAA,KAAA,EAAA,CADwB;EAIhC;EAEA;EAEA;EAEA;EAEA;;YAEQ,IAAKC,CAAAA,GAAL,GAAW,IAAA,CAAKA,GAAL,CAASC,IAAT,CAAc,IAAd,CAAX,CAdwB;EAiBhC;EAEA;EAEA;EAEA;EAEA;;YAEQ,IAAKC,CAAAA,IAAL,GAAY,IAAA,CAAKA,IAAL,CAAUD,IAAV,CAAe,IAAf,CAAZ,CA3BwB;EA8BhC;EAEA;EAEA;EACA;EACA;EAEA;EAEA;EAEA;;YAEQ,IAAKpC,CAAAA,GAAL,GAAW,IAAA,CAAKA,GAAL,CAASoC,IAAT,CAAc,IAAd,CAAX,CA5CwB;EAgDhC;EAEA;EAEA;EAEA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;YAEQ,IAAKE,CAAAA,IAAL,GAAY,IAAA,CAAKA,IAAL,CAAUF,IAAV,CAAe,IAAf,CAAZ,CAjEwB;EAoEhC;EAEA;EAEA;EAEA;EAEA;EAEA;EAEA;;YAEQ,IAAKG,CAAAA,GAAL,GAAW,IAAA,CAAKA,GAAL,CAASH,IAAT,CAAc,IAAd,CAAX,CAlFwB;EAqFhC;EACA;EACA;EAEA;EAEA;EAEA;EAEA;;YAEQ,IAAKI,CAAAA,IAAL,GAAY,IAAA,CAAKA,IAAL,CAAUJ,IAAV,CAAe,IAAf,CAAZ,CAjGwB;EAoGhC;EACA;EACA;EAEA;EAEA;EACA;EAEA;EAEA;EAEA;EAEA;EAEA;;YAEQ,IAAKK,CAAAA,GAAL,GAAW,IAAA,CAAKA,GAAL,CAASL,IAAT,CAAc,IAAd,CAAX,CAvHwB;EA0HhC;EAEA;EAEA;EAEA;EAEA;EAEA;EAEA;;YAEQ,IAAKM,CAAAA,MAAL,GAAc,IAAA,CAAKA,MAAL,CAAYN,IAAZ,CAAiB,IAAjB,CAAd,CAxIwB;EA2IhC;EAEA;EAEA;EAEA;EAEA;EAEA;;YAEQ,IAAKO,CAAAA,IAAL,GAAY,IAAA,CAAKA,IAAL,CAAUP,IAAV,CAAe,IAAf,CAAZ,CAvJwB;EA0JhC;EAEA;EAEA;EAEA;EAEA;EAEA;EAEA;EAEA;;YAEQ,IAAKQ,CAAAA,GAAL,GAAW,IAAA,CAAKA,GAAL,CAASR,IAAT,CAAc,IAAd,CAAX,CA1KwB;EA6KhC;EAEA;EAEA;EAEA;EAEA;EAEA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;YAEQ,IAAKS,CAAAA,QAAL,GAAgB,IAAA,CAAKA,QAAL,CAAcT,IAAd,CAAmB,IAAnB,CAAhB,CAlMwB;EAqMhC;EAEA;EAEA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;YAEQ,IAAKU,CAAAA,QAAL,GAAgB,IAAA,CAAKA,QAAL,CAAcV,IAAd,CAAmB,IAAnB,CAAhB,CApNwB;EAwNhC;EAEA;EAEA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;YAEQ,IAAKW,CAAAA,UAAL,GAAkB,IAAA,CAAKA,UAAL,CAAgBX,IAAhB,CAAqB,IAArB,CAAlB,CAvOwB;EA0OhC;EAEA;EAEA;;YAEQ,IAAKY,CAAAA,KAAL,GAAa,IAAA,CAAKA,KAAL,CAAWZ,IAAX,CAAgB,IAAhB,CAAb,CAhPwB;EAmPhC;EACA;;YACQ,IAAKa,CAAAA,UAAL,GAAkB,IAAA,CAAKA,UAAL,CAAgBb,IAAhB,CAAqB,IAArB,CAAlB,CArPwB;EAwPhC;;YACQ,IAAKc,CAAAA,MAAL,GAAc,IAAA,CAAKA,MAAL,CAAYd,IAAZ,CAAiB,IAAjB,CAAd,CAzPwB;EA4PhC;;YACQ,IAAKe,CAAAA,aAAL,GAAqB,IAAA,CAAKA,aAAL,CAAmBf,IAAnB,CAAwB,IAAxB,CAArB,CA7PwB;EAgQhC;;YACQ,IAAKgB,CAAAA,KAAL,GAAa,IAAA,CAAKA,KAAL,CAAWhB,IAAX,CAAgB,IAAhB,CAAb,CAjQwB;EAoQhC;;YACQ,IAAKiB,CAAAA,aAAL,GAAqB,IAAA,CAAKA,aAAL,CAAmBjB,IAAnB,CAAwB,IAAxB,CAArB,CArQwB;EAwQhC;;YACQ,IAAKkB,CAAAA,MAAL,GAAc,IAAA,CAAKA,MAAL,CAAYlB,IAAZ,CAAiB,IAAjB,CAAd,CAzQwB;EA4QhC;;YACQ,IAAKmB,CAAAA,WAAL,GAAmB,IAAKA,CAAAA,WAAL,CAAiBnB,IAAjB,CAAsB,IAAtB,CAAnB,CAAA;YACA,IAAKF,CAAAA,OAAL,GAAeA,OAAf,CAAA;;YACA,IAAKqB,CAAAA,WAAL,GA/QwB;;;EAiRxB,UAAA,IAAA,CAAKrM,IAAL,GAAY,EAAZ,CAjRwB;;EAmRxB,UAAA,IAAA,CAAKgL,OAAL,GAAe1C,MAAM,CAACgE,MAAP,CAAc;EACrC;EACUC,YAAAA,WAAW,EAAE,KAFc;EAGrC;EACUC,YAAAA,eAAe,EAAE,EAJU;EAK3BC,YAAAA,gBAAgB,EAAE,EALS;EAM3BC,YAAAA,cAAc,EAAE,EANW;EAOrC;EACUC,YAAAA,MAAM,EAAE,CARmB;EASrC;EACUC,YAAAA,WAAW,EAAE,GAVc;EAWrC;EACUC,YAAAA,SAAS,EAAE,IAZgB;EAarC;EACUC,YAAAA,cAAc,EAAE,IAdW;EAerC;EACUC,YAAAA,qBAAqB,EAAE,KAhBI;EAiBrC;EACUC,YAAAA,OAAO,EAAE,CAAC,CAAA;EAlBiB,WAAd,EAmBZ,IAAA,CAAKhC,OAnBO,CAAf,CAnRwB;;EAwSxB,UAAA,IAAI,IAAKA,CAAAA,OAAL,CAAa+B,qBAAjB,EAAwC;cACtCvH,OAAO,CAACyH,IAAR,CAAa,+DAAb,CAAA,CAAA;EACA,YAAA,CAAC,KAAD,EAAQ,MAAR,EAAgB,KAAhB,EAAuB,KAAvB,EAA8B,KAA9B,EAAqC,QAArC,EAA+C,MAA/C,EAAuD,KAAvD,EAA8DzI,OAA9D,CAAuE0I,SAAD,IAAe;gBACnF,IAAIC,SAAJ,CADmF;;gBAGnFA,SAAS,GAAG,IAAKD,CAAAA,SAAL,CAAZ,CAAA;;EACA,cAAA,IAAA,CAAKA,SAAL,CAAA,GAAkB,UAAS,GAAGE,IAAZ,EAAkB;EAClC,gBAAA,IAAIC,EAAJ,EAAQ5F,GAAR,EAAa6F,GAAb,EAAkBC,GAAlB,CAAA;kBACAD,GAAG,GAAGF,IAAN,EAAY,CAAC,GAAGA,IAAJ,CAAA,GAAYE,GAAxB,EAA6B,CAACD,EAAD,IAAO5C,MAAM,CAACT,IAAP,CAAYoD,IAAZ,EAAkB,CAAC,CAAnB,CAApC,CAFkC;;EAIlC,gBAAA,IAAI,OAAOC,EAAP,KAAc,UAAlB,EAA8B;oBAC5B,IAAI;EACFE,oBAAAA,GAAG,GAAGJ,SAAS,CAAC,GAAGC,IAAJ,CAAf,CAAA;EACAC,oBAAAA,EAAE,CAAC,IAAD,EAAOE,GAAP,CAAF,CAAA;qBAFF,CAGE,OAAOC,MAAP,EAAe;EACf/F,oBAAAA,GAAG,GAAG+F,MAAN,CAAA;sBACAH,EAAE,CAAC5F,GAAD,CAAF,CAAA;EACD,mBAAA;EACF,iBARD,MAQO;EACL,kBAAA,OAAO0F,SAAS,CAAC,GAAGC,IAAJ,EAAUC,EAAV,CAAhB,CAAA;EACD,iBAAA;iBAdH,CAAA;eAJF,CAAA,CAAA;EAqBD,WA/TuB;;;EAiUxB,UAAA,IAAA,CAAKI,KAAL,GAAa;EACXC,YAAAA,IAAI,EAAE,CADK;EAEXC,YAAAA,MAAM,EAAE,CAFG;EAGXlC,YAAAA,IAAI,EAAE,CAHK;EAIXmC,YAAAA,KAAK,EAAE,CAJI;EAKXC,YAAAA,KAAK,EAAE,CAAA;EALI,WAAb,CAjUwB;;YAyUxB,IAAKC,CAAAA,aAAL,GAAqB,CAAC,QAAD,EAAW,QAAX,CAArB,CAzUwB;;EA2UxB,UAAA,IAAA,CAAK/B,UAAL,EAAA,CAAA;;EACA,UAAA,OAAA;EACD,SAAA;;UAEDd,GAAG,CAACtC,GAAD,EAAM;YACP,IAAIoF,IAAJ,EAAUtG,GAAV,CAAA;;EACAiD,UAAAA,gBAAgB,CAAC,IAAD,EAAOK,SAAP,CAAhB,CAFO;;YAIP,IAAI,CAACtD,GAAG,GAAG,IAAKwE,CAAAA,aAAL,CAAmBtD,GAAnB,CAAP,KAAmC,IAAvC,EAA6C;EAC3C,YAAA,MAAMlB,GAAN,CAAA;EACD,WANM;;;EAQP,UAAA,IAAK,KAAKzH,IAAL,CAAU2I,GAAV,CAAkB,IAAA,IAAnB,IAA4B,IAAKqD,CAAAA,MAAL,CAAYrD,GAAZ,EAAiB,IAAK3I,CAAAA,IAAL,CAAU2I,GAAV,CAAjB,CAAhC,EAAkE;cAChE,IAAK8E,CAAAA,KAAL,CAAWC,IAAX,EAAA,CAAA;cACAK,IAAI,GAAG,IAAKC,CAAAA,OAAL,CAAa,IAAA,CAAKhO,IAAL,CAAU2I,GAAV,CAAb,CAAP,CAFgE;;EAIhE,YAAA,OAAOoF,IAAP,CAAA;EACD,WALD,MAKO;EACf;cACU,IAAKN,CAAAA,KAAL,CAAWE,MAAX,EAAA,CAAA;EACA,YAAA,OAAO,KAAK,CAAZ,CAAA;EACD,WAAA;EACF,SAAA;;UAEDxC,IAAI,CAACM,IAAD,EAAO;YACT,IAAIwC,IAAJ,EAAUxG,GAAV,EAAehH,CAAf,EAAkBkI,GAAlB,EAAuBuF,GAAvB,EAA4BC,IAA5B,CAAA;;EACAzD,UAAAA,gBAAgB,CAAC,IAAD,EAAOK,SAAP,CAAhB,CAFS;;EAIT,UAAA,IAAI,CAACqD,KAAK,CAACC,OAAN,CAAc5C,IAAd,CAAL,EAA0B;EACxBwC,YAAAA,IAAI,GAAG,IAAA,CAAK7B,MAAL,CAAY,WAAZ,CAAP,CAAA;EACA,YAAA,MAAM6B,IAAN,CAAA;EACD,WAPQ;;;EASTE,UAAAA,IAAI,GAAG,EAAP,CAAA;;EACA,UAAA,KAAK1N,CAAC,GAAG,CAAJ,EAAOyN,GAAG,GAAGzC,IAAI,CAAClL,MAAvB,EAA+BE,CAAC,GAAGyN,GAAnC,EAAwCzN,CAAC,EAAzC,EAA6C;EAC3CkI,YAAAA,GAAG,GAAG8C,IAAI,CAAChL,CAAD,CAAV,CAD2C;;cAG3C,IAAI,CAACgH,GAAG,GAAG,IAAKwE,CAAAA,aAAL,CAAmBtD,GAAnB,CAAP,KAAmC,IAAvC,EAA6C;EAC3C,cAAA,MAAMlB,GAAN,CAAA;EACD,aAL0C;;;EAO3C,YAAA,IAAK,KAAKzH,IAAL,CAAU2I,GAAV,CAAkB,IAAA,IAAnB,IAA4B,IAAKqD,CAAAA,MAAL,CAAYrD,GAAZ,EAAiB,IAAK3I,CAAAA,IAAL,CAAU2I,GAAV,CAAjB,CAAhC,EAAkE;gBAChE,IAAK8E,CAAAA,KAAL,CAAWC,IAAX,EAAA,CAAA;EACAS,cAAAA,IAAI,CAACxF,GAAD,CAAJ,GAAY,IAAKqF,CAAAA,OAAL,CAAa,IAAA,CAAKhO,IAAL,CAAU2I,GAAV,CAAb,CAAZ,CAAA;EACD,aAHD,MAGO;EACjB;gBACY,IAAK8E,CAAAA,KAAL,CAAWE,MAAX,EAAA,CAAA;EACD,aAAA;EACF,WAxBQ;;;EA0BT,UAAA,OAAOQ,IAAP,CAAA;EACD,SAAA;;EAEDrF,QAAAA,GAAG,CAACH,GAAD,EAAM5H,KAAN,EAAawK,GAAb,EAAkB;EACnB,UAAA,IAAI0C,IAAJ,EAAUxG,GAAV,EAAe6G,QAAf,CAAA;;EACA5D,UAAAA,gBAAgB,CAAC,IAAD,EAAOK,SAAP,CAAhB,CAFmB;;EAInB,UAAA,IAAI,KAAKC,OAAL,CAAagC,OAAb,GAAuB,CAAC,CAAxB,IAA6B,IAAKS,CAAAA,KAAL,CAAWhC,IAAX,IAAmB,KAAKT,OAAL,CAAagC,OAAjE,EAA0E;EACxEiB,YAAAA,IAAI,GAAG,IAAA,CAAK7B,MAAL,CAAY,YAAZ,CAAP,CAAA;EACA,YAAA,MAAM6B,IAAN,CAAA;EACD,WAPkB;;;YASnB,IAAI,IAAA,CAAKjD,OAAL,CAAauB,WAAb,IAA4B,CAAC,OAAOxL,KAAR,KAAkB,QAAlD,EAA4D;EAC1DA,YAAAA,KAAK,GAAGwN,IAAI,CAACC,SAAL,CAAezN,KAAf,CAAR,CAAA;EACD,WAXkB;;;YAanB,IAAIwK,GAAG,IAAI,IAAX,EAAiB;EACfA,YAAAA,GAAG,GAAG,IAAA,CAAKP,OAAL,CAAa2B,MAAnB,CAAA;EACD,WAfkB;;;YAiBnB,IAAI,CAAClF,GAAG,GAAG,IAAKwE,CAAAA,aAAL,CAAmBtD,GAAnB,CAAP,KAAmC,IAAvC,EAA6C;EAC3C,YAAA,MAAMlB,GAAN,CAAA;EACD,WAnBkB;;;YAqBnB6G,QAAQ,GAAG,KAAX,CArBmB;;EAuBnB,UAAA,IAAI,IAAKtO,CAAAA,IAAL,CAAU2I,GAAV,CAAJ,EAAoB;EAClB2F,YAAAA,QAAQ,GAAG,IAAX,CAAA;EACA,YAAA,IAAA,CAAKb,KAAL,CAAWI,KAAX,IAAoB,IAAK1B,CAAAA,aAAL,CAAmB,IAAK6B,CAAAA,OAAL,CAAa,IAAA,CAAKhO,IAAL,CAAU2I,GAAV,CAAb,EAA6B,KAA7B,CAAnB,CAApB,CAAA;EACD,WA1BkB;;;YA4BnB,IAAK3I,CAAAA,IAAL,CAAU2I,GAAV,CAAiB,GAAA,IAAA,CAAKuD,KAAL,CAAWnL,KAAX,EAAkBwK,GAAlB,CAAjB,CAAA;YACA,IAAKkC,CAAAA,KAAL,CAAWI,KAAX,IAAoB,IAAA,CAAK1B,aAAL,CAAmBpL,KAAnB,CAApB,CA7BmB;;YA+BnB,IAAI,CAACuN,QAAL,EAAe;cACb,IAAKb,CAAAA,KAAL,CAAWG,KAAX,IAAoB,KAAKa,aAAL,CAAmB9F,GAAnB,CAApB,CAAA;cACA,IAAK8E,CAAAA,KAAL,CAAWhC,IAAX,EAAA,CAAA;EACD,WAAA;;YACD,IAAKiD,CAAAA,IAAL,CAAU,KAAV,EAAiB/F,GAAjB,EAAsB5H,KAAtB,EAnCmB;;EAqCnB,UAAA,OAAO,IAAP,CAAA;EACD,SAAA;;UAEDqK,IAAI,CAACuD,WAAD,EAAc;EAChB,UAAA,IAAIV,IAAJ,EAAUxG,GAAV,EAAehH,CAAf,EAAkBmD,CAAlB,EAAqB+E,GAArB,EAA0BiG,YAA1B,EAAwCV,GAAxC,EAA6CW,IAA7C,EAAmDtD,GAAnD,EAAwDhK,GAAxD,CAAA;;EACAmJ,UAAAA,gBAAgB,CAAC,IAAD,EAAOK,SAAP,CAAhB,CAFgB;;YAIhB,IAAI,IAAA,CAAKC,OAAL,CAAagC,OAAb,GAAuB,CAAC,CAAxB,IAA6B,IAAKS,CAAAA,KAAL,CAAWhC,IAAX,GAAkBkD,WAAW,CAACpO,MAA9B,IAAwC,IAAKyK,CAAAA,OAAL,CAAagC,OAAtF,EAA+F;EAC7FiB,YAAAA,IAAI,GAAG,IAAA,CAAK7B,MAAL,CAAY,YAAZ,CAAP,CAAA;EACA,YAAA,MAAM6B,IAAN,CAAA;EACD,WAPe;;;EAUhB,UAAA,KAAKxN,CAAC,GAAG,CAAJ,EAAOyN,GAAG,GAAGS,WAAW,CAACpO,MAA9B,EAAsCE,CAAC,GAAGyN,GAA1C,EAA+CzN,CAAC,EAAhD,EAAoD;EAClDmO,YAAAA,YAAY,GAAGD,WAAW,CAAClO,CAAD,CAA1B,CAAA;cACA,CAAC;gBAACkI,GAAD;gBAAMpH,GAAN;EAAWgK,cAAAA,GAAAA;eAAOqD,GAAAA,YAAnB,EAFkD;;EAIlD,YAAA,IAAIrD,GAAG,IAAI,OAAOA,GAAP,KAAe,QAA1B,EAAoC;EAClC0C,cAAAA,IAAI,GAAG,IAAA,CAAK7B,MAAL,CAAY,UAAZ,CAAP,CAAA;EACA,cAAA,MAAM6B,IAAN,CAAA;EACD,aAPiD;;;cASlD,IAAI,CAACxG,GAAG,GAAG,IAAKwE,CAAAA,aAAL,CAAmBtD,GAAnB,CAAP,KAAmC,IAAvC,EAA6C;EAC3C,cAAA,MAAMlB,GAAN,CAAA;EACD,aAAA;EACF,WAAA;;EACD,UAAA,KAAK7D,CAAC,GAAG,CAAJ,EAAOiL,IAAI,GAAGF,WAAW,CAACpO,MAA/B,EAAuCqD,CAAC,GAAGiL,IAA3C,EAAiDjL,CAAC,EAAlD,EAAsD;EACpDgL,YAAAA,YAAY,GAAGD,WAAW,CAAC/K,CAAD,CAA1B,CAAA;cACA,CAAC;gBAAC+E,GAAD;gBAAMpH,GAAN;EAAWgK,cAAAA,GAAAA;EAAX,aAAA,GAAkBqD,YAAnB,EAAA;EACA,YAAA,IAAA,CAAK9F,GAAL,CAASH,GAAT,EAAcpH,GAAd,EAAmBgK,GAAnB,CAAA,CAAA;EACD,WAAA;;EACD,UAAA,OAAO,IAAP,CAAA;EACD,SAAA;;UAEDF,GAAG,CAACI,IAAD,EAAO;YACR,IAAIqD,QAAJ,EAAcrH,GAAd,EAAmBhH,CAAnB,EAAsBkI,GAAtB,EAA2BuF,GAA3B,EAAgCa,MAAhC,CAAA;EACArE,UAAAA,gBAAgB,CAAC,IAAD,EAAOK,SAAP,CAAhB,CAFQ;;EAIR,UAAA,IAAI,CAACqD,KAAK,CAACC,OAAN,CAAc5C,IAAd,CAAL,EAA0B;cACxBA,IAAI,GAAG,CAACA,IAAD,CAAP,CAAA;EACD,WAAA;;EACDqD,UAAAA,QAAQ,GAAG,CAAX,CAAA;;EACA,UAAA,KAAKrO,CAAC,GAAG,CAAJ,EAAOyN,GAAG,GAAGzC,IAAI,CAAClL,MAAvB,EAA+BE,CAAC,GAAGyN,GAAnC,EAAwCzN,CAAC,EAAzC,EAA6C;EAC3CkI,YAAAA,GAAG,GAAG8C,IAAI,CAAChL,CAAD,CAAV,CAD2C;;cAG3C,IAAI,CAACgH,GAAG,GAAG,IAAKwE,CAAAA,aAAL,CAAmBtD,GAAnB,CAAP,KAAmC,IAAvC,EAA6C;EAC3C,cAAA,MAAMlB,GAAN,CAAA;EACD,aAL0C;;;EAO3C,YAAA,IAAI,KAAKzH,IAAL,CAAU2I,GAAV,CAAA,IAAkB,IAAtB,EAA4B;EACtC;EACY,cAAA,IAAA,CAAK8E,KAAL,CAAWI,KAAX,IAAoB,IAAK1B,CAAAA,aAAL,CAAmB,IAAK6B,CAAAA,OAAL,CAAa,IAAA,CAAKhO,IAAL,CAAU2I,GAAV,CAAb,EAA6B,KAA7B,CAAnB,CAApB,CAAA;gBACA,IAAK8E,CAAAA,KAAL,CAAWG,KAAX,IAAoB,KAAKa,aAAL,CAAmB9F,GAAnB,CAApB,CAAA;gBACA,IAAK8E,CAAAA,KAAL,CAAWhC,IAAX,EAAA,CAAA;EACAqD,cAAAA,QAAQ,GALkB;;EAO1BC,cAAAA,MAAM,GAAG,IAAA,CAAK/O,IAAL,CAAU2I,GAAV,CAAT,CAAA;EACA,cAAA,OAAO,KAAK3I,IAAL,CAAU2I,GAAV,CAAP,CAR0B;;gBAU1B,IAAK+F,CAAAA,IAAL,CAAU,KAAV,EAAiB/F,GAAjB,EAAsBoG,MAAM,CAAC/N,CAA7B,CAAA,CAAA;EACD,aAAA;EACF,WAAA;;EACD,UAAA,OAAO8N,QAAP,CAAA;EACD,SAAA;;UAEDxD,IAAI,CAAC3C,GAAD,EAAM;EACR,UAAA,IAAIoF,IAAJ,CAAA;;EACArD,UAAAA,gBAAgB,CAAC,IAAD,EAAOK,SAAP,CAAhB,CAAA;EACAgD,UAAAA,IAAI,GAAG,IAAA,CAAK9C,GAAL,CAAStC,GAAT,CAAP,CAAA;;YACA,IAAKoF,IAAI,IAAI,IAAb,EAAoB;cAClB,IAAK1C,CAAAA,GAAL,CAAS1C,GAAT,CAAA,CAAA;EACD,WAAA;;EACD,UAAA,OAAOoF,IAAP,CAAA;EACD,SAAA;;EAEDxC,QAAAA,GAAG,CAAC5C,GAAD,EAAM4C,GAAN,EAAW;EACZ,UAAA,IAAI9D,GAAJ,CAAA;EACAiD,UAAAA,gBAAgB,CAAC,IAAD,EAAOK,SAAP,CAAhB,CAAA;EACAQ,UAAAA,GAAG,KAAKA,GAAG,GAAG,KAAKP,OAAL,CAAa2B,MAAxB,CAAH,CAAA;;YACA,IAAI,CAAChE,GAAL,EAAU;EACR,YAAA,OAAO,KAAP,CAAA;EACD,WANW;;;YAQZ,IAAI,CAAClB,GAAG,GAAG,IAAKwE,CAAAA,aAAL,CAAmBtD,GAAnB,CAAP,KAAmC,IAAvC,EAA6C;EAC3C,YAAA,MAAMlB,GAAN,CAAA;EACD,WAVW;;;EAYZ,UAAA,IAAK,KAAKzH,IAAL,CAAU2I,GAAV,CAAkB,IAAA,IAAnB,IAA4B,IAAKqD,CAAAA,MAAL,CAAYrD,GAAZ,EAAiB,IAAK3I,CAAAA,IAAL,CAAU2I,GAAV,CAAjB,CAAhC,EAAkE;EAC1E;cACU,IAAI4C,GAAG,IAAI,CAAX,EAAc;EACZ,cAAA,IAAA,CAAKvL,IAAL,CAAU2I,GAAV,CAAiB,GAAA,IAAA,CAAKuD,KAAL,CAAW,IAAA,CAAKlM,IAAL,CAAU2I,GAAV,CAAe3H,CAAAA,CAA1B,EAA6BuK,GAA7B,EAAkC,KAAlC,CAAjB,CAAA;EACD,aAFD,MAEO;gBACL,IAAKF,CAAAA,GAAL,CAAS1C,GAAT,CAAA,CAAA;EACD,aAAA;;EACD,YAAA,OAAO,IAAP,CAAA;EACD,WARD,MAQO;EACf;EACU,YAAA,OAAO,KAAP,CAAA;EACD,WAAA;EACF,SAAA;;UAED6C,MAAM,CAAC7C,GAAD,EAAM;YACV,IAAIqG,IAAJ,EAAUvH,GAAV,CAAA;;EACAiD,UAAAA,gBAAgB,CAAC,IAAD,EAAOK,SAAP,CAAhB,CAAA;;YACA,IAAI,CAACpC,GAAL,EAAU;EACR,YAAA,OAAO,KAAK,CAAZ,CAAA;EACD,WALS;;;YAOV,IAAI,CAAClB,GAAG,GAAG,IAAKwE,CAAAA,aAAL,CAAmBtD,GAAnB,CAAP,KAAmC,IAAvC,EAA6C;EAC3C,YAAA,MAAMlB,GAAN,CAAA;EACD,WATS;;;EAWV,UAAA,IAAK,KAAKzH,IAAL,CAAU2I,GAAV,CAAkB,IAAA,IAAnB,IAA4B,IAAKqD,CAAAA,MAAL,CAAYrD,GAAZ,EAAiB,IAAK3I,CAAAA,IAAL,CAAU2I,GAAV,CAAjB,CAAhC,EAAkE;EAChEqG,YAAAA,IAAI,GAAG,IAAKhP,CAAAA,IAAL,CAAU2I,GAAV,EAAesG,CAAtB,CAAA;EACA,YAAA,OAAOD,IAAP,CAAA;EACD,WAHD,MAGO;EACf;EACU,YAAA,OAAO,KAAK,CAAZ,CAAA;EACD,WAAA;EACF,SAAA;;EAEDvD,QAAAA,IAAI,GAAG;EACL,UAAA,IAAIyD,KAAJ,CAAA;;EACAxE,UAAAA,gBAAgB,CAAC,IAAD,EAAOK,SAAP,CAAhB,CAAA;EACAmE,UAAAA,KAAK,GAAG5G,MAAM,CAACmD,IAAP,CAAY,IAAA,CAAKzL,IAAjB,CAAR,CAAA;EACA,UAAA,OAAOkP,KAAP,CAAA;EACD,SAAA;;UAEDxD,GAAG,CAAC/C,GAAD,EAAM;EACP,UAAA,IAAIwG,OAAJ,CAAA;;EACAzE,UAAAA,gBAAgB,CAAC,IAAD,EAAOK,SAAP,CAAhB,CAAA;EACAoE,UAAAA,OAAO,GAAI,IAAKnP,CAAAA,IAAL,CAAU2I,GAAV,CAAA,IAAkB,IAAnB,IAA4B,IAAA,CAAKqD,MAAL,CAAYrD,GAAZ,EAAiB,IAAA,CAAK3I,IAAL,CAAU2I,GAAV,CAAjB,CAAtC,CAAA;EACA,UAAA,OAAOwG,OAAP,CAAA;EACD,SAAA;;EAEDxD,QAAAA,QAAQ,GAAG;EACTjB,UAAAA,gBAAgB,CAAC,IAAD,EAAOK,SAAP,CAAhB,CAAA;EACA,UAAA,OAAO,KAAK0C,KAAZ,CAAA;EACD,SAAA;;EAED7B,QAAAA,QAAQ,CAACwD,YAAY,GAAG,IAAhB,EAAsB;EAC5B1E,UAAAA,gBAAgB,CAAC,IAAD,EAAOK,SAAP,CAAhB,CAD4B;EAIpC;;EACQ,UAAA,IAAA,CAAK/K,IAAL,GAAY,EAAZ,CAL4B;;EAO5B,UAAA,IAAA,CAAKyN,KAAL,GAAa;EACXC,YAAAA,IAAI,EAAE,CADK;EAEXC,YAAAA,MAAM,EAAE,CAFG;EAGXlC,YAAAA,IAAI,EAAE,CAHK;EAIXmC,YAAAA,KAAK,EAAE,CAJI;EAKXC,YAAAA,KAAK,EAAE,CAAA;EALI,WAAb,CAP4B;;EAe5B,UAAA,IAAA,CAAKwB,gBAAL,EAAA,CAAA;;YACA,IAAKtD,CAAAA,UAAL,CAAgBqD,YAAhB,CAAA,CAAA;;YACA,IAAKV,CAAAA,IAAL,CAAU,OAAV,CAAA,CAAA;EACD,SAAA;;EAED7C,QAAAA,UAAU,GAAG;EACXnB,UAAAA,gBAAgB,CAAC,IAAD,EAAOK,SAAP,CAAhB,CADW;;EAGX,UAAA,IAAA,CAAK0C,KAAL,GAAa;EACXC,YAAAA,IAAI,EAAE,CADK;EAEXC,YAAAA,MAAM,EAAE,CAFG;EAGXlC,YAAAA,IAAI,EAAE,CAHK;EAIXmC,YAAAA,KAAK,EAAE,CAJI;EAKXC,YAAAA,KAAK,EAAE,CAAA;aALT,CAAA;YAOA,IAAKa,CAAAA,IAAL,CAAU,aAAV,CAAA,CAAA;EACD,SAAA;;EAED5C,QAAAA,KAAK,GAAG;EACNpB,UAAAA,gBAAgB,CAAC,IAAD,EAAOK,SAAP,CAAhB,CAAA;;EACA,UAAA,IAAA,CAAKsE,gBAAL,EAAA,CAAA;EACD,SAAA;;EAEDtD,QAAAA,UAAU,CAACuD,WAAW,GAAG,IAAf,EAAqB;EAC7B,UAAA,IAAI3G,GAAJ,EAAS2E,GAAT,EAAcvM,KAAd,CAAA;EACA2J,UAAAA,gBAAgB,CAAC,IAAD,EAAOK,SAAP,CAAhB,CAAA;EACAuC,UAAAA,GAAG,GAAG,IAAA,CAAKtN,IAAX,CAH6B;;YAK7B,KAAK2I,GAAL,IAAY2E,GAAZ,EAAiB;EACfvM,YAAAA,KAAK,GAAGuM,GAAG,CAAC3E,GAAD,CAAX,CAAA;;EACA,YAAA,IAAA,CAAKqD,MAAL,CAAYrD,GAAZ,EAAiB5H,KAAjB,CAAA,CAAA;EACD,WAAA;;YACD,IAAIuO,WAAW,IAAI,IAAKtE,CAAAA,OAAL,CAAa4B,WAAb,GAA2B,CAA9C,EAAiD;EAC/C,YAAA,IAAA,CAAK2C,YAAL,GAAoBC,UAAU,CAAC,KAAKzD,UAAN,EAAkB,IAAKf,CAAAA,OAAL,CAAa4B,WAAb,GAA2B,IAA7C,EAAmD0C,WAAnD,CAA9B,CAAA;;cACA,IAAK,IAAA,CAAKC,YAAL,IAAqB,IAAtB,IAAgC,IAAKA,CAAAA,YAAL,CAAkBE,KAAlB,IAA2B,IAA/D,EAAsE;gBACpE,IAAKF,CAAAA,YAAL,CAAkBE,KAAlB,EAAA,CAAA;EACD,aAAA;EACF,WAAA;EACF,SAvmBkC;EA2mBzC;;;EACMJ,QAAAA,gBAAgB,GAAG;EACjB,UAAA,IAAI,IAAKE,CAAAA,YAAL,IAAqB,IAAzB,EAA+B;EAC7B,YAAA,OAAOG,YAAY,CAAC,IAAKH,CAAAA,YAAN,CAAnB,CAAA;EACD,WAAA;EACF,SAAA;;EAEDvD,QAAAA,MAAM,CAACrD,GAAD,EAAM3I,IAAN,EAAY;EAChB,UAAA,IAAI2P,OAAJ,CAAA;;EACAjF,UAAAA,gBAAgB,CAAC,IAAD,EAAOK,SAAP,CAAhB,CAAA;YACA4E,OAAO,GAAG,IAAV,CAHgB;EAKxB;;EACQ,UAAA,IAAI3P,IAAI,CAACiP,CAAL,KAAW,CAAX,IAAgBjP,IAAI,CAACiP,CAAL,GAAShH,IAAI,CAAC2H,GAAL,EAA7B,EAAyC;EACvC,YAAA,IAAI,IAAK5E,CAAAA,OAAL,CAAa8B,cAAjB,EAAiC;EAC/B6C,cAAAA,OAAO,GAAG,KAAV,CAAA;gBACA,IAAKtE,CAAAA,GAAL,CAAS1C,GAAT,CAAA,CAAA;EACD,aAAA;;cACD,IAAK+F,CAAAA,IAAL,CAAU,SAAV,EAAqB/F,GAArB,EAA0B,IAAKqF,CAAAA,OAAL,CAAahO,IAAb,CAA1B,CAAA,CAAA;EACD,WAAA;;EACD,UAAA,OAAO2P,OAAP,CAAA;EACD,SAAA;;UAED1D,aAAa,CAACtD,GAAD,EAAM;EACjB,UAAA,IAAI2E,GAAJ,CAAA;EACA5C,UAAAA,gBAAgB,CAAC,IAAD,EAAOK,SAAP,CAAhB,CAAA;;EACA,UAAA,IAAIuC,GAAG,GAAG,OAAO3E,GAAb,EAAkBD,OAAO,CAACsB,IAAR,CAAa,KAAK8D,aAAlB,EAAiCR,GAAjC,CAAA,GAAwC,CAA9D,EAAiE;EAC/D,YAAA,OAAO,IAAKlB,CAAAA,MAAL,CAAY,UAAZ,EAAwB;EAC7BlG,cAAAA,IAAI,EAAE,OAAOyC,GAAAA;EADgB,aAAxB,CAAP,CAAA;EAGD,WAAA;EACF,SAAA;;UAEDuD,KAAK,CAACnL,KAAD,EAAQwK,GAAR,EAAasE,OAAO,GAAG,IAAvB,EAA6B;EAChC,UAAA,IAAIC,QAAJ,CAAcF,CAAAA,GAAd,CAAmBG,CAASC,iBAA5B;EACAtF,UAAAA,gBAAgB,CAAC,IAAD,EAAOK,SAAP,CAAhB,CAAA;;EACA,UAAA,IAAI,CAAC,IAAA,CAAKC,OAAL,CAAa6B,SAAlB,EAA6B;EAC3BgD,YAAAA,OAAO,GAAG,KAAV,CAAA;EACD,WAL+B;;;EAOhCD,UAAAA,GAAG,GAAG3H,IAAI,CAAC2H,GAAL,EAAN,CAAA;EACAE,UAAAA,QAAQ,GAAG,CAAX,CAAA;YACAE,gBAAgB,GAAG,IAAnB,CATgC;;YAWhC,IAAIzE,GAAG,KAAK,CAAZ,EAAe;EACbuE,YAAAA,QAAQ,GAAG,CAAX,CAAA;aADF,MAEO,IAAIvE,GAAJ,EAAS;EACduE,YAAAA,QAAQ,GAAGF,GAAG,GAAIrE,GAAG,GAAGyE,gBAAxB,CAAA;EACD,WAFM,MAEA;EACf;EACU,YAAA,IAAI,KAAKhF,OAAL,CAAa2B,MAAb,KAAwB,CAA5B,EAA+B;EAC7BmD,cAAAA,QAAQ,GAAG,IAAA,CAAK9E,OAAL,CAAa2B,MAAxB,CAAA;EACD,aAFD,MAEO;gBACLmD,QAAQ,GAAGF,GAAG,GAAI,IAAA,CAAK5E,OAAL,CAAa2B,MAAb,GAAsBqD,gBAAxC,CAAA;EACD,aAAA;EACF,WAtB+B;;;EAwBhC,UAAA,OAAiB;EACff,YAAAA,CAAC,EAAEa,QADY;EAEf9O,YAAAA,CAAC,EAAE6O,OAAO,GAAG9J,KAAK,CAAChF,KAAD,CAAR,GAAkBA,KAAAA;aAF9B,CAAA;EAID,SAxqBkC;EA4qBzC;;;EACMiN,QAAAA,OAAO,CAACjN,KAAD,EAAQ8O,OAAO,GAAG,IAAlB,EAAwB;EAC7B,UAAA,IAAI,CAAC,IAAA,CAAK7E,OAAL,CAAa6B,SAAlB,EAA6B;EAC3BgD,YAAAA,OAAO,GAAG,KAAV,CAAA;EACD,WAAA;;EACD,UAAA,IAAI9O,KAAK,CAACC,CAAN,IAAW,IAAf,EAAqB;EACnB,YAAA,IAAI6O,OAAJ,EAAa;EACX,cAAA,OAAO9J,KAAK,CAAChF,KAAK,CAACC,CAAP,CAAZ,CAAA;EACD,aAFD,MAEO;gBACL,OAAOD,KAAK,CAACC,CAAb,CAAA;EACD,aAAA;EACF,WAAA;;EACD,UAAA,OAAO,IAAP,CAAA;EACD,SAzrBkC;EA6rBzC;;;UACMyN,aAAa,CAAC9F,GAAD,EAAM;EACjB,UAAA,OAAOA,GAAG,CAACxI,QAAJ,EAAA,CAAeI,MAAtB,CAAA;EACD,SAAA;;UAED4L,aAAa,CAACpL,KAAD,EAAQ;EACnB2J,UAAAA,gBAAgB,CAAC,IAAD,EAAOK,SAAP,CAAhB,CAAA;;EACA,UAAA,IAAI,OAAOhK,KAAP,KAAiB,QAArB,EAA+B;EACvC;cACU,OAAOA,KAAK,CAACR,MAAb,CAAA;EACD,WAHD,MAGO,IAAI,IAAA,CAAKyK,OAAL,CAAauB,WAAjB,EAA8B;EAC7C;EACU,YAAA,OAAOgC,IAAI,CAACC,SAAL,CAAezN,KAAf,EAAsBR,MAA7B,CAAA;aAFK,MAGA,IAAI6N,KAAK,CAACC,OAAN,CAActN,KAAd,CAAJ,EAA0B;EACzC;EACU,YAAA,OAAO,KAAKiK,OAAL,CAAa0B,cAAb,GAA8B3L,KAAK,CAACR,MAA3C,CAAA;EACD,WAHM,MAGA,IAAI,OAAOQ,KAAP,KAAiB,QAArB,EAA+B;EACpC,YAAA,OAAO,CAAP,CAAA;EACD,WAFM,MAEA,IAAI,QAAQA,KAAK,IAAI,IAAT,GAAgBA,KAAK,CAACyG,IAAtB,GAA6B,KAAK,CAA1C,CAAA,KAAiD,UAArD,EAAiE;EAChF;EACA;cACU,OAAO,IAAA,CAAKwD,OAAL,CAAayB,gBAApB,CAAA;aAHK,MAIA,IAAI,OAAOxF,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,KAAK,IAA5C,GAAmDA,MAAM,CAACkB,QAAP,CAAgBpH,KAAhB,CAAnD,GAA4E,KAAK,CAArF,EAAwF;cAC7F,OAAOA,KAAK,CAACR,MAAb,CAAA;aADK,MAEA,IAAKQ,KAAK,IAAI,IAAV,IAAmB,OAAOA,KAAP,KAAiB,QAAxC,EAAkD;EACjE;cACU,OAAO,IAAA,CAAKiK,OAAL,CAAawB,eAAb,GAA+BlE,MAAM,CAACmD,IAAP,CAAY1K,KAAZ,CAAA,CAAmBR,MAAzD,CAAA;EACD,WAHM,MAGA,IAAI,OAAOQ,KAAP,KAAiB,SAArB,EAAgC;EACrC,YAAA,OAAO,CAAP,CAAA;EACD,WAFM,MAEA;EACf;EACU,YAAA,OAAO,CAAP,CAAA;EACD,WAAA;EACF,SAAA;;EAEDqL,QAAAA,MAAM,CAAClG,IAAD,EAAOlG,IAAI,GAAG,EAAd,EAAkB;EACtB,UAAA,IAAIyF,KAAJ,CAAA;EACAiF,UAAAA,gBAAgB,CAAC,IAAD,EAAOK,SAAP,CAAhB,CAFsB;;YAItBtF,KAAK,GAAG,IAAI9D,KAAJ,EAAR,CAAA;YACA8D,KAAK,CAAC3D,IAAN,GAAaoE,IAAb,CAAA;YACAT,KAAK,CAACwK,SAAN,GAAkB/J,IAAlB,CAAA;EACAT,UAAAA,KAAK,CAAC5D,OAAN,GAAgB,KAAKqO,MAAL,CAAYhK,IAAZ,CAAqB,IAAA,IAArB,GAA4B,IAAA,CAAKgK,MAAL,CAAYhK,IAAZ,EAAkBlG,IAAlB,CAA5B,GAAsD,GAAtE,CAAA;EACAyF,UAAAA,KAAK,CAACzF,IAAN,GAAaA,IAAb,CARsB;;EAUtB,UAAA,OAAOyF,KAAP,CAAA;EACD,SAAA;;EAED4G,QAAAA,WAAW,GAAG;EACZ,UAAA,IAAI8D,OAAJ,EAAaC,KAAb,EAAoB9C,GAApB,CAAA;;EACA5C,UAAAA,gBAAgB,CAAC,IAAD,EAAOK,SAAP,CAAhB,CAAA;YACA,IAAKmF,CAAAA,MAAL,GAAc,EAAd,CAAA;YACA5C,GAAG,GAAG,KAAK+C,OAAX,CAAA;;YACA,KAAKD,KAAL,IAAc9C,GAAd,EAAmB;EACjB6C,YAAAA,OAAO,GAAG7C,GAAG,CAAC8C,KAAD,CAAb,CAAA;cACA,IAAKF,CAAAA,MAAL,CAAYE,KAAZ,CAAA,GAAqB,KAAKE,kBAAL,CAAwBH,OAAxB,CAArB,CAAA;EACD,WAAA;EACF,SAAA;;UAEDG,kBAAkB,CAACC,MAAD,EAAS;YACzB,OAAO,UAASnD,IAAT,EAAe;cACpB,OAAOmD,MAAM,CAACC,OAAP,CAAe,OAAf,EAAwBpD,IAAI,CAAClH,IAA7B,CAAP,CAAA;aADF,CAAA;EAGD,SAAA;;EA5vBkC,OAAA;EAgwBrC6E,MAAAA,SAAS,CAACnE,SAAV,CAAoByJ,OAApB,GAA8B;EAC5B,QAAA,WAAA,EAAa,uBADe;EAE5B,QAAA,YAAA,EAAc,gCAFc;EAG5B,QAAA,UAAA,EAAY,yEAHgB;EAI5B,QAAA,WAAA,EAAa,uCAJe;UAK5B,UAAY,EAAA,sCAAA;SALd,CAAA;EAQA,MAAA,OAAOtF,SAAP,CAAA;EAED,KA3wB4B,CA2wB1Bf,IA3wB0B,CA2wBrB,IA3wBqB,CAA7B,CAAA;EA6wBD,GAxxBD,EAwxBGA,IAxxBH,CAwxBQyG,cAxxBR,CAAA,CAAA;;;;;;;;;;;;;ECAA,EAAA,CAAC,YAAW;EACV,IAAA,IAAIlG,OAAJ,CAAA;EAEAA,IAAAA,OAAO,GAAGD,MAAiB,CAAAC,OAAjB,GAAiBM,UAA3B,CAAA;MAEAN,OAAO,CAACmG,OAAR,GAAkB,OAAlB,CAAA;EAED,GAPD,EAOG1G,IAPH,CAOQyG,cAPR,CAAA,CAAA;;;ECPA,IAAIE,WAAW,GAAG,EAAlB,CAAA;EACA,IAAcC,GAAA,GAAGD,WAAjB,CAAA;;EAEA,SAAStP,IAAT,CAAcoB,CAAd,EAAiB;EACb,EAAA,OAAOA,CAAC,GAAG,CAAJ,GAAQ,CAAC,CAAT,GAAa,CAApB,CAAA;EACH,CAAA;;EAED,SAASoO,SAAT,CAAmBpO,CAAnB,EAAsB;EACtB;EACI,EAAA,IAAKA,CAAC,GAAG,CAAL,KAAY,GAAZ,IAAmB,CAACA,CAAC,GAAG,CAAL,MAAY,CAAnC,EAAsC;EAAA;EAClC,IAAA,OAAO9B,IAAI,CAACC,KAAL,CAAW6B,CAAX,CAAP,CAAA;EACH,GAFD,MAEO;EACH,IAAA,OAAO9B,IAAI,CAACS,KAAL,CAAWqB,CAAX,CAAP,CAAA;EACH,GAAA;EACJ,CAAA;;EAED,SAASqO,sBAAT,CAAgCC,SAAhC,EAA2CC,QAA3C,EAAqD;EACjD,EAAA,IAAI,CAACA,QAAQ,CAACC,QAAd,EAAwB;EACpB,IAAA,EAAEF,SAAF,CAAA;EACH,GAAA;;EACD,EAAA,MAAMG,UAAU,GAAGF,QAAQ,CAACC,QAAT,GAAoB,CAApB,GAAwB,CAACtQ,IAAI,CAACE,GAAL,CAAS,CAAT,EAAYkQ,SAAZ,CAA5C,CAAA;IACA,MAAMI,UAAU,GAAGxQ,IAAI,CAACE,GAAL,CAAS,CAAT,EAAYkQ,SAAZ,CAAA,GAAyB,CAA5C,CAAA;IAEA,MAAMK,SAAS,GAAGJ,QAAQ,CAACK,eAAT,GAA2B1Q,IAAI,CAACE,GAAL,CAAS,CAAT,EAAYmQ,QAAQ,CAACK,eAArB,CAA3B,GAAmE1Q,IAAI,CAACE,GAAL,CAAS,CAAT,EAAYkQ,SAAZ,CAArF,CAAA;EACA,EAAA,MAAMO,WAAW,GAAGN,QAAQ,CAACK,eAAT,GAA2B1Q,IAAI,CAACE,GAAL,CAAS,CAAT,EAAYmQ,QAAQ,CAACK,eAAT,GAA2B,CAAvC,CAA3B,GAAuE1Q,IAAI,CAACE,GAAL,CAAS,CAAT,EAAYkQ,SAAS,GAAG,CAAxB,CAA3F,CAAA;EAEA,EAAA,OAAO,UAASQ,CAAT,EAAYC,IAAZ,EAAkB;EACrB,IAAA,IAAI,CAACA,IAAL,EAAWA,IAAI,GAAG,EAAP,CAAA;MAEX,IAAI/O,CAAC,GAAG,CAAC8O,CAAT,CAAA;;MAEA,IAAIC,IAAI,CAACC,YAAT,EAAuB;EACnB,MAAA,IAAI,CAACC,MAAM,CAACC,QAAP,CAAgBlP,CAAhB,CAAL,EAAyB;EACrB,QAAA,MAAM,IAAImP,SAAJ,CAAc,iCAAd,CAAN,CAAA;EACH,OAAA;;EAEDnP,MAAAA,CAAC,GAAGpB,IAAI,CAACoB,CAAD,CAAJ,GAAU9B,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACc,GAAL,CAASgB,CAAT,CAAX,CAAd,CAAA;;EACA,MAAA,IAAIA,CAAC,GAAGyO,UAAJ,IAAkBzO,CAAC,GAAG0O,UAA1B,EAAsC;EAClC,QAAA,MAAM,IAAIS,SAAJ,CAAc,+BAAd,CAAN,CAAA;EACH,OAAA;;EAED,MAAA,OAAOnP,CAAP,CAAA;EACH,KAAA;;MAED,IAAI,CAACoP,KAAK,CAACpP,CAAD,CAAN,IAAa+O,IAAI,CAACM,KAAtB,EAA6B;EACzBrP,MAAAA,CAAC,GAAGoO,SAAS,CAACpO,CAAD,CAAb,CAAA;EAEA,MAAA,IAAIA,CAAC,GAAGyO,UAAR,EAAoBzO,CAAC,GAAGyO,UAAJ,CAAA;EACpB,MAAA,IAAIzO,CAAC,GAAG0O,UAAR,EAAoB1O,CAAC,GAAG0O,UAAJ,CAAA;EACpB,MAAA,OAAO1O,CAAP,CAAA;EACH,KAAA;;MAED,IAAI,CAACiP,MAAM,CAACC,QAAP,CAAgBlP,CAAhB,CAAD,IAAuBA,CAAC,KAAK,CAAjC,EAAoC;EAChC,MAAA,OAAO,CAAP,CAAA;EACH,KAAA;;EAEDA,IAAAA,CAAC,GAAGpB,IAAI,CAACoB,CAAD,CAAJ,GAAU9B,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACc,GAAL,CAASgB,CAAT,CAAX,CAAd,CAAA;MACAA,CAAC,GAAGA,CAAC,GAAG2O,SAAR,CAAA;;MAEA,IAAI,CAACJ,QAAQ,CAACC,QAAV,IAAsBxO,CAAC,IAAI6O,WAA/B,EAA4C;QACxC,OAAO7O,CAAC,GAAG2O,SAAX,CAAA;EACH,KAFD,MAEO,IAAIJ,QAAQ,CAACC,QAAb,EAAuB;QAC1B,IAAIxO,CAAC,GAAG,CAAR,EAAW;EACTA,QAAAA,CAAC,IAAI2O,SAAL,CAAA;EACD,OAFD,MAEO,IAAI3O,CAAC,KAAK,CAAC,CAAX,EAAc;EAAA;EACnB,QAAA,OAAO,CAAP,CAAA;EACD,OAAA;EACJ,KAAA;;EAED,IAAA,OAAOA,CAAP,CAAA;KA3CJ,CAAA;EA6CH,CAAA;;EAEDkO,WAAW,CAAC,MAAD,CAAX,GAAsB,YAAY;EAC9B,EAAA,OAAOoB,SAAP,CAAA;EACH,CAFD,CAAA;;EAIApB,WAAW,CAAC,SAAD,CAAX,GAAyB,UAAUpP,GAAV,EAAe;IACpC,OAAO,CAAC,CAACA,GAAT,CAAA;EACH,CAFD,CAAA;;EAIAoP,WAAW,CAAC,MAAD,CAAX,GAAsBG,sBAAsB,CAAC,CAAD,EAAI;EAAEG,EAAAA,QAAQ,EAAE,KAAA;EAAZ,CAAJ,CAA5C,CAAA;EACAN,WAAW,CAAC,OAAD,CAAX,GAAuBG,sBAAsB,CAAC,CAAD,EAAI;EAAEG,EAAAA,QAAQ,EAAE,IAAA;EAAZ,CAAJ,CAA7C,CAAA;EAEAN,WAAW,CAAC,OAAD,CAAX,GAAuBG,sBAAsB,CAAC,EAAD,EAAK;EAAEG,EAAAA,QAAQ,EAAE,KAAA;EAAZ,CAAL,CAA7C,CAAA;EACAN,WAAW,CAAC,gBAAD,CAAX,GAAgCG,sBAAsB,CAAC,EAAD,EAAK;EAAEG,EAAAA,QAAQ,EAAE,IAAA;EAAZ,CAAL,CAAtD,CAAA;EAEAN,WAAW,CAAC,MAAD,CAAX,GAAsBG,sBAAsB,CAAC,EAAD,EAAK;EAAEG,EAAAA,QAAQ,EAAE,KAAA;EAAZ,CAAL,CAA5C,CAAA;EACAN,WAAW,CAAC,eAAD,CAAX,GAA+BG,sBAAsB,CAAC,EAAD,EAAK;EAAEG,EAAAA,QAAQ,EAAE,IAAA;EAAZ,CAAL,CAArD,CAAA;EAEAN,WAAW,CAAC,WAAD,CAAX,GAA2BG,sBAAsB,CAAC,EAAD,EAAK;EAAEG,EAAAA,QAAQ,EAAE,KAAZ;EAAmBI,EAAAA,eAAe,EAAE,EAAA;EAApC,CAAL,CAAjD,CAAA;EACAV,WAAW,CAAC,oBAAD,CAAX,GAAoCG,sBAAsB,CAAC,EAAD,EAAK;EAAEG,EAAAA,QAAQ,EAAE,IAAZ;EAAkBI,EAAAA,eAAe,EAAE,EAAA;EAAnC,CAAL,CAA1D,CAAA;;EAEAV,WAAW,CAAC,QAAD,CAAX,GAAwB,UAAUY,CAAV,EAAa;IACjC,MAAM9O,CAAC,GAAG,CAAC8O,CAAX,CAAA;;EAEA,EAAA,IAAI,CAACG,MAAM,CAACC,QAAP,CAAgBlP,CAAhB,CAAL,EAAyB;EACrB,IAAA,MAAM,IAAImP,SAAJ,CAAc,+CAAd,CAAN,CAAA;EACH,GAAA;;EAED,EAAA,OAAOnP,CAAP,CAAA;EACH,CARD,CAAA;;EAUAkO,WAAW,CAAC,qBAAD,CAAX,GAAqC,UAAUY,CAAV,EAAa;IAC9C,MAAM9O,CAAC,GAAG,CAAC8O,CAAX,CAAA;;EAEA,EAAA,IAAIM,KAAK,CAACpP,CAAD,CAAT,EAAc;EACV,IAAA,MAAM,IAAImP,SAAJ,CAAc,iBAAd,CAAN,CAAA;EACH,GAAA;;EAED,EAAA,OAAOnP,CAAP,CAAA;EACH,CARD;;;EAWAkO,WAAW,CAAC,OAAD,CAAX,GAAuBA,WAAW,CAAC,QAAD,CAAlC,CAAA;EACAA,WAAW,CAAC,oBAAD,CAAX,GAAoCA,WAAW,CAAC,qBAAD,CAA/C,CAAA;;EAEAA,WAAW,CAAC,WAAD,CAAX,GAA2B,UAAUY,CAAV,EAAaC,IAAb,EAAmB;EAC1C,EAAA,IAAI,CAACA,IAAL,EAAWA,IAAI,GAAG,EAAP,CAAA;;EAEX,EAAA,IAAIA,IAAI,CAACQ,sBAAL,IAA+BT,CAAC,KAAK,IAAzC,EAA+C;EAC3C,IAAA,OAAO,EAAP,CAAA;EACH,GAAA;;IAED,OAAOU,MAAM,CAACV,CAAD,CAAb,CAAA;EACH,CARD,CAAA;;EAUAZ,WAAW,CAAC,YAAD,CAAX,GAA4B,UAAUY,CAAV,EAAaC,IAAb,EAAmB;EAC3C,EAAA,MAAM/O,CAAC,GAAGwP,MAAM,CAACV,CAAD,CAAhB,CAAA;IACA,IAAI1H,CAAC,GAAGkI,SAAR,CAAA;;EACA,EAAA,KAAK,IAAItR,CAAC,GAAG,CAAb,EAAgB,CAACoJ,CAAC,GAAGpH,CAAC,CAACyP,WAAF,CAAczR,CAAd,CAAL,MAA2BsR,SAA3C,EAAsD,EAAEtR,CAAxD,EAA2D;MACvD,IAAIoJ,CAAC,GAAG,GAAR,EAAa;EACT,MAAA,MAAM,IAAI+H,SAAJ,CAAc,oCAAd,CAAN,CAAA;EACH,KAAA;EACJ,GAAA;;EAED,EAAA,OAAOnP,CAAP,CAAA;EACH,CAVD,CAAA;;EAYAkO,WAAW,CAAC,WAAD,CAAX,GAA2B,UAAUY,CAAV,EAAa;EACpC,EAAA,MAAMY,CAAC,GAAGF,MAAM,CAACV,CAAD,CAAhB,CAAA;EACA,EAAA,MAAMjR,CAAC,GAAG6R,CAAC,CAAC5R,MAAZ,CAAA;IACA,MAAM6R,CAAC,GAAG,EAAV,CAAA;;IACA,KAAK,IAAI3R,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,CAApB,EAAuB,EAAEG,CAAzB,EAA4B;EACxB,IAAA,MAAMoJ,CAAC,GAAGsI,CAAC,CAACE,UAAF,CAAa5R,CAAb,CAAV,CAAA;;EACA,IAAA,IAAIoJ,CAAC,GAAG,MAAJ,IAAcA,CAAC,GAAG,MAAtB,EAA8B;QAC1BuI,CAAC,CAACrO,IAAF,CAAOkO,MAAM,CAACK,aAAP,CAAqBzI,CAArB,CAAP,CAAA,CAAA;OADJ,MAEO,IAAI,MAAUA,IAAAA,CAAV,IAAeA,CAAC,IAAI,MAAxB,EAAgC;QACnCuI,CAAC,CAACrO,IAAF,CAAOkO,MAAM,CAACK,aAAP,CAAqB,MAArB,CAAP,CAAA,CAAA;EACH,KAFM,MAEA;EACH,MAAA,IAAI7R,CAAC,KAAKH,CAAC,GAAG,CAAd,EAAiB;UACb8R,CAAC,CAACrO,IAAF,CAAOkO,MAAM,CAACK,aAAP,CAAqB,MAArB,CAAP,CAAA,CAAA;EACH,OAFD,MAEO;UACH,MAAMC,CAAC,GAAGJ,CAAC,CAACE,UAAF,CAAa5R,CAAC,GAAG,CAAjB,CAAV,CAAA;;EACA,QAAA,IAAI,UAAU8R,CAAV,IAAeA,CAAC,IAAI,MAAxB,EAAgC;EAC5B,UAAA,MAAMC,CAAC,GAAG3I,CAAC,GAAG,KAAd,CAAA;EACA,UAAA,MAAMtH,CAAC,GAAGgQ,CAAC,GAAG,KAAd,CAAA;EACAH,UAAAA,CAAC,CAACrO,IAAF,CAAOkO,MAAM,CAACK,aAAP,CAAqB,CAAC,CAAA,IAAK,EAAN,IAAY,CAAC,CAAK,IAAA,CAAN,IAAWE,CAAvB,GAA2BjQ,CAAhD,CAAP,CAAA,CAAA;EACA,UAAA,EAAE9B,CAAF,CAAA;EACH,SALD,MAKO;YACH2R,CAAC,CAACrO,IAAF,CAAOkO,MAAM,CAACK,aAAP,CAAqB,MAArB,CAAP,CAAA,CAAA;EACH,SAAA;EACJ,OAAA;EACJ,KAAA;EACJ,GAAA;;EAED,EAAA,OAAOF,CAAC,CAACvN,IAAF,CAAO,EAAP,CAAP,CAAA;EACH,CA5BD,CAAA;;EA8BA8L,WAAW,CAAC,MAAD,CAAX,GAAsB,UAAUY,CAAV,EAAaC,IAAb,EAAmB;EACrC,EAAA,IAAI,EAAED,CAAC,YAAYtJ,IAAf,CAAJ,EAA0B;EACtB,IAAA,MAAM,IAAI2J,SAAJ,CAAc,+BAAd,CAAN,CAAA;EACH,GAAA;;EACD,EAAA,IAAIC,KAAK,CAACN,CAAD,CAAT,EAAc;EACV,IAAA,OAAOQ,SAAP,CAAA;EACH,GAAA;;EAED,EAAA,OAAOR,CAAP,CAAA;EACH,CATD,CAAA;;EAWAZ,WAAW,CAAC,QAAD,CAAX,GAAwB,UAAUY,CAAV,EAAaC,IAAb,EAAmB;EACvC,EAAA,IAAI,EAAED,CAAC,YAAY3J,MAAf,CAAJ,EAA4B;EACxB2J,IAAAA,CAAC,GAAG,IAAI3J,MAAJ,CAAW2J,CAAX,CAAJ,CAAA;EACH,GAAA;;EAED,EAAA,OAAOA,CAAP,CAAA;EACH,CAND;;;;ICpLAjH,MAAA,CAAAC,OAAA,CAAAkI,KAAA,GAAuB,SAASA,KAAT,CAAeC,MAAf,EAAuB7K,MAAvB,EAA+B;EACpD,IAAA,MAAM4D,IAAI,GAAGnD,MAAM,CAACoB,mBAAP,CAA2B7B,MAA3B,CAAb,CAAA;;EACA,IAAA,KAAK,IAAIpH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgL,IAAI,CAAClL,MAAzB,EAAiC,EAAEE,CAAnC,EAAsC;QACpC6H,MAAM,CAACkB,cAAP,CAAsBkJ,MAAtB,EAA8BjH,IAAI,CAAChL,CAAD,CAAlC,EAAuC6H,MAAM,CAACY,wBAAP,CAAgCrB,MAAhC,EAAwC4D,IAAI,CAAChL,CAAD,CAA5C,CAAvC,CAAA,CAAA;EACD,KAAA;KAJH,CAAA;;IAOA6J,MAAA,CAAAC,OAAA,CAAAoI,aAAA,GAA+BC,MAAM,CAAC,SAAD,CAArC,CAAA;IACAtI,MAAA,CAAAC,OAAA,CAAAsI,UAAA,GAA4BD,MAAM,CAAC,MAAD,CAAlC,CAAA;;EAEAtI,EAAAA,MAAgC,CAAAC,OAAhC,CAAgCuI,cAAhC,GAAgC,UAAUC,IAAV,EAAgB;EAC9C,IAAA,OAAOA,IAAI,CAACzI,MAAM,CAACC,OAAP,CAAeoI,aAAhB,CAAX,CAAA;KADF,CAAA;;EAIArI,EAAAA,MAAgC,CAAAC,OAAhC,CAAgCyI,cAAhC,GAAgC,UAAUC,OAAV,EAAmB;EACjD,IAAA,OAAOA,OAAO,CAAC3I,MAAM,CAACC,OAAP,CAAesI,UAAhB,CAAd,CAAA;KADF,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ECXA,IAAIK,kBAAkB,GAAG;EACvBC,EAAAA,YAAY,EAAE,CADS;EAEvBC,EAAAA,eAAe,EAAE,CAAA;EAFM,CAAzB,CAAA;;EAKA,SAASC,SAAT,CAAmBC,GAAnB,EAAwB;EAAA;IACtB,OAAOA,GAAG,CAACC,KAAJ,CAAU,QAAV,EAAoBjP,GAApB,CAAwB,UAAUkP,CAAV,EAAa;EAAE,IAAA,OAAOA,CAAC,CAACH,SAAF,CAAY,KAAZ,CAAP,CAAA;EAA4B,GAAnE,CAAqExO,CAAAA,IAArE,CAA0E,QAA1E,CAAP,CAAA;EACD,CAAA;;EAED,SAAS4O,UAAT,CAAoBlS,GAApB,EAAyB;IACvB,IAAI+D,KAAK,GAAG,CAAZ,CAAA;EACA,EAAA,IAAIC,GAAG,GAAGmO,YAAY,CAACnT,MAAb,GAAsB,CAAhC,CAAA;;IAEA,OAAO+E,KAAK,IAAIC,GAAhB,EAAqB;EACnB,IAAA,IAAIoO,GAAG,GAAGhT,IAAI,CAACC,KAAL,CAAW,CAAC0E,KAAK,GAAGC,GAAT,IAAgB,CAA3B,CAAV,CAAA;EAEA,IAAA,IAAImN,MAAM,GAAGgB,YAAY,CAACC,GAAD,CAAzB,CAAA;;EACA,IAAA,IAAIjB,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAgBnR,IAAAA,GAAhB,IAAuBmR,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAA,IAAgBnR,GAA3C,EAAgD;EAC9C,MAAA,OAAOmR,MAAP,CAAA;OADF,MAEO,IAAIA,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAenR,GAAAA,GAAnB,EAAwB;QAC7BgE,GAAG,GAAGoO,GAAG,GAAG,CAAZ,CAAA;EACD,KAFM,MAEA;QACLrO,KAAK,GAAGqO,GAAG,GAAG,CAAd,CAAA;EACD,KAAA;EACF,GAAA;;EAED,EAAA,OAAO,IAAP,CAAA;EACD,CAAA;;EAED,IAAIC,kBAAkB,GAAG,iCAAzB,CAAA;;EAEA,SAASC,YAAT,CAAsBC,MAAtB,EAA8B;EAC5B,EAAA,OAAOA,MAAM;EAAA,GAEVtD,OAFI,CAEIoD,kBAFJ,EAEwB,GAFxB,CAGT;EAHS,GAIJrT,MAJH,CAAA;EAKD,CAAA;;EAED,SAASwT,QAAT,CAAkBC,WAAlB,EAA+BC,OAA/B,EAAwCC,iBAAxC,EAA2D;IACzD,IAAIC,QAAQ,GAAG,KAAf,CAAA;IACA,IAAIC,SAAS,GAAG,EAAhB,CAAA;EAEA,EAAA,IAAIlG,GAAG,GAAG2F,YAAY,CAACG,WAAD,CAAtB,CAAA;;IACA,KAAK,IAAIvT,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyN,GAApB,EAAyB,EAAEzN,CAA3B,EAA8B;EAC5B,IAAA,IAAI4T,SAAS,GAAGL,WAAW,CAAC9B,WAAZ,CAAwBzR,CAAxB,CAAhB,CAAA;EACA,IAAA,IAAI6T,MAAM,GAAGb,UAAU,CAACY,SAAD,CAAvB,CAAA;;MAEA,QAAQC,MAAM,CAAC,CAAD,CAAd;EACE,MAAA,KAAK,YAAL;EACEH,QAAAA,QAAQ,GAAG,IAAX,CAAA;EACAC,QAAAA,SAAS,IAAInC,MAAM,CAACK,aAAP,CAAqB+B,SAArB,CAAb,CAAA;EACA,QAAA,MAAA;;EACF,MAAA,KAAK,SAAL;EACE,QAAA,MAAA;;EACF,MAAA,KAAK,QAAL;EACED,QAAAA,SAAS,IAAInC,MAAM,CAACK,aAAP,CAAqBiC,KAArB,CAA2BtC,MAA3B,EAAmCqC,MAAM,CAAC,CAAD,CAAzC,CAAb,CAAA;EACA,QAAA,MAAA;;EACF,MAAA,KAAK,WAAL;EACE,QAAA,IAAIJ,iBAAiB,KAAKhB,kBAAkB,CAACC,YAA7C,EAA2D;EACzDiB,UAAAA,SAAS,IAAInC,MAAM,CAACK,aAAP,CAAqBiC,KAArB,CAA2BtC,MAA3B,EAAmCqC,MAAM,CAAC,CAAD,CAAzC,CAAb,CAAA;EACD,SAFD,MAEO;EACLF,UAAAA,SAAS,IAAInC,MAAM,CAACK,aAAP,CAAqB+B,SAArB,CAAb,CAAA;EACD,SAAA;;EACD,QAAA,MAAA;;EACF,MAAA,KAAK,OAAL;EACED,QAAAA,SAAS,IAAInC,MAAM,CAACK,aAAP,CAAqB+B,SAArB,CAAb,CAAA;EACA,QAAA,MAAA;;EACF,MAAA,KAAK,wBAAL;EACE,QAAA,IAAIJ,OAAJ,EAAa;EACXE,UAAAA,QAAQ,GAAG,IAAX,CAAA;EACAC,UAAAA,SAAS,IAAInC,MAAM,CAACK,aAAP,CAAqB+B,SAArB,CAAb,CAAA;EACD,SAHD,MAGO;EACLD,UAAAA,SAAS,IAAInC,MAAM,CAACK,aAAP,CAAqBiC,KAArB,CAA2BtC,MAA3B,EAAmCqC,MAAM,CAAC,CAAD,CAAzC,CAAb,CAAA;EACD,SAAA;;EACD,QAAA,MAAA;;EACF,MAAA,KAAK,uBAAL;EACE,QAAA,IAAIL,OAAJ,EAAa;EACXE,UAAAA,QAAQ,GAAG,IAAX,CAAA;EACD,SAAA;;EAEDC,QAAAA,SAAS,IAAInC,MAAM,CAACK,aAAP,CAAqB+B,SAArB,CAAb,CAAA;EACA,QAAA,MAAA;EAlCJ,KAAA;EAoCD,GAAA;;IAED,OAAO;EACLP,IAAAA,MAAM,EAAEM,SADH;EAEL3O,IAAAA,KAAK,EAAE0O,QAAAA;KAFT,CAAA;EAID,CAAA;;EAED,IAAIK,mBAAmB,GAAG,mqFAA1B,CAAA;;EAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8BR,iBAA9B,EAAiD;IAC/C,IAAIQ,KAAK,CAACC,MAAN,CAAa,CAAb,EAAgB,CAAhB,CAAuB,KAAA,MAA3B,EAAmC;EACjCD,IAAAA,KAAK,GAAGE,4BAAQ,CAACC,SAAT,CAAmBH,KAAnB,CAAR,CAAA;EAED,GAAA;;IAED,IAAIjP,KAAK,GAAG,KAAZ,CAAA;;IAEA,IAAI4N,SAAS,CAACqB,KAAD,CAAT,KAAqBA,KAArB,IACCA,KAAK,CAAC,CAAD,CAAL,KAAa,GAAb,IAAoBA,KAAK,CAAC,CAAD,CAAL,KAAa,GADlC,IAEAA,KAAK,CAAC,CAAD,CAAL,KAAa,GAFb,IAEoBA,KAAK,CAACA,KAAK,CAACnU,MAAN,GAAe,CAAhB,CAAL,KAA4B,GAFhD,IAGAmU,KAAK,CAAChM,OAAN,CAAc,GAAd,CAAA,KAAuB,CAAC,CAHxB,IAIAgM,KAAK,CAACI,MAAN,CAAaN,mBAAb,CAAsC,KAAA,CAJ1C,EAI6C;EAC3C/O,IAAAA,KAAK,GAAG,IAAR,CAAA;EACD,GAAA;;EAED,EAAA,IAAIyI,GAAG,GAAG2F,YAAY,CAACa,KAAD,CAAtB,CAAA;;IACA,KAAK,IAAIjU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyN,GAApB,EAAyB,EAAEzN,CAA3B,EAA8B;MAC5B,IAAI6T,MAAM,GAAGb,UAAU,CAACiB,KAAK,CAACxC,WAAN,CAAkBzR,CAAlB,CAAD,CAAvB,CAAA;;EACA,IAAA,IAAKsU,UAAU,KAAK7B,kBAAkB,CAACC,YAAlC,IAAkDmB,MAAM,CAAC,CAAD,CAAN,KAAc,OAAjE,IACCS,UAAU,KAAK7B,kBAAkB,CAACE,eAAlC,IACAkB,MAAM,CAAC,CAAD,CAAN,KAAc,OADd,IACyBA,MAAM,CAAC,CAAD,CAAN,KAAc,WAF5C,EAE0D;EACxD7O,MAAAA,KAAK,GAAG,IAAR,CAAA;EACA,MAAA,MAAA;EACD,KAAA;EACF,GAAA;;IAED,OAAO;EACLiP,IAAAA,KAAK,EAAEA,KADF;EAELjP,IAAAA,KAAK,EAAEA,KAAAA;KAFT,CAAA;EAID,CAAA;;EAED,SAASsP,UAAT,CAAoBf,WAApB,EAAiCC,OAAjC,EAA0CC,iBAA1C,EAA6D;IAC3D,IAAI1T,MAAM,GAAGuT,QAAQ,CAACC,WAAD,EAAcC,OAAd,EAAuBC,iBAAvB,CAArB,CAAA;IACA1T,MAAM,CAACsT,MAAP,GAAgBT,SAAS,CAAC7S,MAAM,CAACsT,MAAR,CAAzB,CAAA;IAEA,IAAIkB,MAAM,GAAGxU,MAAM,CAACsT,MAAP,CAAcP,KAAd,CAAoB,GAApB,CAAb,CAAA;;EACA,EAAA,KAAK,IAAI9S,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuU,MAAM,CAACzU,MAA3B,EAAmC,EAAEE,CAArC,EAAwC;MACtC,IAAI;QACF,IAAIwU,UAAU,GAAGR,aAAa,CAACO,MAAM,CAACvU,CAAD,CAAP,CAA9B,CAAA;EACAuU,MAAAA,MAAM,CAACvU,CAAD,CAAN,GAAYwU,UAAU,CAACP,KAAvB,CAAA;QACAlU,MAAM,CAACiF,KAAP,GAAejF,MAAM,CAACiF,KAAP,IAAgBwP,UAAU,CAACxP,KAA1C,CAAA;OAHF,CAIE,OAAMyP,CAAN,EAAS;QACT1U,MAAM,CAACiF,KAAP,GAAe,IAAf,CAAA;EACD,KAAA;EACF,GAAA;;IAED,OAAO;EACLqO,IAAAA,MAAM,EAAEkB,MAAM,CAACnQ,IAAP,CAAY,GAAZ,CADH;MAELY,KAAK,EAAEjF,MAAM,CAACiF,KAAAA;KAFhB,CAAA;EAID,CAAA;;EAED,IAAsB0P,OAAA,GAAG,UAASnB,WAAT,EAAsBC,OAAtB,EAA+BC,iBAA/B,EAAkDkB,eAAlD,EAAmE;IAC1F,IAAI5U,MAAM,GAAGuU,UAAU,CAACf,WAAD,EAAcC,OAAd,EAAuBC,iBAAvB,CAAvB,CAAA;IACA,IAAIc,MAAM,GAAGxU,MAAM,CAACsT,MAAP,CAAcP,KAAd,CAAoB,GAApB,CAAb,CAAA;EACAyB,EAAAA,MAAM,GAAGA,MAAM,CAAC1Q,GAAP,CAAW,UAAS+Q,CAAT,EAAY;MAC9B,IAAI;EACF,MAAA,OAAOT,4BAAQ,CAACO,OAAT,CAAiBE,CAAjB,CAAP,CAAA;OADF,CAEE,OAAMH,CAAN,EAAS;QACT1U,MAAM,CAACiF,KAAP,GAAe,IAAf,CAAA;EACA,MAAA,OAAO4P,CAAP,CAAA;EACD,KAAA;EACF,GAPQ,CAAT,CAAA;;EASA,EAAA,IAAID,eAAJ,EAAqB;EACnB,IAAA,IAAIE,KAAK,GAAGN,MAAM,CAAC9Q,KAAP,CAAa,CAAb,EAAgB8Q,MAAM,CAACzU,MAAP,GAAgB,CAAhC,CAAA,CAAmCsE,IAAnC,CAAwC,GAAxC,EAA6CtE,MAAzD,CAAA;;MACA,IAAI+U,KAAK,CAAC/U,MAAN,GAAe,GAAf,IAAsB+U,KAAK,CAAC/U,MAAN,KAAiB,CAA3C,EAA8C;QAC5CC,MAAM,CAACiF,KAAP,GAAe,IAAf,CAAA;EACD,KAAA;;EAED,IAAA,KAAK,IAAIhF,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAGuU,MAAM,CAACzU,MAAzB,EAAiC,EAAEE,CAAnC,EAAsC;QACpC,IAAIuU,MAAM,CAACzU,MAAP,GAAgB,EAAhB,IAAsByU,MAAM,CAACzU,MAAP,KAAkB,CAA5C,EAA+C;UAC7CC,MAAM,CAACiF,KAAP,GAAe,IAAf,CAAA;EACA,QAAA,MAAA;EACD,OAAA;EACF,KAAA;EACF,GAAA;;EAED,EAAA,IAAIjF,MAAM,CAACiF,KAAX,EAAkB,OAAO,IAAP,CAAA;EAClB,EAAA,OAAOuP,MAAM,CAACnQ,IAAP,CAAY,GAAZ,CAAP,CAAA;EACD,CA5BD,CAAA;;EA8BA,IAAAgQ,SAAwB,GAAG,UAASb,WAAT,EAAsBC,OAAtB,EAA+B;IACxD,IAAIzT,MAAM,GAAGuU,UAAU,CAACf,WAAD,EAAcC,OAAd,EAAuBf,kBAAkB,CAACE,eAA1C,CAAvB,CAAA;IAEA,OAAO;MACLmC,MAAM,EAAE/U,MAAM,CAACsT,MADV;MAELrO,KAAK,EAAEjF,MAAM,CAACiF,KAAAA;KAFhB,CAAA;EAID,CAPD,CAAA;;EASA,IAAA+P,oBAAiC,GAAGtC,kBAApC,CAAA;;;;;;;;;EC5LA,EAAA,MAAMuC,cAAc,GAAG;EACrBC,IAAAA,GAAG,EAAE,EADgB;EAErBC,IAAAA,IAAI,EAAE,IAFe;EAGrBC,IAAAA,MAAM,EAAE,EAHa;EAIrBC,IAAAA,IAAI,EAAE,EAJe;EAKrBC,IAAAA,KAAK,EAAE,GALc;EAMrBC,IAAAA,EAAE,EAAE,EANiB;EAOrBC,IAAAA,GAAG,EAAE,GAAA;KAPP,CAAA;EAUA,EAAA,MAAMC,OAAO,GAAGrD,MAAM,CAAC,SAAD,CAAtB,CAAA;;IAEA,SAASiB,YAAT,CAAsBP,GAAtB,EAA2B;MACzB,OAAOsB,4BAAQ,CAACsB,IAAT,CAAcC,MAAd,CAAqB7C,GAArB,EAA0B/S,MAAjC,CAAA;EACD,GAAA;;EAED,EAAA,SAAS6V,EAAT,CAAYC,KAAZ,EAAmBC,GAAnB,EAAwB;EACtB,IAAA,MAAMzM,CAAC,GAAGwM,KAAK,CAACC,GAAD,CAAf,CAAA;EACA,IAAA,OAAOzE,KAAK,CAAChI,CAAD,CAAL,GAAWkI,SAAX,GAAuBE,MAAM,CAACK,aAAP,CAAqBzI,CAArB,CAA9B,CAAA;EACD,GAAA;;IAED,SAAS0M,YAAT,CAAsB1M,CAAtB,EAAyB;EACvB,IAAA,OAAOA,CAAC,IAAI,IAAL,IAAaA,CAAC,IAAI,IAAzB,CAAA;EACD,GAAA;;IAED,SAAS2M,YAAT,CAAsB3M,CAAtB,EAAyB;EACvB,IAAA,OAAQA,CAAC,IAAI,IAAL,IAAaA,CAAC,IAAI,IAAnB,IAA6BA,CAAC,IAAI,IAAL,IAAaA,CAAC,IAAI,IAAtD,CAAA;EACD,GAAA;;IAED,SAAS4M,mBAAT,CAA6B5M,CAA7B,EAAgC;MAC9B,OAAO2M,YAAY,CAAC3M,CAAD,CAAZ,IAAmB0M,YAAY,CAAC1M,CAAD,CAAtC,CAAA;EACD,GAAA;;IAED,SAAS6M,UAAT,CAAoB7M,CAApB,EAAuB;EACrB,IAAA,OAAO0M,YAAY,CAAC1M,CAAD,CAAZ,IAAoBA,CAAC,IAAI,IAAL,IAAaA,CAAC,IAAI,IAAtC,IAAgDA,CAAC,IAAI,IAAL,IAAaA,CAAC,IAAI,IAAzE,CAAA;EACD,GAAA;;IAED,SAAS8M,WAAT,CAAqBC,MAArB,EAA6B;MAC3B,OAAOA,MAAM,KAAK,GAAX,IAAkBA,MAAM,CAACC,WAAP,OAAyB,KAAlD,CAAA;EACD,GAAA;;IAED,SAASC,WAAT,CAAqBF,MAArB,EAA6B;EAC3BA,IAAAA,MAAM,GAAGA,MAAM,CAACC,WAAP,EAAT,CAAA;EACA,IAAA,OAAOD,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,MAA9B,IAAwCA,MAAM,KAAK,MAAnD,IAA6DA,MAAM,KAAK,QAA/E,CAAA;EACD,GAAA;;EAED,EAAA,SAASG,8BAAT,CAAwCC,GAAxC,EAA6CC,GAA7C,EAAkD;EAChD,IAAA,OAAOT,YAAY,CAACQ,GAAD,CAAZ,KAAsBC,GAAG,KAAK,EAAR,IAAcA,GAAG,KAAK,GAA5C,CAAP,CAAA;EACD,GAAA;;IAED,SAASC,0BAAT,CAAoCpD,MAApC,EAA4C;EAC1C,IAAA,OAAOA,MAAM,CAACvT,MAAP,KAAkB,CAAlB,IAAuBiW,YAAY,CAAC1C,MAAM,CAAC5B,WAAP,CAAmB,CAAnB,CAAD,CAAnC,KAA+D4B,MAAM,CAAC,CAAD,CAAN,KAAc,GAAd,IAAqBA,MAAM,CAAC,CAAD,CAAN,KAAc,GAAlG,CAAP,CAAA;EACD,GAAA;;IAED,SAASqD,oCAAT,CAA8CrD,MAA9C,EAAsD;MACpD,OAAOA,MAAM,CAACvT,MAAP,KAAkB,CAAlB,IAAuBiW,YAAY,CAAC1C,MAAM,CAAC5B,WAAP,CAAmB,CAAnB,CAAD,CAAnC,IAA8D4B,MAAM,CAAC,CAAD,CAAN,KAAc,GAAnF,CAAA;EACD,GAAA;;IAED,SAASsD,8BAAT,CAAwCtD,MAAxC,EAAgD;EAC9C,IAAA,OAAOA,MAAM,CAACgB,MAAP,CAAc,2DAAd,CAAA,KAA+E,CAAC,CAAvF,CAAA;EACD,GAAA;;IAED,SAASuC,8CAAT,CAAwDvD,MAAxD,EAAgE;EAC9D,IAAA,OAAOA,MAAM,CAACgB,MAAP,CAAc,yDAAd,CAAA,KAA6E,CAAC,CAArF,CAAA;EACD,GAAA;;IAED,SAASwC,eAAT,CAAyBC,MAAzB,EAAiC;EAC/B,IAAA,OAAO9B,cAAc,CAAC8B,MAAD,CAAd,KAA2BxF,SAAlC,CAAA;EACD,GAAA;;IAED,SAASyF,SAAT,CAAmBC,GAAnB,EAAwB;EACtB,IAAA,OAAOH,eAAe,CAACG,GAAG,CAACF,MAAL,CAAtB,CAAA;EACD,GAAA;;IAED,SAASG,WAAT,CAAqBH,MAArB,EAA6B;MAC3B,OAAO9B,cAAc,CAAC8B,MAAD,CAArB,CAAA;EACD,GAAA;;IAED,SAASI,aAAT,CAAuB9N,CAAvB,EAA0B;MACxB,IAAI+N,GAAG,GAAG/N,CAAC,CAAC1J,QAAF,CAAW,EAAX,CAAe0X,CAAAA,WAAf,EAAV,CAAA;;EACA,IAAA,IAAID,GAAG,CAACrX,MAAJ,KAAe,CAAnB,EAAsB;QACpBqX,GAAG,GAAG,MAAMA,GAAZ,CAAA;EACD,KAAA;;EAED,IAAA,OAAO,MAAMA,GAAb,CAAA;EACD,GAAA;;IAED,SAASE,iBAAT,CAA2BjO,CAA3B,EAA8B;EAC5B,IAAA,MAAMkO,GAAG,GAAG,IAAI9Q,MAAJ,CAAW4C,CAAX,CAAZ,CAAA;MAEA,IAAIyJ,GAAG,GAAG,EAAV,CAAA;;EAEA,IAAA,KAAK,IAAI7S,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGsX,GAAG,CAACxX,MAAxB,EAAgC,EAAEE,CAAlC,EAAqC;EACnC6S,MAAAA,GAAG,IAAIqE,aAAa,CAACI,GAAG,CAACtX,CAAD,CAAJ,CAApB,CAAA;EACD,KAAA;;EAED,IAAA,OAAO6S,GAAP,CAAA;EACD,GAAA;;IAED,SAAS0E,iBAAT,CAA2B1E,GAA3B,EAAgC;EAC9B,IAAA,MAAM+C,KAAK,GAAG,IAAIpP,MAAJ,CAAWqM,GAAX,CAAd,CAAA;MACA,MAAM2E,MAAM,GAAG,EAAf,CAAA;;EACA,IAAA,KAAK,IAAIxX,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG4V,KAAK,CAAC9V,MAA1B,EAAkC,EAAEE,CAApC,EAAuC;EACrC,MAAA,IAAI4V,KAAK,CAAC5V,CAAD,CAAL,KAAa,EAAjB,EAAqB;EACnBwX,QAAAA,MAAM,CAAClU,IAAP,CAAYsS,KAAK,CAAC5V,CAAD,CAAjB,CAAA,CAAA;EACD,OAFD,MAEO,IAAI4V,KAAK,CAAC5V,CAAD,CAAL,KAAa,EAAb,IAAmBiW,UAAU,CAACL,KAAK,CAAC5V,CAAC,GAAG,CAAL,CAAN,CAA7B,IAA+CiW,UAAU,CAACL,KAAK,CAAC5V,CAAC,GAAG,CAAL,CAAN,CAA7D,EAA6E;UAClFwX,MAAM,CAAClU,IAAP,CAAYmU,QAAQ,CAAC7B,KAAK,CAACnS,KAAN,CAAYzD,CAAC,GAAG,CAAhB,EAAmBA,CAAC,GAAG,CAAvB,EAA0BN,QAA1B,EAAD,EAAuC,EAAvC,CAApB,CAAA,CAAA;EACAM,QAAAA,CAAC,IAAI,CAAL,CAAA;EACD,OAHM,MAGA;EACLwX,QAAAA,MAAM,CAAClU,IAAP,CAAYsS,KAAK,CAAC5V,CAAD,CAAjB,CAAA,CAAA;EACD,OAAA;EACF,KAAA;;EACD,IAAA,OAAO,IAAIwG,MAAJ,CAAWgR,MAAX,CAAA,CAAmB9X,QAAnB,EAAP,CAAA;EACD,GAAA;;IAED,SAASgY,wBAAT,CAAkCtO,CAAlC,EAAqC;EACnC,IAAA,OAAOA,CAAC,IAAI,IAAL,IAAaA,CAAC,GAAG,IAAxB,CAAA;EACD,GAAA;;IAED,MAAMuO,yBAAyB,GAAG,IAAI9R,GAAJ,CAAQ,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,GAA7B,EAAkC,GAAlC,CAAR,CAAlC,CAAA;;IACA,SAAS+R,mBAAT,CAA6BxO,CAA7B,EAAgC;MAC9B,OAAOsO,wBAAwB,CAACtO,CAAD,CAAxB,IAA+BuO,yBAAyB,CAAC1M,GAA1B,CAA8B7B,CAA9B,CAAtC,CAAA;EACD,GAAA;;IAED,MAAMyO,6BAA6B,GACjC,IAAIhS,GAAJ,CAAQ,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B,EAAiC,EAAjC,EAAqC,GAArC,CAAR,CADF,CAAA;;IAEA,SAASiS,uBAAT,CAAiC1O,CAAjC,EAAoC;MAClC,OAAOwO,mBAAmB,CAACxO,CAAD,CAAnB,IAA0ByO,6BAA6B,CAAC5M,GAA9B,CAAkC7B,CAAlC,CAAjC,CAAA;EACD,GAAA;;EAED,EAAA,SAAS2O,iBAAT,CAA2B3O,CAA3B,EAA8B4O,kBAA9B,EAAkD;EAChD,IAAA,MAAMC,IAAI,GAAGzG,MAAM,CAACK,aAAP,CAAqBzI,CAArB,CAAb,CAAA;;EAEA,IAAA,IAAI4O,kBAAkB,CAAC5O,CAAD,CAAtB,EAA2B;QACzB,OAAOiO,iBAAiB,CAACY,IAAD,CAAxB,CAAA;EACD,KAAA;;EAED,IAAA,OAAOA,IAAP,CAAA;EACD,GAAA;;IAED,SAASC,eAAT,CAAyBtC,KAAzB,EAAgC;MAC9B,IAAIuC,CAAC,GAAG,EAAR,CAAA;;MAEA,IAAIvC,KAAK,CAAC9V,MAAN,IAAgB,CAAhB,IAAqB8V,KAAK,CAACwC,MAAN,CAAa,CAAb,MAAoB,GAAzC,IAAgDxC,KAAK,CAACwC,MAAN,CAAa,CAAb,CAAgBhC,CAAAA,WAAhB,EAAkC,KAAA,GAAtF,EAA2F;EACzFR,MAAAA,KAAK,GAAGA,KAAK,CAACyC,SAAN,CAAgB,CAAhB,CAAR,CAAA;EACAF,MAAAA,CAAC,GAAG,EAAJ,CAAA;EACD,KAHD,MAGO,IAAIvC,KAAK,CAAC9V,MAAN,IAAgB,CAAhB,IAAqB8V,KAAK,CAACwC,MAAN,CAAa,CAAb,CAAA,KAAoB,GAA7C,EAAkD;EACvDxC,MAAAA,KAAK,GAAGA,KAAK,CAACyC,SAAN,CAAgB,CAAhB,CAAR,CAAA;EACAF,MAAAA,CAAC,GAAG,CAAJ,CAAA;EACD,KAAA;;MAED,IAAIvC,KAAK,KAAK,EAAd,EAAkB;EAChB,MAAA,OAAO,CAAP,CAAA;EACD,KAAA;;EAED,IAAA,MAAM0C,KAAK,GAAGH,CAAC,KAAK,EAAN,GAAW,QAAX,GAAuBA,CAAC,KAAK,EAAN,GAAW,cAAX,GAA4B,QAAjE,CAAA;;EACA,IAAA,IAAIG,KAAK,CAACC,IAAN,CAAW3C,KAAX,CAAJ,EAAuB;EACrB,MAAA,OAAOJ,OAAP,CAAA;EACD,KAAA;;EAED,IAAA,OAAOiC,QAAQ,CAAC7B,KAAD,EAAQuC,CAAR,CAAf,CAAA;EACD,GAAA;;IAED,SAASK,SAAT,CAAmB5C,KAAnB,EAA0B;EACxB,IAAA,MAAM6C,KAAK,GAAG7C,KAAK,CAAC9C,KAAN,CAAY,GAAZ,CAAd,CAAA;;MACA,IAAI2F,KAAK,CAACA,KAAK,CAAC3Y,MAAN,GAAe,CAAhB,CAAL,KAA4B,EAAhC,EAAoC;EAClC,MAAA,IAAI2Y,KAAK,CAAC3Y,MAAN,GAAe,CAAnB,EAAsB;EACpB2Y,QAAAA,KAAK,CAACC,GAAN,EAAA,CAAA;EACD,OAAA;EACF,KAAA;;EAED,IAAA,IAAID,KAAK,CAAC3Y,MAAN,GAAe,CAAnB,EAAsB;EACpB,MAAA,OAAO8V,KAAP,CAAA;EACD,KAAA;;MAED,MAAM+C,OAAO,GAAG,EAAhB,CAAA;;EACA,IAAA,KAAK,MAAMC,IAAX,IAAmBH,KAAnB,EAA0B;QACxB,IAAIG,IAAI,KAAK,EAAb,EAAiB;EACf,QAAA,OAAOhD,KAAP,CAAA;EACD,OAAA;;EACD,MAAA,MAAM/V,CAAC,GAAGqY,eAAe,CAACU,IAAD,CAAzB,CAAA;;QACA,IAAI/Y,CAAC,KAAK2V,OAAV,EAAmB;EACjB,QAAA,OAAOI,KAAP,CAAA;EACD,OAAA;;QAED+C,OAAO,CAACrV,IAAR,CAAazD,CAAb,CAAA,CAAA;EACD,KAAA;;EAED,IAAA,KAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2Y,OAAO,CAAC7Y,MAAR,GAAiB,CAArC,EAAwC,EAAEE,CAA1C,EAA6C;EAC3C,MAAA,IAAI2Y,OAAO,CAAC3Y,CAAD,CAAP,GAAa,GAAjB,EAAsB;EACpB,QAAA,OAAOwV,OAAP,CAAA;EACD,OAAA;EACF,KAAA;;MACD,IAAImD,OAAO,CAACA,OAAO,CAAC7Y,MAAR,GAAiB,CAAlB,CAAP,IAA+BI,IAAI,CAACE,GAAL,CAAS,GAAT,EAAc,CAAA,GAAIuY,OAAO,CAAC7Y,MAA1B,CAAnC,EAAsE;EACpE,MAAA,OAAO0V,OAAP,CAAA;EACD,KAAA;;EAED,IAAA,IAAIqD,IAAI,GAAGF,OAAO,CAACD,GAAR,EAAX,CAAA;MACA,IAAII,OAAO,GAAG,CAAd,CAAA;;EAEA,IAAA,KAAK,MAAMjZ,CAAX,IAAgB8Y,OAAhB,EAAyB;QACvBE,IAAI,IAAIhZ,CAAC,GAAGK,IAAI,CAACE,GAAL,CAAS,GAAT,EAAc,CAAI0Y,GAAAA,OAAlB,CAAZ,CAAA;EACA,MAAA,EAAEA,OAAF,CAAA;EACD,KAAA;;EAED,IAAA,OAAOD,IAAP,CAAA;EACD,GAAA;;IAED,SAASE,aAAT,CAAuBC,OAAvB,EAAgC;MAC9B,IAAIxB,MAAM,GAAG,EAAb,CAAA;MACA,IAAI3X,CAAC,GAAGmZ,OAAR,CAAA;;MAEA,KAAK,IAAIhZ,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,CAArB,EAAwB,EAAEA,CAA1B,EAA6B;QAC3BwX,MAAM,GAAGhG,MAAM,CAAC3R,CAAC,GAAG,GAAL,CAAN,GAAkB2X,MAA3B,CAAA;;QACA,IAAIxX,CAAC,KAAK,CAAV,EAAa;UACXwX,MAAM,GAAG,MAAMA,MAAf,CAAA;EACD,OAAA;;QACD3X,CAAC,GAAGK,IAAI,CAACC,KAAL,CAAWN,CAAC,GAAG,GAAf,CAAJ,CAAA;EACD,KAAA;;EAED,IAAA,OAAO2X,MAAP,CAAA;EACD,GAAA;;IAED,SAASyB,SAAT,CAAmBrD,KAAnB,EAA0B;EACxB,IAAA,MAAMoD,OAAO,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,CAAhB,CAAA;MACA,IAAIE,UAAU,GAAG,CAAjB,CAAA;MACA,IAAIC,QAAQ,GAAG,IAAf,CAAA;MACA,IAAIC,OAAO,GAAG,CAAd,CAAA;MAEAxD,KAAK,GAAGzB,4BAAQ,CAACsB,IAAT,CAAcC,MAAd,CAAqBE,KAArB,CAAR,CAAA;;EAEA,IAAA,IAAIA,KAAK,CAACwD,OAAD,CAAL,KAAmB,EAAvB,EAA2B;QACzB,IAAIxD,KAAK,CAACwD,OAAO,GAAG,CAAX,CAAL,KAAuB,EAA3B,EAA+B;EAC7B,QAAA,OAAO5D,OAAP,CAAA;EACD,OAAA;;EAED4D,MAAAA,OAAO,IAAI,CAAX,CAAA;EACA,MAAA,EAAEF,UAAF,CAAA;EACAC,MAAAA,QAAQ,GAAGD,UAAX,CAAA;EACD,KAAA;;EAED,IAAA,OAAOE,OAAO,GAAGxD,KAAK,CAAC9V,MAAvB,EAA+B;QAC7B,IAAIoZ,UAAU,KAAK,CAAnB,EAAsB;EACpB,QAAA,OAAO1D,OAAP,CAAA;EACD,OAAA;;EAED,MAAA,IAAII,KAAK,CAACwD,OAAD,CAAL,KAAmB,EAAvB,EAA2B;UACzB,IAAID,QAAQ,KAAK,IAAjB,EAAuB;EACrB,UAAA,OAAO3D,OAAP,CAAA;EACD,SAAA;;EACD,QAAA,EAAE4D,OAAF,CAAA;EACA,QAAA,EAAEF,UAAF,CAAA;EACAC,QAAAA,QAAQ,GAAGD,UAAX,CAAA;EACA,QAAA,SAAA;EACD,OAAA;;QAED,IAAI5Y,KAAK,GAAG,CAAZ,CAAA;QACA,IAAIR,MAAM,GAAG,CAAb,CAAA;;QAEA,OAAOA,MAAM,GAAG,CAAT,IAAcmW,UAAU,CAACL,KAAK,CAACwD,OAAD,CAAN,CAA/B,EAAiD;EAC/C9Y,QAAAA,KAAK,GAAGA,KAAK,GAAG,IAAR,GAAemX,QAAQ,CAAC9B,EAAE,CAACC,KAAD,EAAQwD,OAAR,CAAH,EAAqB,EAArB,CAA/B,CAAA;EACA,QAAA,EAAEA,OAAF,CAAA;EACA,QAAA,EAAEtZ,MAAF,CAAA;EACD,OAAA;;EAED,MAAA,IAAI8V,KAAK,CAACwD,OAAD,CAAL,KAAmB,EAAvB,EAA2B;UACzB,IAAItZ,MAAM,KAAK,CAAf,EAAkB;EAChB,UAAA,OAAO0V,OAAP,CAAA;EACD,SAAA;;EAED4D,QAAAA,OAAO,IAAItZ,MAAX,CAAA;;UAEA,IAAIoZ,UAAU,GAAG,CAAjB,EAAoB;EAClB,UAAA,OAAO1D,OAAP,CAAA;EACD,SAAA;;UAED,IAAI6D,WAAW,GAAG,CAAlB,CAAA;;EAEA,QAAA,OAAOzD,KAAK,CAACwD,OAAD,CAAL,KAAmB9H,SAA1B,EAAqC;YACnC,IAAIgI,SAAS,GAAG,IAAhB,CAAA;;YAEA,IAAID,WAAW,GAAG,CAAlB,EAAqB;cACnB,IAAIzD,KAAK,CAACwD,OAAD,CAAL,KAAmB,EAAnB,IAAyBC,WAAW,GAAG,CAA3C,EAA8C;EAC5C,cAAA,EAAED,OAAF,CAAA;EACD,aAFD,MAEO;EACL,cAAA,OAAO5D,OAAP,CAAA;EACD,aAAA;EACF,WAAA;;YAED,IAAI,CAACM,YAAY,CAACF,KAAK,CAACwD,OAAD,CAAN,CAAjB,EAAmC;EACjC,YAAA,OAAO5D,OAAP,CAAA;EACD,WAAA;;EAED,UAAA,OAAOM,YAAY,CAACF,KAAK,CAACwD,OAAD,CAAN,CAAnB,EAAqC;cACnC,MAAMG,MAAM,GAAG9B,QAAQ,CAAC9B,EAAE,CAACC,KAAD,EAAQwD,OAAR,CAAH,CAAvB,CAAA;;cACA,IAAIE,SAAS,KAAK,IAAlB,EAAwB;EACtBA,cAAAA,SAAS,GAAGC,MAAZ,CAAA;EACD,aAFD,MAEO,IAAID,SAAS,KAAK,CAAlB,EAAqB;EAC1B,cAAA,OAAO9D,OAAP,CAAA;EACD,aAFM,MAEA;EACL8D,cAAAA,SAAS,GAAGA,SAAS,GAAG,EAAZ,GAAiBC,MAA7B,CAAA;EACD,aAAA;;cACD,IAAID,SAAS,GAAG,GAAhB,EAAqB;EACnB,cAAA,OAAO9D,OAAP,CAAA;EACD,aAAA;;EACD,YAAA,EAAE4D,OAAF,CAAA;EACD,WAAA;;YAEDJ,OAAO,CAACE,UAAD,CAAP,GAAsBF,OAAO,CAACE,UAAD,CAAP,GAAsB,KAAtB,GAA8BI,SAApD,CAAA;EAEA,UAAA,EAAED,WAAF,CAAA;;EAEA,UAAA,IAAIA,WAAW,KAAK,CAAhB,IAAqBA,WAAW,KAAK,CAAzC,EAA4C;EAC1C,YAAA,EAAEH,UAAF,CAAA;EACD,WAAA;EACF,SAAA;;UAED,IAAIG,WAAW,KAAK,CAApB,EAAuB;EACrB,UAAA,OAAO7D,OAAP,CAAA;EACD,SAAA;;EAED,QAAA,MAAA;SAxDF,MAyDO,IAAII,KAAK,CAACwD,OAAD,CAAL,KAAmB,EAAvB,EAA2B;EAChC,QAAA,EAAEA,OAAF,CAAA;;EACA,QAAA,IAAIxD,KAAK,CAACwD,OAAD,CAAL,KAAmB9H,SAAvB,EAAkC;EAChC,UAAA,OAAOkE,OAAP,CAAA;EACD,SAAA;SAJI,MAKA,IAAII,KAAK,CAACwD,OAAD,CAAL,KAAmB9H,SAAvB,EAAkC;EACvC,QAAA,OAAOkE,OAAP,CAAA;EACD,OAAA;;EAEDwD,MAAAA,OAAO,CAACE,UAAD,CAAP,GAAsB5Y,KAAtB,CAAA;EACA,MAAA,EAAE4Y,UAAF,CAAA;EACD,KAAA;;MAED,IAAIC,QAAQ,KAAK,IAAjB,EAAuB;EACrB,MAAA,IAAIK,KAAK,GAAGN,UAAU,GAAGC,QAAzB,CAAA;EACAD,MAAAA,UAAU,GAAG,CAAb,CAAA;;EACA,MAAA,OAAOA,UAAU,KAAK,CAAf,IAAoBM,KAAK,GAAG,CAAnC,EAAsC;UACpC,MAAMC,IAAI,GAAGT,OAAO,CAACG,QAAQ,GAAGK,KAAX,GAAmB,CAApB,CAApB,CAAA;UACAR,OAAO,CAACG,QAAQ,GAAGK,KAAX,GAAmB,CAApB,CAAP,GAAgCR,OAAO,CAACE,UAAD,CAAvC,CAAA;EACAF,QAAAA,OAAO,CAACE,UAAD,CAAP,GAAsBO,IAAtB,CAAA;EACA,QAAA,EAAEP,UAAF,CAAA;EACA,QAAA,EAAEM,KAAF,CAAA;EACD,OAAA;OATH,MAUO,IAAIL,QAAQ,KAAK,IAAb,IAAqBD,UAAU,KAAK,CAAxC,EAA2C;EAChD,MAAA,OAAO1D,OAAP,CAAA;EACD,KAAA;;EAED,IAAA,OAAOwD,OAAP,CAAA;EACD,GAAA;;IAED,SAASU,aAAT,CAAuBV,OAAvB,EAAgC;MAC9B,IAAIxB,MAAM,GAAG,EAAb,CAAA;EACA,IAAA,MAAMmC,SAAS,GAAGC,uBAAuB,CAACZ,OAAD,CAAzC,CAAA;EACA,IAAA,MAAMG,QAAQ,GAAGQ,SAAS,CAAC9D,GAA3B,CAAA;MACA,IAAIgE,OAAO,GAAG,KAAd,CAAA;;MAEA,KAAK,IAAIX,UAAU,GAAG,CAAtB,EAAyBA,UAAU,IAAI,CAAvC,EAA0C,EAAEA,UAA5C,EAAwD;QACtD,IAAIW,OAAO,IAAIb,OAAO,CAACE,UAAD,CAAP,KAAwB,CAAvC,EAA0C;EACxC,QAAA,SAAA;SADF,MAEO,IAAIW,OAAJ,EAAa;EAClBA,QAAAA,OAAO,GAAG,KAAV,CAAA;EACD,OAAA;;QAED,IAAIV,QAAQ,KAAKD,UAAjB,EAA6B;UAC3B,MAAMY,SAAS,GAAGZ,UAAU,KAAK,CAAf,GAAmB,IAAnB,GAA0B,GAA5C,CAAA;EACA1B,QAAAA,MAAM,IAAIsC,SAAV,CAAA;EACAD,QAAAA,OAAO,GAAG,IAAV,CAAA;EACA,QAAA,SAAA;EACD,OAAA;;QAEDrC,MAAM,IAAIwB,OAAO,CAACE,UAAD,CAAP,CAAoBxZ,QAApB,CAA6B,EAA7B,CAAV,CAAA;;QAEA,IAAIwZ,UAAU,KAAK,CAAnB,EAAsB;EACpB1B,QAAAA,MAAM,IAAI,GAAV,CAAA;EACD,OAAA;EACF,KAAA;;EAED,IAAA,OAAOA,MAAP,CAAA;EACD,GAAA;;EAED,EAAA,SAASuC,SAAT,CAAmBnE,KAAnB,EAA0BoE,YAA1B,EAAwC;EACtC,IAAA,IAAIpE,KAAK,CAAC,CAAD,CAAL,KAAa,GAAjB,EAAsB;QACpB,IAAIA,KAAK,CAACA,KAAK,CAAC9V,MAAN,GAAe,CAAhB,CAAL,KAA4B,GAAhC,EAAqC;EACnC,QAAA,OAAO0V,OAAP,CAAA;EACD,OAAA;;EAED,MAAA,OAAOyD,SAAS,CAACrD,KAAK,CAACyC,SAAN,CAAgB,CAAhB,EAAmBzC,KAAK,CAAC9V,MAAN,GAAe,CAAlC,CAAD,CAAhB,CAAA;EACD,KAAA;;MAED,IAAI,CAACka,YAAL,EAAmB;QACjB,OAAOC,eAAe,CAACrE,KAAD,CAAtB,CAAA;EACD,KAAA;;EAED,IAAA,MAAMd,MAAM,GAAGyC,iBAAiB,CAAC3B,KAAD,CAAhC,CAAA;EACA,IAAA,MAAMsE,WAAW,GAAGC,IAAI,CAACzF,OAAL,CAAaI,MAAb,EAAqB,KAArB,EAA4BqF,IAAI,CAAC1H,kBAAL,CAAwBE,eAApD,EAAqE,KAArE,CAApB,CAAA;;MACA,IAAIuH,WAAW,KAAK,IAApB,EAA0B;EACxB,MAAA,OAAO1E,OAAP,CAAA;EACD,KAAA;;EAED,IAAA,IAAImB,8BAA8B,CAACuD,WAAD,CAAlC,EAAiD;EAC/C,MAAA,OAAO1E,OAAP,CAAA;EACD,KAAA;;EAED,IAAA,MAAM4E,QAAQ,GAAG5B,SAAS,CAAC0B,WAAD,CAA1B,CAAA;;MACA,IAAI,OAAOE,QAAP,KAAoB,QAApB,IAAgCA,QAAQ,KAAK5E,OAAjD,EAA0D;EACxD,MAAA,OAAO4E,QAAP,CAAA;EACD,KAAA;;EAED,IAAA,OAAOF,WAAP,CAAA;EACD,GAAA;;IAED,SAASD,eAAT,CAAyBrE,KAAzB,EAAgC;EAC9B,IAAA,IAAIgB,8CAA8C,CAAChB,KAAD,CAAlD,EAA2D;EACzD,MAAA,OAAOJ,OAAP,CAAA;EACD,KAAA;;MAED,IAAIgC,MAAM,GAAG,EAAb,CAAA;MACA,MAAM6C,OAAO,GAAGlG,4BAAQ,CAACsB,IAAT,CAAcC,MAAd,CAAqBE,KAArB,CAAhB,CAAA;;EACA,IAAA,KAAK,IAAI5V,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqa,OAAO,CAACva,MAA5B,EAAoC,EAAEE,CAAtC,EAAyC;QACvCwX,MAAM,IAAIO,iBAAiB,CAACsC,OAAO,CAACra,CAAD,CAAR,EAAa0X,wBAAb,CAA3B,CAAA;EACD,KAAA;;EACD,IAAA,OAAOF,MAAP,CAAA;EACD,GAAA;;IAED,SAASoC,uBAAT,CAAiCU,GAAjC,EAAsC;MACpC,IAAIC,MAAM,GAAG,IAAb,CAAA;EACA,IAAA,IAAIC,MAAM,GAAG,CAAb,CAFoC;;MAGpC,IAAIC,SAAS,GAAG,IAAhB,CAAA;MACA,IAAIC,OAAO,GAAG,CAAd,CAAA;;EAEA,IAAA,KAAK,IAAI1a,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGsa,GAAG,CAACxa,MAAxB,EAAgC,EAAEE,CAAlC,EAAqC;EACnC,MAAA,IAAIsa,GAAG,CAACta,CAAD,CAAH,KAAW,CAAf,EAAkB;UAChB,IAAI0a,OAAO,GAAGF,MAAd,EAAsB;EACpBD,UAAAA,MAAM,GAAGE,SAAT,CAAA;EACAD,UAAAA,MAAM,GAAGE,OAAT,CAAA;EACD,SAAA;;EAEDD,QAAAA,SAAS,GAAG,IAAZ,CAAA;EACAC,QAAAA,OAAO,GAAG,CAAV,CAAA;EACD,OARD,MAQO;UACL,IAAID,SAAS,KAAK,IAAlB,EAAwB;EACtBA,UAAAA,SAAS,GAAGza,CAAZ,CAAA;EACD,SAAA;;EACD,QAAA,EAAE0a,OAAF,CAAA;EACD,OAAA;EACF,KArBmC;;;MAwBpC,IAAIA,OAAO,GAAGF,MAAd,EAAsB;EACpBD,MAAAA,MAAM,GAAGE,SAAT,CAAA;EACAD,MAAAA,MAAM,GAAGE,OAAT,CAAA;EACD,KAAA;;MAED,OAAO;EACL7E,MAAAA,GAAG,EAAE0E,MADA;EAEL9M,MAAAA,GAAG,EAAE+M,MAAAA;OAFP,CAAA;EAID,GAAA;;IAED,SAASG,aAAT,CAAuBC,IAAvB,EAA6B;EAC3B,IAAA,IAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;QAC5B,OAAO7B,aAAa,CAAC6B,IAAD,CAApB,CAAA;EACD,KAH0B;;;MAM3B,IAAIA,IAAI,YAAYjN,KAApB,EAA2B;EACzB,MAAA,OAAO,MAAM+L,aAAa,CAACkB,IAAD,CAAnB,GAA4B,GAAnC,CAAA;EACD,KAAA;;EAED,IAAA,OAAOA,IAAP,CAAA;EACD,GAAA;;IAED,SAASC,gBAAT,CAA0B7D,GAA1B,EAA+B;EAC7B,IAAA,OAAOA,GAAG,CAACjH,OAAJ,CAAY,kDAAZ,EAAgE,EAAhE,CAAP,CAAA;EACD,GAAA;;IAED,SAAS+K,iBAAT,CAA2B9D,GAA3B,EAAgC;EAC9B,IAAA,OAAOA,GAAG,CAACjH,OAAJ,CAAY,uBAAZ,EAAqC,EAArC,CAAP,CAAA;EACD,GAAA;;IAED,SAASgL,WAAT,CAAqB/D,GAArB,EAA0B;EACxB,IAAA,MAAMgE,IAAI,GAAGhE,GAAG,CAACgE,IAAjB,CAAA;;EACA,IAAA,IAAIA,IAAI,CAAClb,MAAL,KAAgB,CAApB,EAAuB;EACrB,MAAA,OAAA;EACD,KAAA;;EACD,IAAA,IAAIkX,GAAG,CAACF,MAAJ,KAAe,MAAf,IAAyBkE,IAAI,CAAClb,MAAL,KAAgB,CAAzC,IAA8Cmb,8BAA8B,CAACD,IAAI,CAAC,CAAD,CAAL,CAAhF,EAA2F;EACzF,MAAA,OAAA;EACD,KAAA;;EAEDA,IAAAA,IAAI,CAACtC,GAAL,EAAA,CAAA;EACD,GAAA;;IAED,SAASwC,mBAAT,CAA6BlE,GAA7B,EAAkC;MAChC,OAAOA,GAAG,CAACmE,QAAJ,KAAiB,EAAjB,IAAuBnE,GAAG,CAACoE,QAAJ,KAAiB,EAA/C,CAAA;EACD,GAAA;;IAED,SAASC,+BAAT,CAAyCrE,GAAzC,EAA8C;MAC5C,OAAOA,GAAG,CAAC4D,IAAJ,KAAa,IAAb,IAAqB5D,GAAG,CAAC4D,IAAJ,KAAa,EAAlC,IAAwC5D,GAAG,CAACsE,gBAA5C,IAAgEtE,GAAG,CAACF,MAAJ,KAAe,MAAtF,CAAA;EACD,GAAA;;IAED,SAASmE,8BAAT,CAAwC5H,MAAxC,EAAgD;EAC9C,IAAA,OAAO,aAAckF,CAAAA,IAAd,CAAmBlF,MAAnB,CAAP,CAAA;EACD,GAAA;;IAED,SAASkI,eAAT,CAAyB3F,KAAzB,EAAgC4F,IAAhC,EAAsCC,gBAAtC,EAAwDzE,GAAxD,EAA6D0E,aAA7D,EAA4E;MAC1E,IAAKtC,CAAAA,OAAL,GAAe,CAAf,CAAA;MACA,IAAKxD,CAAAA,KAAL,GAAaA,KAAb,CAAA;EACA,IAAA,IAAA,CAAK4F,IAAL,GAAYA,IAAI,IAAI,IAApB,CAAA;EACA,IAAA,IAAA,CAAKC,gBAAL,GAAwBA,gBAAgB,IAAI,OAA5C,CAAA;MACA,IAAKC,CAAAA,aAAL,GAAqBA,aAArB,CAAA;MACA,IAAK1E,CAAAA,GAAL,GAAWA,GAAX,CAAA;MACA,IAAKxB,CAAAA,OAAL,GAAe,KAAf,CAAA;MACA,IAAKmG,CAAAA,UAAL,GAAkB,KAAlB,CAAA;;MAEA,IAAI,CAAC,IAAK3E,CAAAA,GAAV,EAAe;EACb,MAAA,IAAA,CAAKA,GAAL,GAAW;EACTF,QAAAA,MAAM,EAAE,EADC;EAETqE,QAAAA,QAAQ,EAAE,EAFD;EAGTC,QAAAA,QAAQ,EAAE,EAHD;EAITR,QAAAA,IAAI,EAAE,IAJG;EAKTgB,QAAAA,IAAI,EAAE,IALG;EAMTZ,QAAAA,IAAI,EAAE,EANG;EAOTa,QAAAA,KAAK,EAAE,IAPE;EAQTC,QAAAA,QAAQ,EAAE,IARD;EAUTR,QAAAA,gBAAgB,EAAE,KAAA;SAVpB,CAAA;EAaA,MAAA,MAAMxO,GAAG,GAAG+N,gBAAgB,CAAC,IAAA,CAAKjF,KAAN,CAA5B,CAAA;;EACA,MAAA,IAAI9I,GAAG,KAAK,IAAK8I,CAAAA,KAAjB,EAAwB;UACtB,IAAK+F,CAAAA,UAAL,GAAkB,IAAlB,CAAA;EACD,OAAA;;QACD,IAAK/F,CAAAA,KAAL,GAAa9I,GAAb,CAAA;EACD,KAAA;;EAED,IAAA,MAAMA,GAAG,GAAGgO,iBAAiB,CAAC,IAAA,CAAKlF,KAAN,CAA7B,CAAA;;EACA,IAAA,IAAI9I,GAAG,KAAK,IAAK8I,CAAAA,KAAjB,EAAwB;QACtB,IAAK+F,CAAAA,UAAL,GAAkB,IAAlB,CAAA;EACD,KAAA;;MACD,IAAK/F,CAAAA,KAAL,GAAa9I,GAAb,CAAA;EAEA,IAAA,IAAA,CAAKiP,KAAL,GAAaL,aAAa,IAAI,cAA9B,CAAA;MAEA,IAAKvF,CAAAA,MAAL,GAAc,EAAd,CAAA;MACA,IAAK6F,CAAAA,MAAL,GAAc,KAAd,CAAA;MACA,IAAKC,CAAAA,OAAL,GAAe,KAAf,CAAA;MACA,IAAKC,CAAAA,qBAAL,GAA6B,KAA7B,CAAA;MAEA,IAAKtG,CAAAA,KAAL,GAAazB,4BAAQ,CAACsB,IAAT,CAAcC,MAAd,CAAqB,IAAKE,CAAAA,KAA1B,CAAb,CAAA;;MAEA,OAAO,IAAA,CAAKwD,OAAL,IAAgB,IAAKxD,CAAAA,KAAL,CAAW9V,MAAlC,EAA0C,EAAE,IAAKsZ,CAAAA,OAAjD,EAA0D;EACxD,MAAA,MAAMhQ,CAAC,GAAG,IAAA,CAAKwM,KAAL,CAAW,IAAA,CAAKwD,OAAhB,CAAV,CAAA;EACA,MAAA,MAAMnB,IAAI,GAAG7G,KAAK,CAAChI,CAAD,CAAL,GAAWkI,SAAX,GAAuBE,MAAM,CAACK,aAAP,CAAqBzI,CAArB,CAApC,CAFwD;;QAKxD,MAAM+S,GAAG,GAAG,IAAA,CAAK,QAAW,GAAA,IAAA,CAAKJ,KAArB,CAA4B3S,CAAAA,CAA5B,EAA+B6O,IAA/B,CAAZ,CAAA;;QACA,IAAI,CAACkE,GAAL,EAAU;EACR,QAAA,MADQ;EAET,OAFD,MAEO,IAAIA,GAAG,KAAK3G,OAAZ,EAAqB;UAC1B,IAAKA,CAAAA,OAAL,GAAe,IAAf,CAAA;EACA,QAAA,MAAA;EACD,OAAA;EACF,KAAA;EACF,GAAA;;IAED+F,eAAe,CAACpV,SAAhB,CAA0B,oBAA1B,CAAA,GAAkD,SAASiW,gBAAT,CAA0BhT,CAA1B,EAA6B6O,IAA7B,EAAmC;EACnF,IAAA,IAAIlC,YAAY,CAAC3M,CAAD,CAAhB,EAAqB;EACnB,MAAA,IAAA,CAAK+M,MAAL,IAAe8B,IAAI,CAAC7B,WAAL,EAAf,CAAA;QACA,IAAK2F,CAAAA,KAAL,GAAa,QAAb,CAAA;EACD,KAHD,MAGO,IAAI,CAAC,IAAA,CAAKL,aAAV,EAAyB;QAC9B,IAAKK,CAAAA,KAAL,GAAa,WAAb,CAAA;EACA,MAAA,EAAE,KAAK3C,OAAP,CAAA;EACD,KAHM,MAGA;QACL,IAAKuC,CAAAA,UAAL,GAAkB,IAAlB,CAAA;EACA,MAAA,OAAOnG,OAAP,CAAA;EACD,KAAA;;EAED,IAAA,OAAO,IAAP,CAAA;KAZF,CAAA;;IAeA+F,eAAe,CAACpV,SAAhB,CAA0B,cAA1B,CAAA,GAA4C,SAASkW,WAAT,CAAqBjT,CAArB,EAAwB6O,IAAxB,EAA8B;EACxE,IAAA,IAAIjC,mBAAmB,CAAC5M,CAAD,CAAnB,IAA0BA,CAAC,KAAK,EAAhC,IAAsCA,CAAC,KAAK,EAA5C,IAAkDA,CAAC,KAAK,EAA5D,EAAgE;EAC9D,MAAA,IAAA,CAAK+M,MAAL,IAAe8B,IAAI,CAAC7B,WAAL,EAAf,CAAA;EACD,KAFD,MAEO,IAAIhN,CAAC,KAAK,EAAV,EAAc;QACnB,IAAI,IAAA,CAAKsS,aAAT,EAAwB;EACtB,QAAA,IAAI3E,SAAS,CAAC,IAAKC,CAAAA,GAAN,CAAT,IAAuB,CAACH,eAAe,CAAC,IAAA,CAAKV,MAAN,CAA3C,EAA0D;EACxD,UAAA,OAAO,KAAP,CAAA;EACD,SAAA;;EAED,QAAA,IAAI,CAACY,SAAS,CAAC,IAAA,CAAKC,GAAN,CAAV,IAAwBH,eAAe,CAAC,IAAA,CAAKV,MAAN,CAA3C,EAA0D;EACxD,UAAA,OAAO,KAAP,CAAA;EACD,SAAA;;EAED,QAAA,IAAI,CAAC+E,mBAAmB,CAAC,KAAKlE,GAAN,CAAnB,IAAiC,IAAKA,CAAAA,GAAL,CAAS4E,IAAT,KAAkB,IAApD,KAA6D,KAAKzF,MAAL,KAAgB,MAAjF,EAAyF;EACvF,UAAA,OAAO,KAAP,CAAA;EACD,SAAA;;UAED,IAAI,IAAA,CAAKa,GAAL,CAASF,MAAT,KAAoB,MAApB,KAA+B,KAAKE,GAAL,CAAS4D,IAAT,KAAkB,EAAlB,IAAwB,IAAK5D,CAAAA,GAAL,CAAS4D,IAAT,KAAkB,IAAzE,CAAJ,EAAoF;EAClF,UAAA,OAAO,KAAP,CAAA;EACD,SAAA;EACF,OAAA;;EACD,MAAA,IAAA,CAAK5D,GAAL,CAASF,MAAT,GAAkB,KAAKX,MAAvB,CAAA;QACA,IAAKA,CAAAA,MAAL,GAAc,EAAd,CAAA;;QACA,IAAI,IAAA,CAAKuF,aAAT,EAAwB;EACtB,QAAA,OAAO,KAAP,CAAA;EACD,OAAA;;EACD,MAAA,IAAI,KAAK1E,GAAL,CAASF,MAAT,KAAoB,MAAxB,EAAgC;EAC9B,QAAA,IAAI,KAAKlB,KAAL,CAAW,KAAKwD,OAAL,GAAe,CAA1B,CAAiC,KAAA,EAAjC,IAAuC,IAAKxD,CAAAA,KAAL,CAAW,IAAKwD,CAAAA,OAAL,GAAe,CAA1B,CAAA,KAAiC,EAA5E,EAAgF;YAC9E,IAAKuC,CAAAA,UAAL,GAAkB,IAAlB,CAAA;EACD,SAAA;;UACD,IAAKI,CAAAA,KAAL,GAAa,MAAb,CAAA;SAJF,MAKO,IAAIhF,SAAS,CAAC,KAAKC,GAAN,CAAT,IAAuB,IAAA,CAAKwE,IAAL,KAAc,IAArC,IAA6C,IAAA,CAAKA,IAAL,CAAU1E,MAAV,KAAqB,IAAKE,CAAAA,GAAL,CAASF,MAA/E,EAAuF;UAC5F,IAAKiF,CAAAA,KAAL,GAAa,+BAAb,CAAA;EACD,OAFM,MAEA,IAAIhF,SAAS,CAAC,IAAKC,CAAAA,GAAN,CAAb,EAAyB;UAC9B,IAAK+E,CAAAA,KAAL,GAAa,2BAAb,CAAA;SADK,MAEA,IAAI,IAAA,CAAKnG,KAAL,CAAW,IAAKwD,CAAAA,OAAL,GAAe,CAA1B,CAAiC,KAAA,EAArC,EAAyC;UAC9C,IAAK2C,CAAAA,KAAL,GAAa,mBAAb,CAAA;EACA,QAAA,EAAE,KAAK3C,OAAP,CAAA;EACD,OAHM,MAGA;EACL,QAAA,IAAA,CAAKpC,GAAL,CAASsE,gBAAT,GAA4B,IAA5B,CAAA;EACA,QAAA,IAAA,CAAKtE,GAAL,CAASgE,IAAT,CAAc1X,IAAd,CAAmB,EAAnB,CAAA,CAAA;UACA,IAAKyY,CAAAA,KAAL,GAAa,2BAAb,CAAA;EACD,OAAA;EACF,KAxCM,MAwCA,IAAI,CAAC,IAAA,CAAKL,aAAV,EAAyB;QAC9B,IAAKvF,CAAAA,MAAL,GAAc,EAAd,CAAA;QACA,IAAK4F,CAAAA,KAAL,GAAa,WAAb,CAAA;QACA,IAAK3C,CAAAA,OAAL,GAAe,CAAC,CAAhB,CAAA;EACD,KAJM,MAIA;QACL,IAAKuC,CAAAA,UAAL,GAAkB,IAAlB,CAAA;EACA,MAAA,OAAOnG,OAAP,CAAA;EACD,KAAA;;EAED,IAAA,OAAO,IAAP,CAAA;KApDF,CAAA;;IAuDA+F,eAAe,CAACpV,SAAhB,CAA0B,iBAA1B,IAA+C,SAASmW,aAAT,CAAuBlT,CAAvB,EAA0B;EACvE,IAAA,IAAI,IAAKoS,CAAAA,IAAL,KAAc,IAAd,IAAuB,IAAA,CAAKA,IAAL,CAAUF,gBAAV,IAA8BlS,CAAC,KAAK,EAA/D,EAAoE;EAClE,MAAA,OAAOoM,OAAP,CAAA;OADF,MAEO,IAAI,IAAA,CAAKgG,IAAL,CAAUF,gBAAV,IAA8BlS,CAAC,KAAK,EAAxC,EAA4C;EACjD,MAAA,IAAA,CAAK4N,GAAL,CAASF,MAAT,GAAkB,IAAK0E,CAAAA,IAAL,CAAU1E,MAA5B,CAAA;QACA,IAAKE,CAAAA,GAAL,CAASgE,IAAT,GAAgB,IAAA,CAAKQ,IAAL,CAAUR,IAAV,CAAevX,KAAf,EAAhB,CAAA;EACA,MAAA,IAAA,CAAKuT,GAAL,CAAS6E,KAAT,GAAiB,IAAKL,CAAAA,IAAL,CAAUK,KAA3B,CAAA;EACA,MAAA,IAAA,CAAK7E,GAAL,CAAS8E,QAAT,GAAoB,EAApB,CAAA;EACA,MAAA,IAAA,CAAK9E,GAAL,CAASsE,gBAAT,GAA4B,IAA5B,CAAA;QACA,IAAKS,CAAAA,KAAL,GAAa,UAAb,CAAA;OANK,MAOA,IAAI,IAAKP,CAAAA,IAAL,CAAU1E,MAAV,KAAqB,MAAzB,EAAiC;QACtC,IAAKiF,CAAAA,KAAL,GAAa,MAAb,CAAA;EACA,MAAA,EAAE,KAAK3C,OAAP,CAAA;EACD,KAHM,MAGA;QACL,IAAK2C,CAAAA,KAAL,GAAa,UAAb,CAAA;EACA,MAAA,EAAE,KAAK3C,OAAP,CAAA;EACD,KAAA;;EAED,IAAA,OAAO,IAAP,CAAA;KAlBF,CAAA;;IAqBAmC,eAAe,CAACpV,SAAhB,CAA0B,qCAA1B,IAAmE,SAASoW,+BAAT,CAAyCnT,CAAzC,EAA4C;EAC7G,IAAA,IAAIA,CAAC,KAAK,EAAN,IAAY,IAAKwM,CAAAA,KAAL,CAAW,IAAA,CAAKwD,OAAL,GAAe,CAA1B,CAAA,KAAiC,EAAjD,EAAqD;QACnD,IAAK2C,CAAAA,KAAL,GAAa,kCAAb,CAAA;EACA,MAAA,EAAE,KAAK3C,OAAP,CAAA;EACD,KAHD,MAGO;QACL,IAAKuC,CAAAA,UAAL,GAAkB,IAAlB,CAAA;QACA,IAAKI,CAAAA,KAAL,GAAa,UAAb,CAAA;EACA,MAAA,EAAE,KAAK3C,OAAP,CAAA;EACD,KAAA;;EAED,IAAA,OAAO,IAAP,CAAA;KAVF,CAAA;;IAaAmC,eAAe,CAACpV,SAAhB,CAA0B,yBAA1B,IAAuD,SAASqW,oBAAT,CAA8BpT,CAA9B,EAAiC;MACtF,IAAIA,CAAC,KAAK,EAAV,EAAc;QACZ,IAAK2S,CAAAA,KAAL,GAAa,WAAb,CAAA;EACD,KAFD,MAEO;QACL,IAAKA,CAAAA,KAAL,GAAa,MAAb,CAAA;EACA,MAAA,EAAE,KAAK3C,OAAP,CAAA;EACD,KAAA;;EAED,IAAA,OAAO,IAAP,CAAA;KARF,CAAA;;IAWAmC,eAAe,CAACpV,SAAhB,CAA0B,gBAA1B,IAA8C,SAASsW,aAAT,CAAuBrT,CAAvB,EAA0B;EACtE,IAAA,IAAA,CAAK4N,GAAL,CAASF,MAAT,GAAkB,IAAK0E,CAAAA,IAAL,CAAU1E,MAA5B,CAAA;;EACA,IAAA,IAAI1F,KAAK,CAAChI,CAAD,CAAT,EAAc;EACZ,MAAA,IAAA,CAAK4N,GAAL,CAASmE,QAAT,GAAoB,IAAKK,CAAAA,IAAL,CAAUL,QAA9B,CAAA;EACA,MAAA,IAAA,CAAKnE,GAAL,CAASoE,QAAT,GAAoB,IAAKI,CAAAA,IAAL,CAAUJ,QAA9B,CAAA;EACA,MAAA,IAAA,CAAKpE,GAAL,CAAS4D,IAAT,GAAgB,IAAKY,CAAAA,IAAL,CAAUZ,IAA1B,CAAA;EACA,MAAA,IAAA,CAAK5D,GAAL,CAAS4E,IAAT,GAAgB,IAAKJ,CAAAA,IAAL,CAAUI,IAA1B,CAAA;QACA,IAAK5E,CAAAA,GAAL,CAASgE,IAAT,GAAgB,IAAA,CAAKQ,IAAL,CAAUR,IAAV,CAAevX,KAAf,EAAhB,CAAA;EACA,MAAA,IAAA,CAAKuT,GAAL,CAAS6E,KAAT,GAAiB,IAAKL,CAAAA,IAAL,CAAUK,KAA3B,CAAA;EACD,KAPD,MAOO,IAAIzS,CAAC,KAAK,EAAV,EAAc;QACnB,IAAK2S,CAAAA,KAAL,GAAa,gBAAb,CAAA;EACD,KAFM,MAEA,IAAI3S,CAAC,KAAK,EAAV,EAAc;EACnB,MAAA,IAAA,CAAK4N,GAAL,CAASmE,QAAT,GAAoB,IAAKK,CAAAA,IAAL,CAAUL,QAA9B,CAAA;EACA,MAAA,IAAA,CAAKnE,GAAL,CAASoE,QAAT,GAAoB,IAAKI,CAAAA,IAAL,CAAUJ,QAA9B,CAAA;EACA,MAAA,IAAA,CAAKpE,GAAL,CAAS4D,IAAT,GAAgB,IAAKY,CAAAA,IAAL,CAAUZ,IAA1B,CAAA;EACA,MAAA,IAAA,CAAK5D,GAAL,CAAS4E,IAAT,GAAgB,IAAKJ,CAAAA,IAAL,CAAUI,IAA1B,CAAA;QACA,IAAK5E,CAAAA,GAAL,CAASgE,IAAT,GAAgB,IAAA,CAAKQ,IAAL,CAAUR,IAAV,CAAevX,KAAf,EAAhB,CAAA;EACA,MAAA,IAAA,CAAKuT,GAAL,CAAS6E,KAAT,GAAiB,EAAjB,CAAA;QACA,IAAKE,CAAAA,KAAL,GAAa,OAAb,CAAA;EACD,KARM,MAQA,IAAI3S,CAAC,KAAK,EAAV,EAAc;EACnB,MAAA,IAAA,CAAK4N,GAAL,CAASmE,QAAT,GAAoB,IAAKK,CAAAA,IAAL,CAAUL,QAA9B,CAAA;EACA,MAAA,IAAA,CAAKnE,GAAL,CAASoE,QAAT,GAAoB,IAAKI,CAAAA,IAAL,CAAUJ,QAA9B,CAAA;EACA,MAAA,IAAA,CAAKpE,GAAL,CAAS4D,IAAT,GAAgB,IAAKY,CAAAA,IAAL,CAAUZ,IAA1B,CAAA;EACA,MAAA,IAAA,CAAK5D,GAAL,CAAS4E,IAAT,GAAgB,IAAKJ,CAAAA,IAAL,CAAUI,IAA1B,CAAA;QACA,IAAK5E,CAAAA,GAAL,CAASgE,IAAT,GAAgB,IAAA,CAAKQ,IAAL,CAAUR,IAAV,CAAevX,KAAf,EAAhB,CAAA;EACA,MAAA,IAAA,CAAKuT,GAAL,CAAS6E,KAAT,GAAiB,IAAKL,CAAAA,IAAL,CAAUK,KAA3B,CAAA;EACA,MAAA,IAAA,CAAK7E,GAAL,CAAS8E,QAAT,GAAoB,EAApB,CAAA;QACA,IAAKC,CAAAA,KAAL,GAAa,UAAb,CAAA;OARK,MASA,IAAIhF,SAAS,CAAC,IAAA,CAAKC,GAAN,CAAT,IAAuB5N,CAAC,KAAK,EAAjC,EAAqC;QAC1C,IAAKuS,CAAAA,UAAL,GAAkB,IAAlB,CAAA;QACA,IAAKI,CAAAA,KAAL,GAAa,gBAAb,CAAA;EACD,KAHM,MAGA;EACL,MAAA,IAAA,CAAK/E,GAAL,CAASmE,QAAT,GAAoB,IAAKK,CAAAA,IAAL,CAAUL,QAA9B,CAAA;EACA,MAAA,IAAA,CAAKnE,GAAL,CAASoE,QAAT,GAAoB,IAAKI,CAAAA,IAAL,CAAUJ,QAA9B,CAAA;EACA,MAAA,IAAA,CAAKpE,GAAL,CAAS4D,IAAT,GAAgB,IAAKY,CAAAA,IAAL,CAAUZ,IAA1B,CAAA;EACA,MAAA,IAAA,CAAK5D,GAAL,CAAS4E,IAAT,GAAgB,IAAKJ,CAAAA,IAAL,CAAUI,IAA1B,CAAA;QACA,IAAK5E,CAAAA,GAAL,CAASgE,IAAT,GAAgB,KAAKQ,IAAL,CAAUR,IAAV,CAAevX,KAAf,CAAqB,CAArB,EAAwB,KAAK+X,IAAL,CAAUR,IAAV,CAAelb,MAAf,GAAwB,CAAhD,CAAhB,CAAA;QAEA,IAAKic,CAAAA,KAAL,GAAa,MAAb,CAAA;EACA,MAAA,EAAE,KAAK3C,OAAP,CAAA;EACD,KAAA;;EAED,IAAA,OAAO,IAAP,CAAA;KA1CF,CAAA;;IA6CAmC,eAAe,CAACpV,SAAhB,CAA0B,sBAA1B,IAAoD,SAASuW,kBAAT,CAA4BtT,CAA5B,EAA+B;EACjF,IAAA,IAAI2N,SAAS,CAAC,IAAKC,CAAAA,GAAN,CAAT,KAAwB5N,CAAC,KAAK,EAAN,IAAYA,CAAC,KAAK,EAA1C,CAAJ,EAAmD;QACjD,IAAIA,CAAC,KAAK,EAAV,EAAc;UACZ,IAAKuS,CAAAA,UAAL,GAAkB,IAAlB,CAAA;EACD,OAAA;;QACD,IAAKI,CAAAA,KAAL,GAAa,kCAAb,CAAA;EACD,KALD,MAKO,IAAI3S,CAAC,KAAK,EAAV,EAAc;QACnB,IAAK2S,CAAAA,KAAL,GAAa,WAAb,CAAA;EACD,KAFM,MAEA;EACL,MAAA,IAAA,CAAK/E,GAAL,CAASmE,QAAT,GAAoB,IAAKK,CAAAA,IAAL,CAAUL,QAA9B,CAAA;EACA,MAAA,IAAA,CAAKnE,GAAL,CAASoE,QAAT,GAAoB,IAAKI,CAAAA,IAAL,CAAUJ,QAA9B,CAAA;EACA,MAAA,IAAA,CAAKpE,GAAL,CAAS4D,IAAT,GAAgB,IAAKY,CAAAA,IAAL,CAAUZ,IAA1B,CAAA;EACA,MAAA,IAAA,CAAK5D,GAAL,CAAS4E,IAAT,GAAgB,IAAKJ,CAAAA,IAAL,CAAUI,IAA1B,CAAA;QACA,IAAKG,CAAAA,KAAL,GAAa,MAAb,CAAA;EACA,MAAA,EAAE,KAAK3C,OAAP,CAAA;EACD,KAAA;;EAED,IAAA,OAAO,IAAP,CAAA;KAjBF,CAAA;;IAoBAmC,eAAe,CAACpV,SAAhB,CAA0B,iCAA1B,IAA+D,SAASwW,4BAAT,CAAsCvT,CAAtC,EAAyC;EACtG,IAAA,IAAIA,CAAC,KAAK,EAAN,IAAY,IAAKwM,CAAAA,KAAL,CAAW,IAAA,CAAKwD,OAAL,GAAe,CAA1B,CAAA,KAAiC,EAAjD,EAAqD;QACnD,IAAK2C,CAAAA,KAAL,GAAa,kCAAb,CAAA;EACA,MAAA,EAAE,KAAK3C,OAAP,CAAA;EACD,KAHD,MAGO;QACL,IAAKuC,CAAAA,UAAL,GAAkB,IAAlB,CAAA;QACA,IAAKI,CAAAA,KAAL,GAAa,kCAAb,CAAA;EACA,MAAA,EAAE,KAAK3C,OAAP,CAAA;EACD,KAAA;;EAED,IAAA,OAAO,IAAP,CAAA;KAVF,CAAA;;IAaAmC,eAAe,CAACpV,SAAhB,CAA0B,wCAA1B,IAAsE,SAASyW,kCAAT,CAA4CxT,CAA5C,EAA+C;EACnH,IAAA,IAAIA,CAAC,KAAK,EAAN,IAAYA,CAAC,KAAK,EAAtB,EAA0B;QACxB,IAAK2S,CAAAA,KAAL,GAAa,WAAb,CAAA;EACA,MAAA,EAAE,KAAK3C,OAAP,CAAA;EACD,KAHD,MAGO;QACL,IAAKuC,CAAAA,UAAL,GAAkB,IAAlB,CAAA;EACD,KAAA;;EAED,IAAA,OAAO,IAAP,CAAA;KARF,CAAA;;IAWAJ,eAAe,CAACpV,SAAhB,CAA0B,iBAA1B,CAAA,GAA+C,SAAS0W,cAAT,CAAwBzT,CAAxB,EAA2B6O,IAA3B,EAAiC;MAC9E,IAAI7O,CAAC,KAAK,EAAV,EAAc;QACZ,IAAKuS,CAAAA,UAAL,GAAkB,IAAlB,CAAA;;QACA,IAAI,IAAA,CAAKK,MAAT,EAAiB;EACf,QAAA,IAAA,CAAK7F,MAAL,GAAc,KAAQ,GAAA,IAAA,CAAKA,MAA3B,CAAA;EACD,OAAA;;EACD,MAAA,IAAA,CAAK6F,MAAL,GAAc,IAAd,CALY;;EAQZ,MAAA,MAAMvO,GAAG,GAAG2F,YAAY,CAAC,IAAA,CAAK+C,MAAN,CAAxB,CAAA;;QACA,KAAK,IAAIiD,OAAO,GAAG,CAAnB,EAAsBA,OAAO,GAAG3L,GAAhC,EAAqC,EAAE2L,OAAvC,EAAgD;UAC9C,MAAMxF,SAAS,GAAG,IAAKuC,CAAAA,MAAL,CAAY1E,WAAZ,CAAwB2H,OAAxB,CAAlB,CAAA;;EAEA,QAAA,IAAIxF,SAAS,KAAK,EAAd,IAAoB,CAAC,IAAA,CAAKsI,qBAA9B,EAAqD;YACnD,IAAKA,CAAAA,qBAAL,GAA6B,IAA7B,CAAA;EACA,UAAA,SAAA;EACD,SAAA;;EACD,QAAA,MAAMY,iBAAiB,GAAG/E,iBAAiB,CAACnE,SAAD,EAAYkE,uBAAZ,CAA3C,CAAA;;UACA,IAAI,IAAA,CAAKoE,qBAAT,EAAgC;EAC9B,UAAA,IAAA,CAAKlF,GAAL,CAASoE,QAAT,IAAqB0B,iBAArB,CAAA;EACD,SAFD,MAEO;EACL,UAAA,IAAA,CAAK9F,GAAL,CAASmE,QAAT,IAAqB2B,iBAArB,CAAA;EACD,SAAA;EACF,OAAA;;QACD,IAAK3G,CAAAA,MAAL,GAAc,EAAd,CAAA;EACD,KAxBD,MAwBO,IAAI/E,KAAK,CAAChI,CAAD,CAAL,IAAYA,CAAC,KAAK,EAAlB,IAAwBA,CAAC,KAAK,EAA9B,IAAoCA,CAAC,KAAK,EAA1C,IACC2N,SAAS,CAAC,IAAA,CAAKC,GAAN,CAAT,IAAuB5N,CAAC,KAAK,EADlC,EACuC;EAC5C,MAAA,IAAI,KAAK4S,MAAL,IAAe,KAAK7F,MAAL,KAAgB,EAAnC,EAAuC;UACrC,IAAKwF,CAAAA,UAAL,GAAkB,IAAlB,CAAA;EACA,QAAA,OAAOnG,OAAP,CAAA;EACD,OAAA;;QACD,IAAK4D,CAAAA,OAAL,IAAgBhG,YAAY,CAAC,KAAK+C,MAAN,CAAZ,GAA4B,CAA5C,CAAA;QACA,IAAKA,CAAAA,MAAL,GAAc,EAAd,CAAA;QACA,IAAK4F,CAAAA,KAAL,GAAa,MAAb,CAAA;EACD,KATM,MASA;QACL,IAAK5F,CAAAA,MAAL,IAAe8B,IAAf,CAAA;EACD,KAAA;;EAED,IAAA,OAAO,IAAP,CAAA;KAtCF,CAAA;;EAyCAsD,EAAAA,eAAe,CAACpV,SAAhB,CAA0B,gBAA1B,CAAA,GACAoV,eAAe,CAACpV,SAAhB,CAA0B,YAA1B,IAA0C,SAAS4W,aAAT,CAAuB3T,CAAvB,EAA0B6O,IAA1B,EAAgC;MACxE,IAAI,IAAA,CAAKyD,aAAL,IAAsB,IAAA,CAAK1E,GAAL,CAASF,MAAT,KAAoB,MAA9C,EAAsD;EACpD,MAAA,EAAE,KAAKsC,OAAP,CAAA;QACA,IAAK2C,CAAAA,KAAL,GAAa,WAAb,CAAA;OAFF,MAGO,IAAI3S,CAAC,KAAK,EAAN,IAAY,CAAC,IAAK6S,CAAAA,OAAtB,EAA+B;EACpC,MAAA,IAAI,IAAK9F,CAAAA,MAAL,KAAgB,EAApB,EAAwB;UACtB,IAAKwF,CAAAA,UAAL,GAAkB,IAAlB,CAAA;EACA,QAAA,OAAOnG,OAAP,CAAA;EACD,OAAA;;EAED,MAAA,MAAMoF,IAAI,GAAGb,SAAS,CAAC,IAAK5D,CAAAA,MAAN,EAAcY,SAAS,CAAC,IAAA,CAAKC,GAAN,CAAvB,CAAtB,CAAA;;QACA,IAAI4D,IAAI,KAAKpF,OAAb,EAAsB;EACpB,QAAA,OAAOA,OAAP,CAAA;EACD,OAAA;;EAED,MAAA,IAAA,CAAKwB,GAAL,CAAS4D,IAAT,GAAgBA,IAAhB,CAAA;QACA,IAAKzE,CAAAA,MAAL,GAAc,EAAd,CAAA;QACA,IAAK4F,CAAAA,KAAL,GAAa,MAAb,CAAA;;EACA,MAAA,IAAI,IAAKL,CAAAA,aAAL,KAAuB,UAA3B,EAAuC;EACrC,QAAA,OAAO,KAAP,CAAA;EACD,OAAA;EACF,KAjBM,MAiBA,IAAItK,KAAK,CAAChI,CAAD,CAAL,IAAYA,CAAC,KAAK,EAAlB,IAAwBA,CAAC,KAAK,EAA9B,IAAoCA,CAAC,KAAK,EAA1C,IACC2N,SAAS,CAAC,IAAA,CAAKC,GAAN,CAAT,IAAuB5N,CAAC,KAAK,EADlC,EACuC;EAC5C,MAAA,EAAE,KAAKgQ,OAAP,CAAA;;QACA,IAAIrC,SAAS,CAAC,IAAA,CAAKC,GAAN,CAAT,IAAuB,IAAKb,CAAAA,MAAL,KAAgB,EAA3C,EAA+C;UAC7C,IAAKwF,CAAAA,UAAL,GAAkB,IAAlB,CAAA;EACA,QAAA,OAAOnG,OAAP,CAAA;SAFF,MAGO,IAAI,IAAKkG,CAAAA,aAAL,IAAsB,IAAKvF,CAAAA,MAAL,KAAgB,EAAtC,KACC+E,mBAAmB,CAAC,IAAKlE,CAAAA,GAAN,CAAnB,IAAiC,IAAKA,CAAAA,GAAL,CAAS4E,IAAT,KAAkB,IADpD,CAAJ,EAC+D;UACpE,IAAKD,CAAAA,UAAL,GAAkB,IAAlB,CAAA;EACA,QAAA,OAAO,KAAP,CAAA;EACD,OAAA;;EAED,MAAA,MAAMf,IAAI,GAAGb,SAAS,CAAC,IAAK5D,CAAAA,MAAN,EAAcY,SAAS,CAAC,IAAA,CAAKC,GAAN,CAAvB,CAAtB,CAAA;;QACA,IAAI4D,IAAI,KAAKpF,OAAb,EAAsB;EACpB,QAAA,OAAOA,OAAP,CAAA;EACD,OAAA;;EAED,MAAA,IAAA,CAAKwB,GAAL,CAAS4D,IAAT,GAAgBA,IAAhB,CAAA;QACA,IAAKzE,CAAAA,MAAL,GAAc,EAAd,CAAA;QACA,IAAK4F,CAAAA,KAAL,GAAa,YAAb,CAAA;;QACA,IAAI,IAAA,CAAKL,aAAT,EAAwB;EACtB,QAAA,OAAO,KAAP,CAAA;EACD,OAAA;EACF,KAvBM,MAuBA;QACL,IAAItS,CAAC,KAAK,EAAV,EAAc;UACZ,IAAK6S,CAAAA,OAAL,GAAe,IAAf,CAAA;EACD,OAFD,MAEO,IAAI7S,CAAC,KAAK,EAAV,EAAc;UACnB,IAAK6S,CAAAA,OAAL,GAAe,KAAf,CAAA;EACD,OAAA;;QACD,IAAK9F,CAAAA,MAAL,IAAe8B,IAAf,CAAA;EACD,KAAA;;EAED,IAAA,OAAO,IAAP,CAAA;KAtDF,CAAA;;IAyDAsD,eAAe,CAACpV,SAAhB,CAA0B,YAA1B,CAAA,GAA0C,SAAS6W,SAAT,CAAmB5T,CAAnB,EAAsB6O,IAAtB,EAA4B;EACpE,IAAA,IAAInC,YAAY,CAAC1M,CAAD,CAAhB,EAAqB;QACnB,IAAK+M,CAAAA,MAAL,IAAe8B,IAAf,CAAA;EACD,KAFD,MAEO,IAAI7G,KAAK,CAAChI,CAAD,CAAL,IAAYA,CAAC,KAAK,EAAlB,IAAwBA,CAAC,KAAK,EAA9B,IAAoCA,CAAC,KAAK,EAA1C,IACC2N,SAAS,CAAC,KAAKC,GAAN,CAAT,IAAuB5N,CAAC,KAAK,EAD9B,IAEA,IAAA,CAAKsS,aAFT,EAEwB;EAC7B,MAAA,IAAI,IAAKvF,CAAAA,MAAL,KAAgB,EAApB,EAAwB;EACtB,QAAA,MAAMyF,IAAI,GAAGnE,QAAQ,CAAC,IAAA,CAAKtB,MAAN,CAArB,CAAA;;UACA,IAAIyF,IAAI,GAAG1b,IAAI,CAACE,GAAL,CAAS,CAAT,EAAY,EAAZ,CAAkB,GAAA,CAA7B,EAAgC;YAC9B,IAAKub,CAAAA,UAAL,GAAkB,IAAlB,CAAA;EACA,UAAA,OAAOnG,OAAP,CAAA;EACD,SAAA;;EACD,QAAA,IAAA,CAAKwB,GAAL,CAAS4E,IAAT,GAAgBA,IAAI,KAAK3E,WAAW,CAAC,IAAKD,CAAAA,GAAL,CAASF,MAAV,CAApB,GAAwC,IAAxC,GAA+C8E,IAA/D,CAAA;UACA,IAAKzF,CAAAA,MAAL,GAAc,EAAd,CAAA;EACD,OAAA;;QACD,IAAI,IAAA,CAAKuF,aAAT,EAAwB;EACtB,QAAA,OAAO,KAAP,CAAA;EACD,OAAA;;QACD,IAAKK,CAAAA,KAAL,GAAa,YAAb,CAAA;EACA,MAAA,EAAE,KAAK3C,OAAP,CAAA;EACD,KAjBM,MAiBA;QACL,IAAKuC,CAAAA,UAAL,GAAkB,IAAlB,CAAA;EACA,MAAA,OAAOnG,OAAP,CAAA;EACD,KAAA;;EAED,IAAA,OAAO,IAAP,CAAA;KAzBF,CAAA;;EA4BA,EAAA,MAAMyH,uBAAuB,GAAG,IAAIpX,GAAJ,CAAQ,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,CAAR,CAAhC,CAAA;;IAEA0V,eAAe,CAACpV,SAAhB,CAA0B,YAA1B,IAA0C,SAAS+W,SAAT,CAAmB9T,CAAnB,EAAsB;EAC9D,IAAA,IAAA,CAAK4N,GAAL,CAASF,MAAT,GAAkB,MAAlB,CAAA;;EAEA,IAAA,IAAI1N,CAAC,KAAK,EAAN,IAAYA,CAAC,KAAK,EAAtB,EAA0B;QACxB,IAAIA,CAAC,KAAK,EAAV,EAAc;UACZ,IAAKuS,CAAAA,UAAL,GAAkB,IAAlB,CAAA;EACD,OAAA;;QACD,IAAKI,CAAAA,KAAL,GAAa,YAAb,CAAA;EACD,KALD,MAKO,IAAI,IAAKP,CAAAA,IAAL,KAAc,IAAd,IAAsB,IAAA,CAAKA,IAAL,CAAU1E,MAAV,KAAqB,MAA/C,EAAuD;EAC5D,MAAA,IAAI1F,KAAK,CAAChI,CAAD,CAAT,EAAc;EACZ,QAAA,IAAA,CAAK4N,GAAL,CAAS4D,IAAT,GAAgB,IAAKY,CAAAA,IAAL,CAAUZ,IAA1B,CAAA;UACA,IAAK5D,CAAAA,GAAL,CAASgE,IAAT,GAAgB,IAAA,CAAKQ,IAAL,CAAUR,IAAV,CAAevX,KAAf,EAAhB,CAAA;EACA,QAAA,IAAA,CAAKuT,GAAL,CAAS6E,KAAT,GAAiB,IAAKL,CAAAA,IAAL,CAAUK,KAA3B,CAAA;EACD,OAJD,MAIO,IAAIzS,CAAC,KAAK,EAAV,EAAc;EACnB,QAAA,IAAA,CAAK4N,GAAL,CAAS4D,IAAT,GAAgB,IAAKY,CAAAA,IAAL,CAAUZ,IAA1B,CAAA;UACA,IAAK5D,CAAAA,GAAL,CAASgE,IAAT,GAAgB,IAAA,CAAKQ,IAAL,CAAUR,IAAV,CAAevX,KAAf,EAAhB,CAAA;EACA,QAAA,IAAA,CAAKuT,GAAL,CAAS6E,KAAT,GAAiB,EAAjB,CAAA;UACA,IAAKE,CAAAA,KAAL,GAAa,OAAb,CAAA;EACD,OALM,MAKA,IAAI3S,CAAC,KAAK,EAAV,EAAc;EACnB,QAAA,IAAA,CAAK4N,GAAL,CAAS4D,IAAT,GAAgB,IAAKY,CAAAA,IAAL,CAAUZ,IAA1B,CAAA;UACA,IAAK5D,CAAAA,GAAL,CAASgE,IAAT,GAAgB,IAAA,CAAKQ,IAAL,CAAUR,IAAV,CAAevX,KAAf,EAAhB,CAAA;EACA,QAAA,IAAA,CAAKuT,GAAL,CAAS6E,KAAT,GAAiB,IAAKL,CAAAA,IAAL,CAAUK,KAA3B,CAAA;EACA,QAAA,IAAA,CAAK7E,GAAL,CAAS8E,QAAT,GAAoB,EAApB,CAAA;UACA,IAAKC,CAAAA,KAAL,GAAa,UAAb,CAAA;EACD,OANM,MAMA;UACL,IAAI,IAAA,CAAKnG,KAAL,CAAW9V,MAAX,GAAoB,IAAKsZ,CAAAA,OAAzB,GAAmC,CAAnC,KAAyC,CAAzC;UACA,CAAC9C,8BAA8B,CAAClN,CAAD,EAAI,IAAA,CAAKwM,KAAL,CAAW,IAAA,CAAKwD,OAAL,GAAe,CAA1B,CAAJ,CAD/B,IAEC,IAAA,CAAKxD,KAAL,CAAW9V,MAAX,GAAoB,IAAKsZ,CAAAA,OAAzB,GAAmC,CAAnC,IAAwC,CAAxC;EACA,QAAA,CAAC6D,uBAAuB,CAAChS,GAAxB,CAA4B,IAAK2K,CAAAA,KAAL,CAAW,IAAA,CAAKwD,OAAL,GAAe,CAA1B,CAA5B,CAHN,EAGkE;EAChE,UAAA,IAAA,CAAKpC,GAAL,CAAS4D,IAAT,GAAgB,IAAKY,CAAAA,IAAL,CAAUZ,IAA1B,CAAA;YACA,IAAK5D,CAAAA,GAAL,CAASgE,IAAT,GAAgB,IAAA,CAAKQ,IAAL,CAAUR,IAAV,CAAevX,KAAf,EAAhB,CAAA;YACAsX,WAAW,CAAC,IAAK/D,CAAAA,GAAN,CAAX,CAAA;EACD,SAPD,MAOO;YACL,IAAK2E,CAAAA,UAAL,GAAkB,IAAlB,CAAA;EACD,SAAA;;UAED,IAAKI,CAAAA,KAAL,GAAa,MAAb,CAAA;EACA,QAAA,EAAE,KAAK3C,OAAP,CAAA;EACD,OAAA;EACF,KA/BM,MA+BA;QACL,IAAK2C,CAAAA,KAAL,GAAa,MAAb,CAAA;EACA,MAAA,EAAE,KAAK3C,OAAP,CAAA;EACD,KAAA;;EAED,IAAA,OAAO,IAAP,CAAA;KA5CF,CAAA;;IA+CAmC,eAAe,CAACpV,SAAhB,CAA0B,kBAA1B,IAAgD,SAASgX,cAAT,CAAwB/T,CAAxB,EAA2B;EACzE,IAAA,IAAIA,CAAC,KAAK,EAAN,IAAYA,CAAC,KAAK,EAAtB,EAA0B;QACxB,IAAIA,CAAC,KAAK,EAAV,EAAc;UACZ,IAAKuS,CAAAA,UAAL,GAAkB,IAAlB,CAAA;EACD,OAAA;;QACD,IAAKI,CAAAA,KAAL,GAAa,WAAb,CAAA;EACD,KALD,MAKO;QACL,IAAI,IAAA,CAAKP,IAAL,KAAc,IAAd,IAAsB,IAAKA,CAAAA,IAAL,CAAU1E,MAAV,KAAqB,MAA/C,EAAuD;UACrD,IAAIJ,oCAAoC,CAAC,IAAA,CAAK8E,IAAL,CAAUR,IAAV,CAAe,CAAf,CAAD,CAAxC,EAA6D;EAC3D,UAAA,IAAA,CAAKhE,GAAL,CAASgE,IAAT,CAAc1X,IAAd,CAAmB,IAAKkY,CAAAA,IAAL,CAAUR,IAAV,CAAe,CAAf,CAAnB,CAAA,CAAA;EACD,SAFD,MAEO;EACL,UAAA,IAAA,CAAKhE,GAAL,CAAS4D,IAAT,GAAgB,IAAKY,CAAAA,IAAL,CAAUZ,IAA1B,CAAA;EACD,SAAA;EACF,OAAA;;QACD,IAAKmB,CAAAA,KAAL,GAAa,MAAb,CAAA;EACA,MAAA,EAAE,KAAK3C,OAAP,CAAA;EACD,KAAA;;EAED,IAAA,OAAO,IAAP,CAAA;KAlBF,CAAA;;IAqBAmC,eAAe,CAACpV,SAAhB,CAA0B,iBAA1B,CAAA,GAA+C,SAASiX,aAAT,CAAuBhU,CAAvB,EAA0B6O,IAA1B,EAAgC;MAC7E,IAAI7G,KAAK,CAAChI,CAAD,CAAL,IAAYA,CAAC,KAAK,EAAlB,IAAwBA,CAAC,KAAK,EAA9B,IAAoCA,CAAC,KAAK,EAA1C,IAAgDA,CAAC,KAAK,EAA1D,EAA8D;EAC5D,MAAA,EAAE,KAAKgQ,OAAP,CAAA;;QACA,IAAI,CAAC,KAAKsC,aAAN,IAAuBjF,0BAA0B,CAAC,IAAA,CAAKN,MAAN,CAArD,EAAoE;UAClE,IAAKwF,CAAAA,UAAL,GAAkB,IAAlB,CAAA;UACA,IAAKI,CAAAA,KAAL,GAAa,MAAb,CAAA;EACD,OAHD,MAGO,IAAI,IAAA,CAAK5F,MAAL,KAAgB,EAApB,EAAwB;EAC7B,QAAA,IAAA,CAAKa,GAAL,CAAS4D,IAAT,GAAgB,EAAhB,CAAA;;UACA,IAAI,IAAA,CAAKc,aAAT,EAAwB;EACtB,UAAA,OAAO,KAAP,CAAA;EACD,SAAA;;UACD,IAAKK,CAAAA,KAAL,GAAa,YAAb,CAAA;EACD,OANM,MAMA;EACL,QAAA,IAAInB,IAAI,GAAGb,SAAS,CAAC,IAAK5D,CAAAA,MAAN,EAAcY,SAAS,CAAC,IAAA,CAAKC,GAAN,CAAvB,CAApB,CAAA;;UACA,IAAI4D,IAAI,KAAKpF,OAAb,EAAsB;EACpB,UAAA,OAAOA,OAAP,CAAA;EACD,SAAA;;UACD,IAAIoF,IAAI,KAAK,WAAb,EAA0B;EACxBA,UAAAA,IAAI,GAAG,EAAP,CAAA;EACD,SAAA;;EACD,QAAA,IAAA,CAAK5D,GAAL,CAAS4D,IAAT,GAAgBA,IAAhB,CAAA;;UAEA,IAAI,IAAA,CAAKc,aAAT,EAAwB;EACtB,UAAA,OAAO,KAAP,CAAA;EACD,SAAA;;UAED,IAAKvF,CAAAA,MAAL,GAAc,EAAd,CAAA;UACA,IAAK4F,CAAAA,KAAL,GAAa,YAAb,CAAA;EACD,OAAA;EACF,KA5BD,MA4BO;QACL,IAAK5F,CAAAA,MAAL,IAAe8B,IAAf,CAAA;EACD,KAAA;;EAED,IAAA,OAAO,IAAP,CAAA;KAjCF,CAAA;;IAoCAsD,eAAe,CAACpV,SAAhB,CAA0B,kBAA1B,IAAgD,SAASkX,cAAT,CAAwBjU,CAAxB,EAA2B;EACzE,IAAA,IAAI2N,SAAS,CAAC,IAAKC,CAAAA,GAAN,CAAb,EAAyB;QACvB,IAAI5N,CAAC,KAAK,EAAV,EAAc;UACZ,IAAKuS,CAAAA,UAAL,GAAkB,IAAlB,CAAA;EACD,OAAA;;QACD,IAAKI,CAAAA,KAAL,GAAa,MAAb,CAAA;;EAEA,MAAA,IAAI3S,CAAC,KAAK,EAAN,IAAYA,CAAC,KAAK,EAAtB,EAA0B;EACxB,QAAA,EAAE,KAAKgQ,OAAP,CAAA;EACD,OAAA;OARH,MASO,IAAI,CAAC,IAAA,CAAKsC,aAAN,IAAuBtS,CAAC,KAAK,EAAjC,EAAqC;EAC1C,MAAA,IAAA,CAAK4N,GAAL,CAAS6E,KAAT,GAAiB,EAAjB,CAAA;QACA,IAAKE,CAAAA,KAAL,GAAa,OAAb,CAAA;OAFK,MAGA,IAAI,CAAC,IAAA,CAAKL,aAAN,IAAuBtS,CAAC,KAAK,EAAjC,EAAqC;EAC1C,MAAA,IAAA,CAAK4N,GAAL,CAAS8E,QAAT,GAAoB,EAApB,CAAA;QACA,IAAKC,CAAAA,KAAL,GAAa,UAAb,CAAA;EACD,KAHM,MAGA,IAAI3S,CAAC,KAAKkI,SAAV,EAAqB;QAC1B,IAAKyK,CAAAA,KAAL,GAAa,MAAb,CAAA;;QACA,IAAI3S,CAAC,KAAK,EAAV,EAAc;EACZ,QAAA,EAAE,KAAKgQ,OAAP,CAAA;EACD,OAAA;EACF,KAAA;;EAED,IAAA,OAAO,IAAP,CAAA;KAvBF,CAAA;;IA0BAmC,eAAe,CAACpV,SAAhB,CAA0B,YAA1B,IAA0C,SAASmX,SAAT,CAAmBlU,CAAnB,EAAsB;EAC9D,IAAA,IAAIgI,KAAK,CAAChI,CAAD,CAAL,IAAYA,CAAC,KAAK,EAAlB,IAAyB2N,SAAS,CAAC,IAAA,CAAKC,GAAN,CAAT,IAAuB5N,CAAC,KAAK,EAAtD,IACC,CAAC,IAAA,CAAKsS,aAAN,KAAwBtS,CAAC,KAAK,EAAN,IAAYA,CAAC,KAAK,EAA1C,CADL,EACqD;QACnD,IAAI2N,SAAS,CAAC,IAAKC,CAAAA,GAAN,CAAT,IAAuB5N,CAAC,KAAK,EAAjC,EAAqC;UACnC,IAAKuS,CAAAA,UAAL,GAAkB,IAAlB,CAAA;EACD,OAAA;;EAED,MAAA,IAAItF,WAAW,CAAC,IAAKF,CAAAA,MAAN,CAAf,EAA8B;UAC5B4E,WAAW,CAAC,IAAK/D,CAAAA,GAAN,CAAX,CAAA;;EACA,QAAA,IAAI5N,CAAC,KAAK,EAAN,IAAY,EAAE2N,SAAS,CAAC,IAAKC,CAAAA,GAAN,CAAT,IAAuB5N,CAAC,KAAK,EAA/B,CAAhB,EAAoD;EAClD,UAAA,IAAA,CAAK4N,GAAL,CAASgE,IAAT,CAAc1X,IAAd,CAAmB,EAAnB,CAAA,CAAA;EACD,SAAA;SAJH,MAKO,IAAI4S,WAAW,CAAC,KAAKC,MAAN,CAAX,IAA4B/M,CAAC,KAAK,EAAlC,IACA,EAAE2N,SAAS,CAAC,IAAA,CAAKC,GAAN,CAAT,IAAuB5N,CAAC,KAAK,EAA/B,CADJ,EACwC;EAC7C,QAAA,IAAA,CAAK4N,GAAL,CAASgE,IAAT,CAAc1X,IAAd,CAAmB,EAAnB,CAAA,CAAA;SAFK,MAGA,IAAI,CAAC4S,WAAW,CAAC,IAAKC,CAAAA,MAAN,CAAhB,EAA+B;UACpC,IAAI,IAAA,CAAKa,GAAL,CAASF,MAAT,KAAoB,MAApB,IAA8B,KAAKE,GAAL,CAASgE,IAAT,CAAclb,MAAd,KAAyB,CAAvD,IAA4D2W,0BAA0B,CAAC,IAAA,CAAKN,MAAN,CAA1F,EAAyG;EACvG,UAAA,IAAI,IAAKa,CAAAA,GAAL,CAAS4D,IAAT,KAAkB,EAAlB,IAAwB,IAAA,CAAK5D,GAAL,CAAS4D,IAAT,KAAkB,IAA9C,EAAoD;cAClD,IAAKe,CAAAA,UAAL,GAAkB,IAAlB,CAAA;EACA,YAAA,IAAA,CAAK3E,GAAL,CAAS4D,IAAT,GAAgB,EAAhB,CAAA;EACD,WAAA;;EACD,UAAA,IAAA,CAAKzE,MAAL,GAAc,IAAA,CAAKA,MAAL,CAAY,CAAZ,IAAiB,GAA/B,CAAA;EACD,SAAA;;EACD,QAAA,IAAA,CAAKa,GAAL,CAASgE,IAAT,CAAc1X,IAAd,CAAmB,KAAK6S,MAAxB,CAAA,CAAA;EACD,OAAA;;QACD,IAAKA,CAAAA,MAAL,GAAc,EAAd,CAAA;;EACA,MAAA,IAAI,KAAKa,GAAL,CAASF,MAAT,KAAoB,MAApB,KAA+B1N,CAAC,KAAKkI,SAAN,IAAmBlI,CAAC,KAAK,EAAzB,IAA+BA,CAAC,KAAK,EAApE,CAAJ,EAA6E;EAC3E,QAAA,OAAO,KAAK4N,GAAL,CAASgE,IAAT,CAAclb,MAAd,GAAuB,CAAvB,IAA4B,IAAA,CAAKkX,GAAL,CAASgE,IAAT,CAAc,CAAd,CAAA,KAAqB,EAAxD,EAA4D;YAC1D,IAAKW,CAAAA,UAAL,GAAkB,IAAlB,CAAA;EACA,UAAA,IAAA,CAAK3E,GAAL,CAASgE,IAAT,CAAcuC,KAAd,EAAA,CAAA;EACD,SAAA;EACF,OAAA;;QACD,IAAInU,CAAC,KAAK,EAAV,EAAc;EACZ,QAAA,IAAA,CAAK4N,GAAL,CAAS6E,KAAT,GAAiB,EAAjB,CAAA;UACA,IAAKE,CAAAA,KAAL,GAAa,OAAb,CAAA;EACD,OAAA;;QACD,IAAI3S,CAAC,KAAK,EAAV,EAAc;EACZ,QAAA,IAAA,CAAK4N,GAAL,CAAS8E,QAAT,GAAoB,EAApB,CAAA;UACA,IAAKC,CAAAA,KAAL,GAAa,UAAb,CAAA;EACD,OAAA;EACF,KAvCD,MAuCO;EACT;EAEI,MAAA,IAAI3S,CAAC,KAAK,EAAN,KACD,CAAC6M,UAAU,CAAC,IAAA,CAAKL,KAAL,CAAW,IAAKwD,CAAAA,OAAL,GAAe,CAA1B,CAAD,CAAX,IACC,CAACnD,UAAU,CAAC,IAAA,CAAKL,KAAL,CAAW,IAAKwD,CAAAA,OAAL,GAAe,CAA1B,CAAD,CAFX,CAAJ,EAEgD;UAC9C,IAAKuC,CAAAA,UAAL,GAAkB,IAAlB,CAAA;EACD,OAAA;;EAED,MAAA,IAAA,CAAKxF,MAAL,IAAe4B,iBAAiB,CAAC3O,CAAD,EAAIwO,mBAAJ,CAAhC,CAAA;EACD,KAAA;;EAED,IAAA,OAAO,IAAP,CAAA;KApDF,CAAA;;IAuDA2D,eAAe,CAACpV,SAAhB,CAA0B,iCAA1B,IAA+D,SAASqX,yBAAT,CAAmCpU,CAAnC,EAAsC;MACnG,IAAIA,CAAC,KAAK,EAAV,EAAc;EACZ,MAAA,IAAA,CAAK4N,GAAL,CAAS6E,KAAT,GAAiB,EAAjB,CAAA;QACA,IAAKE,CAAAA,KAAL,GAAa,OAAb,CAAA;EACD,KAHD,MAGO,IAAI3S,CAAC,KAAK,EAAV,EAAc;EACnB,MAAA,IAAA,CAAK4N,GAAL,CAAS8E,QAAT,GAAoB,EAApB,CAAA;QACA,IAAKC,CAAAA,KAAL,GAAa,UAAb,CAAA;EACD,KAHM,MAGA;EACT;QACI,IAAI,CAAC3K,KAAK,CAAChI,CAAD,CAAN,IAAaA,CAAC,KAAK,EAAvB,EAA2B;UACzB,IAAKuS,CAAAA,UAAL,GAAkB,IAAlB,CAAA;EACD,OAAA;;EAED,MAAA,IAAIvS,CAAC,KAAK,EAAN,KACC,CAAC6M,UAAU,CAAC,IAAA,CAAKL,KAAL,CAAW,IAAKwD,CAAAA,OAAL,GAAe,CAA1B,CAAD,CAAX,IACA,CAACnD,UAAU,CAAC,IAAA,CAAKL,KAAL,CAAW,IAAKwD,CAAAA,OAAL,GAAe,CAA1B,CAAD,CAFZ,CAAJ,EAEiD;UAC/C,IAAKuC,CAAAA,UAAL,GAAkB,IAAlB,CAAA;EACD,OAAA;;EAED,MAAA,IAAI,CAACvK,KAAK,CAAChI,CAAD,CAAV,EAAe;EACb,QAAA,IAAA,CAAK4N,GAAL,CAASgE,IAAT,CAAc,CAAd,CAAA,GAAmB,KAAKhE,GAAL,CAASgE,IAAT,CAAc,CAAd,CAAmBjD,GAAAA,iBAAiB,CAAC3O,CAAD,EAAIsO,wBAAJ,CAAvD,CAAA;EACD,OAAA;EACF,KAAA;;EAED,IAAA,OAAO,IAAP,CAAA;KAxBF,CAAA;;IA2BA6D,eAAe,CAACpV,SAAhB,CAA0B,aAA1B,CAAA,GAA2C,SAASsX,UAAT,CAAoBrU,CAApB,EAAuB6O,IAAvB,EAA6B;EACtE,IAAA,IAAI7G,KAAK,CAAChI,CAAD,CAAL,IAAa,CAAC,IAAKsS,CAAAA,aAAN,IAAuBtS,CAAC,KAAK,EAA9C,EAAmD;QACjD,IAAI,CAAC2N,SAAS,CAAC,IAAA,CAAKC,GAAN,CAAV,IAAwB,KAAKA,GAAL,CAASF,MAAT,KAAoB,IAA5C,IAAoD,IAAKE,CAAAA,GAAL,CAASF,MAAT,KAAoB,KAA5E,EAAmF;UACjF,IAAK2E,CAAAA,gBAAL,GAAwB,OAAxB,CAAA;EACD,OAAA;;QAED,MAAMtF,MAAM,GAAG,IAAI3P,MAAJ,CAAW,IAAK2P,CAAAA,MAAhB,CAAf,CALiD;;EAMjD,MAAA,KAAK,IAAInW,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmW,MAAM,CAACrW,MAA3B,EAAmC,EAAEE,CAArC,EAAwC;EACtC,QAAA,IAAImW,MAAM,CAACnW,CAAD,CAAN,GAAY,IAAZ,IAAoBmW,MAAM,CAACnW,CAAD,CAAN,GAAY,IAAhC,IAAwCmW,MAAM,CAACnW,CAAD,CAAN,KAAc,IAAtD,IAA8DmW,MAAM,CAACnW,CAAD,CAAN,KAAc,IAA5E,IACAmW,MAAM,CAACnW,CAAD,CAAN,KAAc,IADd,IACsBmW,MAAM,CAACnW,CAAD,CAAN,KAAc,IADxC,EAC8C;YAC5C,IAAKgX,CAAAA,GAAL,CAAS6E,KAAT,IAAkB3E,aAAa,CAACf,MAAM,CAACnW,CAAD,CAAP,CAA/B,CAAA;EACD,SAHD,MAGO;EACL,UAAA,IAAA,CAAKgX,GAAL,CAAS6E,KAAT,IAAkBrK,MAAM,CAACK,aAAP,CAAqBsE,MAAM,CAACnW,CAAD,CAA3B,CAAlB,CAAA;EACD,SAAA;EACF,OAAA;;QAED,IAAKmW,CAAAA,MAAL,GAAc,EAAd,CAAA;;QACA,IAAI/M,CAAC,KAAK,EAAV,EAAc;EACZ,QAAA,IAAA,CAAK4N,GAAL,CAAS8E,QAAT,GAAoB,EAApB,CAAA;UACA,IAAKC,CAAAA,KAAL,GAAa,UAAb,CAAA;EACD,OAAA;EACF,KApBD,MAoBO;EACT;EACI,MAAA,IAAI3S,CAAC,KAAK,EAAN,KACD,CAAC6M,UAAU,CAAC,IAAA,CAAKL,KAAL,CAAW,IAAKwD,CAAAA,OAAL,GAAe,CAA1B,CAAD,CAAX,IACC,CAACnD,UAAU,CAAC,IAAA,CAAKL,KAAL,CAAW,IAAKwD,CAAAA,OAAL,GAAe,CAA1B,CAAD,CAFX,CAAJ,EAEgD;UAC9C,IAAKuC,CAAAA,UAAL,GAAkB,IAAlB,CAAA;EACD,OAAA;;QAED,IAAKxF,CAAAA,MAAL,IAAe8B,IAAf,CAAA;EACD,KAAA;;EAED,IAAA,OAAO,IAAP,CAAA;KAhCF,CAAA;;IAmCAsD,eAAe,CAACpV,SAAhB,CAA0B,gBAA1B,IAA8C,SAASuX,aAAT,CAAuBtU,CAAvB,EAA0B;EACtE,IAAA,IAAIgI,KAAK,CAAChI,CAAD,CAAT,EAAc,CAAd,MACO,IAAIA,CAAC,KAAK,GAAV,EAAe;QACpB,IAAKuS,CAAAA,UAAL,GAAkB,IAAlB,CAAA;EACD,KAFM,MAEA;EACT;EACI,MAAA,IAAIvS,CAAC,KAAK,EAAN,KACD,CAAC6M,UAAU,CAAC,IAAA,CAAKL,KAAL,CAAW,IAAKwD,CAAAA,OAAL,GAAe,CAA1B,CAAD,CAAX,IACC,CAACnD,UAAU,CAAC,IAAA,CAAKL,KAAL,CAAW,IAAKwD,CAAAA,OAAL,GAAe,CAA1B,CAAD,CAFX,CAAJ,EAEgD;UAC9C,IAAKuC,CAAAA,UAAL,GAAkB,IAAlB,CAAA;EACD,OAAA;;QAED,IAAK3E,CAAAA,GAAL,CAAS8E,QAAT,IAAqB/D,iBAAiB,CAAC3O,CAAD,EAAIsO,wBAAJ,CAAtC,CAAA;EACD,KAAA;;EAED,IAAA,OAAO,IAAP,CAAA;KAfF,CAAA;;EAkBA,EAAA,SAASiG,YAAT,CAAsB3G,GAAtB,EAA2B4G,eAA3B,EAA4C;EAC1C,IAAA,IAAIpG,MAAM,GAAGR,GAAG,CAACF,MAAJ,GAAa,GAA1B,CAAA;;EACA,IAAA,IAAIE,GAAG,CAAC4D,IAAJ,KAAa,IAAjB,EAAuB;EACrBpD,MAAAA,MAAM,IAAI,IAAV,CAAA;;QAEA,IAAIR,GAAG,CAACmE,QAAJ,KAAiB,EAAjB,IAAuBnE,GAAG,CAACoE,QAAJ,KAAiB,EAA5C,EAAgD;UAC9C5D,MAAM,IAAIR,GAAG,CAACmE,QAAd,CAAA;;EACA,QAAA,IAAInE,GAAG,CAACoE,QAAJ,KAAiB,EAArB,EAAyB;EACvB5D,UAAAA,MAAM,IAAI,GAAA,GAAMR,GAAG,CAACoE,QAApB,CAAA;EACD,SAAA;;EACD5D,QAAAA,MAAM,IAAI,GAAV,CAAA;EACD,OAAA;;EAEDA,MAAAA,MAAM,IAAImD,aAAa,CAAC3D,GAAG,CAAC4D,IAAL,CAAvB,CAAA;;EAEA,MAAA,IAAI5D,GAAG,CAAC4E,IAAJ,KAAa,IAAjB,EAAuB;EACrBpE,QAAAA,MAAM,IAAI,GAAA,GAAMR,GAAG,CAAC4E,IAApB,CAAA;EACD,OAAA;EACF,KAhBD,MAgBO,IAAI5E,GAAG,CAAC4D,IAAJ,KAAa,IAAb,IAAqB5D,GAAG,CAACF,MAAJ,KAAe,MAAxC,EAAgD;EACrDU,MAAAA,MAAM,IAAI,IAAV,CAAA;EACD,KAAA;;MAED,IAAIR,GAAG,CAACsE,gBAAR,EAA0B;EACxB9D,MAAAA,MAAM,IAAIR,GAAG,CAACgE,IAAJ,CAAS,CAAT,CAAV,CAAA;EACD,KAFD,MAEO;EACL,MAAA,KAAK,MAAM3H,MAAX,IAAqB2D,GAAG,CAACgE,IAAzB,EAA+B;UAC7BxD,MAAM,IAAI,MAAMnE,MAAhB,CAAA;EACD,OAAA;EACF,KAAA;;EAED,IAAA,IAAI2D,GAAG,CAAC6E,KAAJ,KAAc,IAAlB,EAAwB;EACtBrE,MAAAA,MAAM,IAAI,GAAA,GAAMR,GAAG,CAAC6E,KAApB,CAAA;EACD,KAAA;;MAED,IAAI,CAAC+B,eAAD,IAAoB5G,GAAG,CAAC8E,QAAJ,KAAiB,IAAzC,EAA+C;EAC7CtE,MAAAA,MAAM,IAAI,GAAA,GAAMR,GAAG,CAAC8E,QAApB,CAAA;EACD,KAAA;;EAED,IAAA,OAAOtE,MAAP,CAAA;EACD,GAAA;;IAED,SAASqG,eAAT,CAAyBC,KAAzB,EAAgC;EAC9B,IAAA,IAAI/d,MAAM,GAAG+d,KAAK,CAAChH,MAAN,GAAe,KAA5B,CAAA;EACA/W,IAAAA,MAAM,IAAI4a,aAAa,CAACmD,KAAK,CAAClD,IAAP,CAAvB,CAAA;;EAEA,IAAA,IAAIkD,KAAK,CAAClC,IAAN,KAAe,IAAnB,EAAyB;EACvB7b,MAAAA,MAAM,IAAI,GAAA,GAAM+d,KAAK,CAAClC,IAAtB,CAAA;EACD,KAAA;;EAED,IAAA,OAAO7b,MAAP,CAAA;EACD,GAAA;;EAED8J,EAAAA,MAAA,CAAAC,OAAA,CAAA6T,YAAA,GAA8BA,YAA9B,CAAA;;EAEA9T,EAAAA,MAAoC,CAAAC,OAApC,CAAoCiU,kBAApC,GAAoC,UAAU/G,GAAV,EAAe;EACnD;MACE,QAAQA,GAAG,CAACF,MAAZ;EACE,MAAA,KAAK,MAAL;UACE,IAAI;EACF,UAAA,OAAOjN,MAAM,CAACC,OAAP,CAAeiU,kBAAf,CAAkClU,MAAM,CAACC,OAAP,CAAekU,QAAf,CAAwBhH,GAAG,CAACgE,IAAJ,CAAS,CAAT,CAAxB,CAAlC,CAAP,CAAA;WADF,CAEE,OAAOvG,CAAP,EAAU;EAClB;EACQ,UAAA,OAAO,MAAP,CAAA;EACD,SAAA;;EACH,MAAA,KAAK,KAAL,CAAA;EACA,MAAA,KAAK,QAAL,CAAA;EACA,MAAA,KAAK,MAAL,CAAA;EACA,MAAA,KAAK,OAAL,CAAA;EACA,MAAA,KAAK,IAAL,CAAA;EACA,MAAA,KAAK,KAAL;EACE,QAAA,OAAOoJ,eAAe,CAAC;YACrB/G,MAAM,EAAEE,GAAG,CAACF,MADS;YAErB8D,IAAI,EAAE5D,GAAG,CAAC4D,IAFW;YAGrBgB,IAAI,EAAE5E,GAAG,CAAC4E,IAAAA;EAHW,SAAD,CAAtB,CAAA;;EAKF,MAAA,KAAK,MAAL;EACJ;EACM,QAAA,OAAO,SAAP,CAAA;;EACF,MAAA;EACJ;EACM,QAAA,OAAO,MAAP,CAAA;EAxBJ,KAAA;KAFF,CAAA;;IA8BA/R,MAAA,CAAAC,OAAA,CAAAmU,aAAA,GAA+B,UAAUrI,KAAV,EAAiBrL,OAAjB,EAA0B;MACvD,IAAIA,OAAO,KAAK+G,SAAhB,EAA2B;EACzB/G,MAAAA,OAAO,GAAG,EAAV,CAAA;EACD,KAAA;;MAED,MAAM2T,GAAG,GAAG,IAAI3C,eAAJ,CAAoB3F,KAApB,EAA2BrL,OAAO,CAAC4T,OAAnC,EAA4C5T,OAAO,CAACkR,gBAApD,EAAsElR,OAAO,CAACyM,GAA9E,EAAmFzM,OAAO,CAACmR,aAA3F,CAAZ,CAAA;;MACA,IAAIwC,GAAG,CAAC1I,OAAR,EAAiB;EACf,MAAA,OAAO,SAAP,CAAA;EACD,KAAA;;MAED,OAAO0I,GAAG,CAAClH,GAAX,CAAA;KAVF,CAAA;;IAaAnN,MAAA,CAAAC,OAAA,CAAAsU,cAAA,GAAgC,UAAUpH,GAAV,EAAemE,QAAf,EAAyB;MACvDnE,GAAG,CAACmE,QAAJ,GAAe,EAAf,CAAA;MACA,MAAMd,OAAO,GAAGlG,4BAAQ,CAACsB,IAAT,CAAcC,MAAd,CAAqByF,QAArB,CAAhB,CAAA;;EACA,IAAA,KAAK,IAAInb,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqa,OAAO,CAACva,MAA5B,EAAoC,EAAEE,CAAtC,EAAyC;QACvCgX,GAAG,CAACmE,QAAJ,IAAgBpD,iBAAiB,CAACsC,OAAO,CAACra,CAAD,CAAR,EAAa8X,uBAAb,CAAjC,CAAA;EACD,KAAA;KALH,CAAA;;IAQAjO,MAAA,CAAAC,OAAA,CAAAuU,cAAA,GAAgC,UAAUrH,GAAV,EAAeoE,QAAf,EAAyB;MACvDpE,GAAG,CAACoE,QAAJ,GAAe,EAAf,CAAA;MACA,MAAMf,OAAO,GAAGlG,4BAAQ,CAACsB,IAAT,CAAcC,MAAd,CAAqB0F,QAArB,CAAhB,CAAA;;EACA,IAAA,KAAK,IAAIpb,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqa,OAAO,CAACva,MAA5B,EAAoC,EAAEE,CAAtC,EAAyC;QACvCgX,GAAG,CAACoE,QAAJ,IAAgBrD,iBAAiB,CAACsC,OAAO,CAACra,CAAD,CAAR,EAAa8X,uBAAb,CAAjC,CAAA;EACD,KAAA;KALH,CAAA;;EAQAjO,EAAAA,MAAA,CAAAC,OAAA,CAAA6Q,aAAA,GAA+BA,aAA/B,CAAA;EAEA9Q,EAAAA,MAAA,CAAAC,OAAA,CAAAuR,+BAAA,GAAiDA,+BAAjD,CAAA;;EAEAxR,EAAAA,MAAkC,CAAAC,OAAlC,CAAkCwU,gBAAlC,GAAkC,UAAUC,OAAV,EAAmB;MACnD,OAAO/M,MAAM,CAAC+M,OAAD,CAAb,CAAA;KADF,CAAA;;IAIA1U,MAAA,CAAAC,OAAA,CAAAkU,QAAA,GAA0B,UAAUpI,KAAV,EAAiBrL,OAAjB,EAA0B;MAClD,IAAIA,OAAO,KAAK+G,SAAhB,EAA2B;EACzB/G,MAAAA,OAAO,GAAG,EAAV,CAAA;EACD,KAHiD;;;EAMlD,IAAA,OAAOV,MAAM,CAACC,OAAP,CAAemU,aAAf,CAA6BrI,KAA7B,EAAoC;QAAEuI,OAAO,EAAE5T,OAAO,CAAC4T,OAAnB;QAA4B1C,gBAAgB,EAAElR,OAAO,CAACkR,gBAAAA;EAAtD,KAApC,CAAP,CAAA;KANF,CAAA;;;ECtwCA,IAAsB+C,cAAA,GAAG,MAAMC,OAAN,CAAc;IACrCtd,WAAW,CAACud,eAAD,EAAkB;EAC3B,IAAA,MAAM1H,GAAG,GAAG0H,eAAe,CAAC,CAAD,CAA3B,CAAA;EACA,IAAA,MAAMlD,IAAI,GAAGkD,eAAe,CAAC,CAAD,CAA5B,CAAA;MAEA,IAAIC,UAAU,GAAG,IAAjB,CAAA;;MACA,IAAInD,IAAI,KAAKlK,SAAb,EAAwB;EACtBqN,MAAAA,UAAU,GAAGT,eAAG,CAACD,aAAJ,CAAkBzC,IAAlB,CAAb,CAAA;;QACA,IAAImD,UAAU,KAAK,SAAnB,EAA8B;EAC5B,QAAA,MAAM,IAAIxN,SAAJ,CAAc,kBAAd,CAAN,CAAA;EACD,OAAA;EACF,KAAA;;EAED,IAAA,MAAMyN,SAAS,GAAGV,eAAG,CAACD,aAAJ,CAAkBjH,GAAlB,EAAuB;EAAEmH,MAAAA,OAAO,EAAEQ,UAAAA;EAAX,KAAvB,CAAlB,CAAA;;MACA,IAAIC,SAAS,KAAK,SAAlB,EAA6B;EAC3B,MAAA,MAAM,IAAIzN,SAAJ,CAAc,aAAd,CAAN,CAAA;EACD,KAAA;;EAED,IAAA,IAAA,CAAK0N,IAAL,GAAYD,SAAZ,CAjB2B;EAoB5B,GAAA;;EAEO,EAAA,IAAJE,IAAI,GAAG;EACT,IAAA,OAAOZ,eAAG,CAACP,YAAJ,CAAiB,IAAA,CAAKkB,IAAtB,CAAP,CAAA;EACD,GAAA;;IAEO,IAAJC,IAAI,CAACve,CAAD,EAAI;EACV,IAAA,MAAMqe,SAAS,GAAGV,eAAG,CAACD,aAAJ,CAAkB1d,CAAlB,CAAlB,CAAA;;MACA,IAAIqe,SAAS,KAAK,SAAlB,EAA6B;EAC3B,MAAA,MAAM,IAAIzN,SAAJ,CAAc,aAAd,CAAN,CAAA;EACD,KAAA;;MAED,IAAK0N,CAAAA,IAAL,GAAYD,SAAZ,CAAA;EACD,GAAA;;EAES,EAAA,IAANG,MAAM,GAAG;EACX,IAAA,OAAOb,eAAG,CAACH,kBAAJ,CAAuB,IAAA,CAAKc,IAA5B,CAAP,CAAA;EACD,GAAA;;EAEW,EAAA,IAARG,QAAQ,GAAG;EACb,IAAA,OAAO,IAAKH,CAAAA,IAAL,CAAU/H,MAAV,GAAmB,GAA1B,CAAA;EACD,GAAA;;IAEW,IAARkI,QAAQ,CAACze,CAAD,EAAI;EACd2d,IAAAA,eAAG,CAACD,aAAJ,CAAkB1d,CAAC,GAAG,GAAtB,EAA2B;QAAEyW,GAAG,EAAE,KAAK6H,IAAZ;EAAkBnD,MAAAA,aAAa,EAAE,cAAA;OAA5D,CAAA,CAAA;EACD,GAAA;;EAEW,EAAA,IAARP,QAAQ,GAAG;MACb,OAAO,IAAA,CAAK0D,IAAL,CAAU1D,QAAjB,CAAA;EACD,GAAA;;IAEW,IAARA,QAAQ,CAAC5a,CAAD,EAAI;EACd,IAAA,IAAI2d,eAAG,CAAC7C,+BAAJ,CAAoC,IAAKwD,CAAAA,IAAzC,CAAJ,EAAoD;EAClD,MAAA,OAAA;EACD,KAAA;;EAEDX,IAAAA,eAAG,CAACE,cAAJ,CAAmB,IAAKS,CAAAA,IAAxB,EAA8Bte,CAA9B,CAAA,CAAA;EACD,GAAA;;EAEW,EAAA,IAAR6a,QAAQ,GAAG;MACb,OAAO,IAAA,CAAKyD,IAAL,CAAUzD,QAAjB,CAAA;EACD,GAAA;;IAEW,IAARA,QAAQ,CAAC7a,CAAD,EAAI;EACd,IAAA,IAAI2d,eAAG,CAAC7C,+BAAJ,CAAoC,IAAKwD,CAAAA,IAAzC,CAAJ,EAAoD;EAClD,MAAA,OAAA;EACD,KAAA;;EAEDX,IAAAA,eAAG,CAACG,cAAJ,CAAmB,IAAKQ,CAAAA,IAAxB,EAA8Bte,CAA9B,CAAA,CAAA;EACD,GAAA;;EAEO,EAAA,IAAJqa,IAAI,GAAG;MACT,MAAM5D,GAAG,GAAG,IAAA,CAAK6H,IAAjB,CAAA;;EAEA,IAAA,IAAI7H,GAAG,CAAC4D,IAAJ,KAAa,IAAjB,EAAuB;EACrB,MAAA,OAAO,EAAP,CAAA;EACD,KAAA;;EAED,IAAA,IAAI5D,GAAG,CAAC4E,IAAJ,KAAa,IAAjB,EAAuB;EACrB,MAAA,OAAOsC,eAAG,CAACvD,aAAJ,CAAkB3D,GAAG,CAAC4D,IAAtB,CAAP,CAAA;EACD,KAAA;;EAED,IAAA,OAAOsD,eAAG,CAACvD,aAAJ,CAAkB3D,GAAG,CAAC4D,IAAtB,CAAA,GAA8B,GAA9B,GAAoCsD,eAAG,CAACI,gBAAJ,CAAqBtH,GAAG,CAAC4E,IAAzB,CAA3C,CAAA;EACD,GAAA;;IAEO,IAAJhB,IAAI,CAACra,CAAD,EAAI;EACV,IAAA,IAAI,IAAKse,CAAAA,IAAL,CAAUvD,gBAAd,EAAgC;EAC9B,MAAA,OAAA;EACD,KAAA;;EAED4C,IAAAA,eAAG,CAACD,aAAJ,CAAkB1d,CAAlB,EAAqB;QAAEyW,GAAG,EAAE,KAAK6H,IAAZ;EAAkBnD,MAAAA,aAAa,EAAE,MAAA;OAAtD,CAAA,CAAA;EACD,GAAA;;EAEW,EAAA,IAARuD,QAAQ,GAAG;EACb,IAAA,IAAI,KAAKJ,IAAL,CAAUjE,IAAV,KAAmB,IAAvB,EAA6B;EAC3B,MAAA,OAAO,EAAP,CAAA;EACD,KAAA;;MAED,OAAOsD,eAAG,CAACvD,aAAJ,CAAkB,KAAKkE,IAAL,CAAUjE,IAA5B,CAAP,CAAA;EACD,GAAA;;IAEW,IAARqE,QAAQ,CAAC1e,CAAD,EAAI;EACd,IAAA,IAAI,IAAKse,CAAAA,IAAL,CAAUvD,gBAAd,EAAgC;EAC9B,MAAA,OAAA;EACD,KAAA;;EAED4C,IAAAA,eAAG,CAACD,aAAJ,CAAkB1d,CAAlB,EAAqB;QAAEyW,GAAG,EAAE,KAAK6H,IAAZ;EAAkBnD,MAAAA,aAAa,EAAE,UAAA;OAAtD,CAAA,CAAA;EACD,GAAA;;EAEO,EAAA,IAAJE,IAAI,GAAG;EACT,IAAA,IAAI,KAAKiD,IAAL,CAAUjD,IAAV,KAAmB,IAAvB,EAA6B;EAC3B,MAAA,OAAO,EAAP,CAAA;EACD,KAAA;;MAED,OAAOsC,eAAG,CAACI,gBAAJ,CAAqB,KAAKO,IAAL,CAAUjD,IAA/B,CAAP,CAAA;EACD,GAAA;;IAEO,IAAJA,IAAI,CAACrb,CAAD,EAAI;EACV,IAAA,IAAI2d,eAAG,CAAC7C,+BAAJ,CAAoC,IAAKwD,CAAAA,IAAzC,CAAJ,EAAoD;EAClD,MAAA,OAAA;EACD,KAAA;;MAED,IAAIte,CAAC,KAAK,EAAV,EAAc;EACZ,MAAA,IAAA,CAAKse,IAAL,CAAUjD,IAAV,GAAiB,IAAjB,CAAA;EACD,KAFD,MAEO;EACLsC,MAAAA,eAAG,CAACD,aAAJ,CAAkB1d,CAAlB,EAAqB;UAAEyW,GAAG,EAAE,KAAK6H,IAAZ;EAAkBnD,QAAAA,aAAa,EAAE,MAAA;SAAtD,CAAA,CAAA;EACD,KAAA;EACF,GAAA;;EAEW,EAAA,IAARwD,QAAQ,GAAG;EACb,IAAA,IAAI,IAAKL,CAAAA,IAAL,CAAUvD,gBAAd,EAAgC;EAC9B,MAAA,OAAO,KAAKuD,IAAL,CAAU7D,IAAV,CAAe,CAAf,CAAP,CAAA;EACD,KAAA;;MAED,IAAI,IAAA,CAAK6D,IAAL,CAAU7D,IAAV,CAAelb,MAAf,KAA0B,CAA9B,EAAiC;EAC/B,MAAA,OAAO,EAAP,CAAA;EACD,KAAA;;MAED,OAAO,GAAA,GAAM,KAAK+e,IAAL,CAAU7D,IAAV,CAAe5W,IAAf,CAAoB,GAApB,CAAb,CAAA;EACD,GAAA;;IAEW,IAAR8a,QAAQ,CAAC3e,CAAD,EAAI;EACd,IAAA,IAAI,IAAKse,CAAAA,IAAL,CAAUvD,gBAAd,EAAgC;EAC9B,MAAA,OAAA;EACD,KAAA;;EAED,IAAA,IAAA,CAAKuD,IAAL,CAAU7D,IAAV,GAAiB,EAAjB,CAAA;EACAkD,IAAAA,eAAG,CAACD,aAAJ,CAAkB1d,CAAlB,EAAqB;QAAEyW,GAAG,EAAE,KAAK6H,IAAZ;EAAkBnD,MAAAA,aAAa,EAAE,YAAA;OAAtD,CAAA,CAAA;EACD,GAAA;;EAES,EAAA,IAANrH,MAAM,GAAG;EACX,IAAA,IAAI,IAAKwK,CAAAA,IAAL,CAAUhD,KAAV,KAAoB,IAApB,IAA4B,IAAA,CAAKgD,IAAL,CAAUhD,KAAV,KAAoB,EAApD,EAAwD;EACtD,MAAA,OAAO,EAAP,CAAA;EACD,KAAA;;EAED,IAAA,OAAO,GAAM,GAAA,IAAA,CAAKgD,IAAL,CAAUhD,KAAvB,CAAA;EACD,GAAA;;IAES,IAANxH,MAAM,CAAC9T,CAAD,EAAI;EAChB;MAEI,MAAMyW,GAAG,GAAG,IAAA,CAAK6H,IAAjB,CAAA;;MAEA,IAAIte,CAAC,KAAK,EAAV,EAAc;QACZyW,GAAG,CAAC6E,KAAJ,GAAY,IAAZ,CAAA;EACA,MAAA,OAAA;EACD,KAAA;;EAED,IAAA,MAAMjG,KAAK,GAAGrV,CAAC,CAAC,CAAD,CAAD,KAAS,GAAT,GAAeA,CAAC,CAAC8X,SAAF,CAAY,CAAZ,CAAf,GAAgC9X,CAA9C,CAAA;MACAyW,GAAG,CAAC6E,KAAJ,GAAY,EAAZ,CAAA;EACAqC,IAAAA,eAAG,CAACD,aAAJ,CAAkBrI,KAAlB,EAAyB;QAAEoB,GAAF;EAAO0E,MAAAA,aAAa,EAAE,OAAA;OAA/C,CAAA,CAAA;EACD,GAAA;;EAEO,EAAA,IAAJhY,IAAI,GAAG;EACT,IAAA,IAAI,IAAKmb,CAAAA,IAAL,CAAU/C,QAAV,KAAuB,IAAvB,IAA+B,IAAA,CAAK+C,IAAL,CAAU/C,QAAV,KAAuB,EAA1D,EAA8D;EAC5D,MAAA,OAAO,EAAP,CAAA;EACD,KAAA;;EAED,IAAA,OAAO,GAAM,GAAA,IAAA,CAAK+C,IAAL,CAAU/C,QAAvB,CAAA;EACD,GAAA;;IAEO,IAAJpY,IAAI,CAACnD,CAAD,EAAI;MACV,IAAIA,CAAC,KAAK,EAAV,EAAc;EACZ,MAAA,IAAA,CAAKse,IAAL,CAAU/C,QAAV,GAAqB,IAArB,CAAA;EACA,MAAA,OAAA;EACD,KAAA;;EAED,IAAA,MAAMlG,KAAK,GAAGrV,CAAC,CAAC,CAAD,CAAD,KAAS,GAAT,GAAeA,CAAC,CAAC8X,SAAF,CAAY,CAAZ,CAAf,GAAgC9X,CAA9C,CAAA;EACA,IAAA,IAAA,CAAKse,IAAL,CAAU/C,QAAV,GAAqB,EAArB,CAAA;EACAoC,IAAAA,eAAG,CAACD,aAAJ,CAAkBrI,KAAlB,EAAyB;QAAEoB,GAAG,EAAE,KAAK6H,IAAZ;EAAkBnD,MAAAA,aAAa,EAAE,UAAA;OAA1D,CAAA,CAAA;EACD,GAAA;;EAEDyD,EAAAA,MAAM,GAAG;EACP,IAAA,OAAO,KAAKL,IAAZ,CAAA;EACD,GAAA;;EAnMoC,CAAvC,CAAA;;;;;;;ECGA,EAAA,MAAMxM,IAAI,GAAG8M,KAAK,CAAChN,UAAnB,CAAA;;IAEA,SAASiN,GAAT,CAAarI,GAAb,EAAkB;MAChB,IAAI,CAAC,IAAD,IAAS,IAAK1E,CAAAA,IAAL,CAAT,IAAuB,EAAE,IAAA,YAAgB+M,GAAlB,CAA3B,EAAmD;EACjD,MAAA,MAAM,IAAIlO,SAAJ,CAAc,uHAAd,CAAN,CAAA;EACD,KAAA;;EACD,IAAA,IAAImO,SAAS,CAACxf,MAAV,GAAmB,CAAvB,EAA0B;QACxB,MAAM,IAAIqR,SAAJ,CAAc,2DAAA,GAA8DmO,SAAS,CAACxf,MAAxE,GAAiF,WAA/F,CAAN,CAAA;EACD,KAAA;;MACD,MAAM6M,IAAI,GAAG,EAAb,CAAA;;EACA,IAAA,KAAK,IAAI3M,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGsf,SAAS,CAACxf,MAAd,IAAwBE,CAAC,GAAG,CAA5C,EAA+C,EAAEA,CAAjD,EAAoD;EAClD2M,MAAAA,IAAI,CAAC3M,CAAD,CAAJ,GAAUsf,SAAS,CAACtf,CAAD,CAAnB,CAAA;EACD,KAAA;;EACD2M,IAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUuD,GAAW,CAAC,WAAD,CAAX,CAAyBvD,IAAI,CAAC,CAAD,CAA7B,CAAV,CAAA;;EACA,IAAA,IAAIA,IAAI,CAAC,CAAD,CAAJ,KAAY2E,SAAhB,EAA2B;EAC3B3E,MAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUuD,GAAW,CAAC,WAAD,CAAX,CAAyBvD,IAAI,CAAC,CAAD,CAA7B,CAAV,CAAA;EACC,KAAA;;EAED9C,IAAAA,MAAM,CAACC,OAAP,CAAeyV,KAAf,CAAqB,IAArB,EAA2B5S,IAA3B,CAAA,CAAA;EACD,GAAA;;EAED0S,EAAAA,GAAG,CAAClZ,SAAJ,CAAcgZ,MAAd,GAAuB,SAASA,MAAT,GAAkB;EACvC,IAAA,IAAI,CAAC,IAAD,IAAS,CAACtV,MAAM,CAACC,OAAP,CAAe0V,EAAf,CAAkB,IAAlB,CAAd,EAAuC;EACrC,MAAA,MAAM,IAAIrO,SAAJ,CAAc,oBAAd,CAAN,CAAA;EACD,KAAA;;MACD,MAAMxE,IAAI,GAAG,EAAb,CAAA;;EACA,IAAA,KAAK,IAAI3M,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGsf,SAAS,CAACxf,MAAd,IAAwBE,CAAC,GAAG,CAA5C,EAA+C,EAAEA,CAAjD,EAAoD;EAClD2M,MAAAA,IAAI,CAAC3M,CAAD,CAAJ,GAAUsf,SAAS,CAACtf,CAAD,CAAnB,CAAA;EACD,KAAA;;EACD,IAAA,OAAO,IAAKsS,CAAAA,IAAL,CAAW6M,CAAAA,MAAX,CAAkBrL,KAAlB,CAAwB,IAAA,CAAKxB,IAAL,CAAxB,EAAoC3F,IAApC,CAAP,CAAA;KARF,CAAA;;IAUA9E,MAAM,CAACkB,cAAP,CAAsBsW,GAAG,CAAClZ,SAA1B,EAAqC,MAArC,EAA6C;EAC3CqE,IAAAA,GAAG,GAAG;QACJ,OAAO,IAAA,CAAK8H,IAAL,CAAA,CAAWwM,IAAlB,CAAA;OAFyC;;MAI3CzW,GAAG,CAACyI,CAAD,EAAI;EACLA,MAAAA,CAAC,GAAGZ,GAAW,CAAC,WAAD,CAAX,CAAyBY,CAAzB,CAAJ,CAAA;EACA,MAAA,IAAA,CAAKwB,IAAL,CAAA,CAAWwM,IAAX,GAAkBhO,CAAlB,CAAA;OANyC;;EAQ3ChI,IAAAA,UAAU,EAAE,IAR+B;EAS3C2W,IAAAA,YAAY,EAAE,IAAA;KAThB,CAAA,CAAA;;EAYAJ,EAAAA,GAAG,CAAClZ,SAAJ,CAAczG,QAAd,GAAyB,YAAY;EACnC,IAAA,IAAI,CAAC,IAAD,IAAS,CAACmK,MAAM,CAACC,OAAP,CAAe0V,EAAf,CAAkB,IAAlB,CAAd,EAAuC;EACrC,MAAA,MAAM,IAAIrO,SAAJ,CAAc,oBAAd,CAAN,CAAA;EACD,KAAA;;EACD,IAAA,OAAO,KAAK2N,IAAZ,CAAA;KAJF,CAAA;;IAOAjX,MAAM,CAACkB,cAAP,CAAsBsW,GAAG,CAAClZ,SAA1B,EAAqC,QAArC,EAA+C;EAC7CqE,IAAAA,GAAG,GAAG;QACJ,OAAO,IAAA,CAAK8H,IAAL,CAAA,CAAWyM,MAAlB,CAAA;OAF2C;;EAI7CjW,IAAAA,UAAU,EAAE,IAJiC;EAK7C2W,IAAAA,YAAY,EAAE,IAAA;KALhB,CAAA,CAAA;IAQA5X,MAAM,CAACkB,cAAP,CAAsBsW,GAAG,CAAClZ,SAA1B,EAAqC,UAArC,EAAiD;EAC/CqE,IAAAA,GAAG,GAAG;QACJ,OAAO,IAAA,CAAK8H,IAAL,CAAA,CAAW0M,QAAlB,CAAA;OAF6C;;MAI/C3W,GAAG,CAACyI,CAAD,EAAI;EACLA,MAAAA,CAAC,GAAGZ,GAAW,CAAC,WAAD,CAAX,CAAyBY,CAAzB,CAAJ,CAAA;EACA,MAAA,IAAA,CAAKwB,IAAL,CAAA,CAAW0M,QAAX,GAAsBlO,CAAtB,CAAA;OAN6C;;EAQ/ChI,IAAAA,UAAU,EAAE,IARmC;EAS/C2W,IAAAA,YAAY,EAAE,IAAA;KAThB,CAAA,CAAA;IAYA5X,MAAM,CAACkB,cAAP,CAAsBsW,GAAG,CAAClZ,SAA1B,EAAqC,UAArC,EAAiD;EAC/CqE,IAAAA,GAAG,GAAG;QACJ,OAAO,IAAA,CAAK8H,IAAL,CAAA,CAAW6I,QAAlB,CAAA;OAF6C;;MAI/C9S,GAAG,CAACyI,CAAD,EAAI;EACLA,MAAAA,CAAC,GAAGZ,GAAW,CAAC,WAAD,CAAX,CAAyBY,CAAzB,CAAJ,CAAA;EACA,MAAA,IAAA,CAAKwB,IAAL,CAAA,CAAW6I,QAAX,GAAsBrK,CAAtB,CAAA;OAN6C;;EAQ/ChI,IAAAA,UAAU,EAAE,IARmC;EAS/C2W,IAAAA,YAAY,EAAE,IAAA;KAThB,CAAA,CAAA;IAYA5X,MAAM,CAACkB,cAAP,CAAsBsW,GAAG,CAAClZ,SAA1B,EAAqC,UAArC,EAAiD;EAC/CqE,IAAAA,GAAG,GAAG;QACJ,OAAO,IAAA,CAAK8H,IAAL,CAAA,CAAW8I,QAAlB,CAAA;OAF6C;;MAI/C/S,GAAG,CAACyI,CAAD,EAAI;EACLA,MAAAA,CAAC,GAAGZ,GAAW,CAAC,WAAD,CAAX,CAAyBY,CAAzB,CAAJ,CAAA;EACA,MAAA,IAAA,CAAKwB,IAAL,CAAA,CAAW8I,QAAX,GAAsBtK,CAAtB,CAAA;OAN6C;;EAQ/ChI,IAAAA,UAAU,EAAE,IARmC;EAS/C2W,IAAAA,YAAY,EAAE,IAAA;KAThB,CAAA,CAAA;IAYA5X,MAAM,CAACkB,cAAP,CAAsBsW,GAAG,CAAClZ,SAA1B,EAAqC,MAArC,EAA6C;EAC3CqE,IAAAA,GAAG,GAAG;QACJ,OAAO,IAAA,CAAK8H,IAAL,CAAA,CAAWsI,IAAlB,CAAA;OAFyC;;MAI3CvS,GAAG,CAACyI,CAAD,EAAI;EACLA,MAAAA,CAAC,GAAGZ,GAAW,CAAC,WAAD,CAAX,CAAyBY,CAAzB,CAAJ,CAAA;EACA,MAAA,IAAA,CAAKwB,IAAL,CAAA,CAAWsI,IAAX,GAAkB9J,CAAlB,CAAA;OANyC;;EAQ3ChI,IAAAA,UAAU,EAAE,IAR+B;EAS3C2W,IAAAA,YAAY,EAAE,IAAA;KAThB,CAAA,CAAA;IAYA5X,MAAM,CAACkB,cAAP,CAAsBsW,GAAG,CAAClZ,SAA1B,EAAqC,UAArC,EAAiD;EAC/CqE,IAAAA,GAAG,GAAG;QACJ,OAAO,IAAA,CAAK8H,IAAL,CAAA,CAAW2M,QAAlB,CAAA;OAF6C;;MAI/C5W,GAAG,CAACyI,CAAD,EAAI;EACLA,MAAAA,CAAC,GAAGZ,GAAW,CAAC,WAAD,CAAX,CAAyBY,CAAzB,CAAJ,CAAA;EACA,MAAA,IAAA,CAAKwB,IAAL,CAAA,CAAW2M,QAAX,GAAsBnO,CAAtB,CAAA;OAN6C;;EAQ/ChI,IAAAA,UAAU,EAAE,IARmC;EAS/C2W,IAAAA,YAAY,EAAE,IAAA;KAThB,CAAA,CAAA;IAYA5X,MAAM,CAACkB,cAAP,CAAsBsW,GAAG,CAAClZ,SAA1B,EAAqC,MAArC,EAA6C;EAC3CqE,IAAAA,GAAG,GAAG;QACJ,OAAO,IAAA,CAAK8H,IAAL,CAAA,CAAWsJ,IAAlB,CAAA;OAFyC;;MAI3CvT,GAAG,CAACyI,CAAD,EAAI;EACLA,MAAAA,CAAC,GAAGZ,GAAW,CAAC,WAAD,CAAX,CAAyBY,CAAzB,CAAJ,CAAA;EACA,MAAA,IAAA,CAAKwB,IAAL,CAAA,CAAWsJ,IAAX,GAAkB9K,CAAlB,CAAA;OANyC;;EAQ3ChI,IAAAA,UAAU,EAAE,IAR+B;EAS3C2W,IAAAA,YAAY,EAAE,IAAA;KAThB,CAAA,CAAA;IAYA5X,MAAM,CAACkB,cAAP,CAAsBsW,GAAG,CAAClZ,SAA1B,EAAqC,UAArC,EAAiD;EAC/CqE,IAAAA,GAAG,GAAG;QACJ,OAAO,IAAA,CAAK8H,IAAL,CAAA,CAAW4M,QAAlB,CAAA;OAF6C;;MAI/C7W,GAAG,CAACyI,CAAD,EAAI;EACLA,MAAAA,CAAC,GAAGZ,GAAW,CAAC,WAAD,CAAX,CAAyBY,CAAzB,CAAJ,CAAA;EACA,MAAA,IAAA,CAAKwB,IAAL,CAAA,CAAW4M,QAAX,GAAsBpO,CAAtB,CAAA;OAN6C;;EAQ/ChI,IAAAA,UAAU,EAAE,IARmC;EAS/C2W,IAAAA,YAAY,EAAE,IAAA;KAThB,CAAA,CAAA;IAYA5X,MAAM,CAACkB,cAAP,CAAsBsW,GAAG,CAAClZ,SAA1B,EAAqC,QAArC,EAA+C;EAC7CqE,IAAAA,GAAG,GAAG;QACJ,OAAO,IAAA,CAAK8H,IAAL,CAAA,CAAW+B,MAAlB,CAAA;OAF2C;;MAI7ChM,GAAG,CAACyI,CAAD,EAAI;EACLA,MAAAA,CAAC,GAAGZ,GAAW,CAAC,WAAD,CAAX,CAAyBY,CAAzB,CAAJ,CAAA;EACA,MAAA,IAAA,CAAKwB,IAAL,CAAA,CAAW+B,MAAX,GAAoBvD,CAApB,CAAA;OAN2C;;EAQ7ChI,IAAAA,UAAU,EAAE,IARiC;EAS7C2W,IAAAA,YAAY,EAAE,IAAA;KAThB,CAAA,CAAA;IAYA5X,MAAM,CAACkB,cAAP,CAAsBsW,GAAG,CAAClZ,SAA1B,EAAqC,MAArC,EAA6C;EAC3CqE,IAAAA,GAAG,GAAG;QACJ,OAAO,IAAA,CAAK8H,IAAL,CAAA,CAAW5O,IAAlB,CAAA;OAFyC;;MAI3C2E,GAAG,CAACyI,CAAD,EAAI;EACLA,MAAAA,CAAC,GAAGZ,GAAW,CAAC,WAAD,CAAX,CAAyBY,CAAzB,CAAJ,CAAA;EACA,MAAA,IAAA,CAAKwB,IAAL,CAAA,CAAW5O,IAAX,GAAkBoN,CAAlB,CAAA;OANyC;;EAQ3ChI,IAAAA,UAAU,EAAE,IAR+B;EAS3C2W,IAAAA,YAAY,EAAE,IAAA;KAThB,CAAA,CAAA;IAaA5V,MAAiB,CAAAC,OAAjB,GAAiB;MACf0V,EAAE,CAACha,GAAD,EAAM;QACN,OAAO,CAAC,CAACA,GAAF,IAASA,GAAG,CAAC8M,IAAD,CAAH,YAAqBoN,SAAI,CAAClB,cAA1C,CAAA;OAFa;;EAIf1W,IAAAA,MAAM,CAAC4W,eAAD,EAAkBiB,WAAlB,EAA+B;QACnC,IAAIna,GAAG,GAAGqC,MAAM,CAACC,MAAP,CAAcuX,GAAG,CAAClZ,SAAlB,CAAV,CAAA;EACA,MAAA,IAAA,CAAKoZ,KAAL,CAAW/Z,GAAX,EAAgBkZ,eAAhB,EAAiCiB,WAAjC,CAAA,CAAA;EACA,MAAA,OAAOna,GAAP,CAAA;OAPa;;EASf+Z,IAAAA,KAAK,CAAC/Z,GAAD,EAAMkZ,eAAN,EAAuBiB,WAAvB,EAAoC;EACvC,MAAA,IAAI,CAACA,WAAL,EAAkBA,WAAW,GAAG,EAAd,CAAA;QAClBA,WAAW,CAACnN,OAAZ,GAAsBhN,GAAtB,CAAA;EAEAA,MAAAA,GAAG,CAAC8M,IAAD,CAAH,GAAY,IAAIoN,SAAI,CAAClB,cAAT,CAAwBE,eAAxB,EAAyCiB,WAAzC,CAAZ,CAAA;QACAna,GAAG,CAAC8M,IAAD,CAAH,CAAU8M,KAAK,CAAClN,aAAhB,IAAiC1M,GAAjC,CAAA;OAda;;EAgBfoa,IAAAA,SAAS,EAAEP,GAhBI;EAiBfQ,IAAAA,MAAM,EAAE;EACNC,MAAAA,MAAM,EAAE;EAAET,QAAAA,GAAG,EAAEA,GAAAA;SADT;EAENU,MAAAA,MAAM,EAAE;EAAEV,QAAAA,GAAG,EAAEA,GAAAA;EAAP,OAAA;EAFF,KAAA;KAjBV,CAAA;;;EC3KA,IAAAA,KAAW,GAAGjV,KAAgB,CAACwV,SAA/B,CAAA;EACA,IAAAjC,YAAoB,GAAGtT,eAA8B,CAACsT,YAAtD,CAAA;EACA,IAAAI,kBAA0B,GAAG1T,eAA8B,CAAC0T,kBAA5D,CAAA;EACA,IAAAE,aAAqB,GAAG5T,eAA8B,CAAC4T,aAAvD,CAAA;EACA,IAAAG,cAAsB,GAAG/T,eAA8B,CAAC+T,cAAxD,CAAA;EACA,IAAAC,cAAsB,GAAGhU,eAA8B,CAACgU,cAAxD,CAAA;EACA,IAAA1D,aAAqB,GAAGtQ,eAA8B,CAACsQ,aAAvD,CAAA;EACA,IAAA2D,gBAAwB,GAAGjU,eAA8B,CAACiU,gBAA1D,CAAA;EACA,IAAgBN,UAAA,GAAG3T,eAA8B,CAAC2T,QAAlD,CAAA;;;;;;;;;;;;;ECDA;;EACA,MAAMgC,QAAQ,GAAGC,0BAAM,CAACD,QAAxB,CAAA;EAEA,MAAME,MAAM,GAAG/N,MAAM,CAAC,QAAD,CAArB,CAAA;EACA,MAAMgO,IAAI,GAAGhO,MAAM,CAAC,MAAD,CAAnB,CAAA;;EAEA,MAAMiO,IAAN,CAAW;EACVjf,EAAAA,WAAW,GAAG;MACb,IAAKgf,CAAAA,IAAL,IAAa,EAAb,CAAA;EAEA,IAAA,MAAME,SAAS,GAAGf,SAAS,CAAC,CAAD,CAA3B,CAAA;EACA,IAAA,MAAM/U,OAAO,GAAG+U,SAAS,CAAC,CAAD,CAAzB,CAAA;MAEA,MAAMgB,OAAO,GAAG,EAAhB,CAAA;;EAGA,IAAA,IAAID,SAAJ,EAAe;QACd,MAAMtO,CAAC,GAAGsO,SAAV,CAAA;EACA,MAAA,MAAMvgB,MAAM,GAAGmR,MAAM,CAACc,CAAC,CAACjS,MAAH,CAArB,CAAA;;QACA,KAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAApB,EAA4BE,CAAC,EAA7B,EAAiC;EAChC,QAAA,MAAMugB,OAAO,GAAGxO,CAAC,CAAC/R,CAAD,CAAjB,CAAA;EACA,QAAA,IAAImW,MAAJ,CAAA;;UACA,IAAIoK,OAAO,YAAY/Z,MAAvB,EAA+B;EAC9B2P,UAAAA,MAAM,GAAGoK,OAAT,CAAA;WADD,MAEO,IAAIC,WAAW,CAACC,MAAZ,CAAmBF,OAAnB,CAAJ,EAAiC;EACvCpK,UAAAA,MAAM,GAAG3P,MAAM,CAACka,IAAP,CAAYH,OAAO,CAACpK,MAApB,EAA4BoK,OAAO,CAACI,UAApC,EAAgDJ,OAAO,CAACK,UAAxD,CAAT,CAAA;EACA,SAFM,MAEA,IAAIL,OAAO,YAAYC,WAAvB,EAAoC;EAC1CrK,UAAAA,MAAM,GAAG3P,MAAM,CAACka,IAAP,CAAYH,OAAZ,CAAT,CAAA;EACA,SAFM,MAEA,IAAIA,OAAO,YAAYH,IAAvB,EAA6B;EACnCjK,UAAAA,MAAM,GAAGoK,OAAO,CAACL,MAAD,CAAhB,CAAA;EACA,SAFM,MAEA;EACN/J,UAAAA,MAAM,GAAG3P,MAAM,CAACka,IAAP,CAAY,OAAOH,OAAP,KAAmB,QAAnB,GAA8BA,OAA9B,GAAwC/O,MAAM,CAAC+O,OAAD,CAA1D,CAAT,CAAA;EACA,SAAA;UAEDD,OAAO,CAAChd,IAAR,CAAa6S,MAAb,CAAA,CAAA;EACA,OAAA;EACD,KAAA;;EAED,IAAA,IAAA,CAAK+J,MAAL,CAAe1Z,GAAAA,MAAM,CAACqa,MAAP,CAAcP,OAAd,CAAf,CAAA;EAEA,IAAA,IAAI7a,IAAI,GAAG8E,OAAO,IAAIA,OAAO,CAAC9E,IAAR,KAAiB6L,SAA5B,IAAyCE,MAAM,CAACjH,OAAO,CAAC9E,IAAT,CAAN,CAAqB2Q,WAArB,EAApD,CAAA;;MACA,IAAI3Q,IAAI,IAAI,CAAC,kBAAA,CAAmB8S,IAAnB,CAAwB9S,IAAxB,CAAb,EAA4C;QAC3C,IAAK0a,CAAAA,IAAL,IAAa1a,IAAb,CAAA;EACA,KAAA;EACD,GAAA;;EACO,EAAA,IAAJqb,IAAI,GAAG;MACV,OAAO,IAAA,CAAKZ,MAAL,CAAA,CAAapgB,MAApB,CAAA;EACA,GAAA;;EACO,EAAA,IAAJ2F,IAAI,GAAG;MACV,OAAO,IAAA,CAAK0a,IAAL,CAAP,CAAA;EACA,GAAA;;EACDY,EAAAA,IAAI,GAAG;MACN,OAAOhb,OAAO,CAACc,OAAR,CAAgB,KAAKqZ,MAAL,CAAA,CAAaxgB,QAAb,EAAhB,CAAP,CAAA;EACA,GAAA;;EACDshB,EAAAA,WAAW,GAAG;EACb,IAAA,MAAM1J,GAAG,GAAG,IAAK4I,CAAAA,MAAL,CAAZ,CAAA;EACA,IAAA,MAAMe,EAAE,GAAG3J,GAAG,CAACnB,MAAJ,CAAW1S,KAAX,CAAiB6T,GAAG,CAACqJ,UAArB,EAAiCrJ,GAAG,CAACqJ,UAAJ,GAAiBrJ,GAAG,CAACsJ,UAAtD,CAAX,CAAA;EACA,IAAA,OAAO7a,OAAO,CAACc,OAAR,CAAgBoa,EAAhB,CAAP,CAAA;EACA,GAAA;;EACDC,EAAAA,MAAM,GAAG;EACR,IAAA,MAAMC,QAAQ,GAAG,IAAInB,QAAJ,EAAjB,CAAA;;EACAmB,IAAAA,QAAQ,CAACC,KAAT,GAAiB,YAAY,EAA7B,CAAA;;EACAD,IAAAA,QAAQ,CAAC7d,IAAT,CAAc,IAAA,CAAK4c,MAAL,CAAd,CAAA,CAAA;MACAiB,QAAQ,CAAC7d,IAAT,CAAc,IAAd,CAAA,CAAA;EACA,IAAA,OAAO6d,QAAP,CAAA;EACA,GAAA;;EACDzhB,EAAAA,QAAQ,GAAG;EACV,IAAA,OAAO,eAAP,CAAA;EACA,GAAA;;EACD+D,EAAAA,KAAK,GAAG;MACP,MAAMqd,IAAI,GAAG,IAAA,CAAKA,IAAlB,CAAA;EAEA,IAAA,MAAMjc,KAAK,GAAGya,SAAS,CAAC,CAAD,CAAvB,CAAA;EACA,IAAA,MAAMxa,GAAG,GAAGwa,SAAS,CAAC,CAAD,CAArB,CAAA;MACA,IAAI+B,aAAJ,EAAmBC,WAAnB,CAAA;;MACA,IAAIzc,KAAK,KAAKyM,SAAd,EAAyB;EACxB+P,MAAAA,aAAa,GAAG,CAAhB,CAAA;EACA,KAFD,MAEO,IAAIxc,KAAK,GAAG,CAAZ,EAAe;QACrBwc,aAAa,GAAGnhB,IAAI,CAACO,GAAL,CAASqgB,IAAI,GAAGjc,KAAhB,EAAuB,CAAvB,CAAhB,CAAA;EACA,KAFM,MAEA;QACNwc,aAAa,GAAGnhB,IAAI,CAACQ,GAAL,CAASmE,KAAT,EAAgBic,IAAhB,CAAhB,CAAA;EACA,KAAA;;MACD,IAAIhc,GAAG,KAAKwM,SAAZ,EAAuB;EACtBgQ,MAAAA,WAAW,GAAGR,IAAd,CAAA;EACA,KAFD,MAEO,IAAIhc,GAAG,GAAG,CAAV,EAAa;QACnBwc,WAAW,GAAGphB,IAAI,CAACO,GAAL,CAASqgB,IAAI,GAAGhc,GAAhB,EAAqB,CAArB,CAAd,CAAA;EACA,KAFM,MAEA;QACNwc,WAAW,GAAGphB,IAAI,CAACQ,GAAL,CAASoE,GAAT,EAAcgc,IAAd,CAAd,CAAA;EACA,KAAA;;MACD,MAAMS,IAAI,GAAGrhB,IAAI,CAACO,GAAL,CAAS6gB,WAAW,GAAGD,aAAvB,EAAsC,CAAtC,CAAb,CAAA;EAEA,IAAA,MAAMlL,MAAM,GAAG,IAAK+J,CAAAA,MAAL,CAAf,CAAA;MACA,MAAMsB,YAAY,GAAGrL,MAAM,CAAC1S,KAAP,CAAa4d,aAAb,EAA4BA,aAAa,GAAGE,IAA5C,CAArB,CAAA;EACA,IAAA,MAAME,IAAI,GAAG,IAAIrB,IAAJ,CAAS,EAAT,EAAa;QAAE3a,IAAI,EAAE6Z,SAAS,CAAC,CAAD,CAAA;EAAjB,KAAb,CAAb,CAAA;EACAmC,IAAAA,IAAI,CAACvB,MAAD,CAAJ,GAAesB,YAAf,CAAA;EACA,IAAA,OAAOC,IAAP,CAAA;EACA,GAAA;;EA1FS,CAAA;;EA6FX5Z,MAAM,CAAC6Z,gBAAP,CAAwBtB,IAAI,CAACja,SAA7B,EAAwC;EACvC2a,EAAAA,IAAI,EAAE;EAAEhY,IAAAA,UAAU,EAAE,IAAA;KADmB;EAEvCrD,EAAAA,IAAI,EAAE;EAAEqD,IAAAA,UAAU,EAAE,IAAA;KAFmB;EAGvCrF,EAAAA,KAAK,EAAE;EAAEqF,IAAAA,UAAU,EAAE,IAAA;EAAd,GAAA;EAHgC,CAAxC,CAAA,CAAA;EAMAjB,MAAM,CAACkB,cAAP,CAAsBqX,IAAI,CAACja,SAA3B,EAAsCgM,MAAM,CAACwP,WAA7C,EAA0D;EACzDrhB,EAAAA,KAAK,EAAE,MADkD;EAEzDshB,EAAAA,QAAQ,EAAE,KAF+C;EAGzD9Y,EAAAA,UAAU,EAAE,KAH6C;EAIzD2W,EAAAA,YAAY,EAAE,IAAA;EAJ2C,CAA1D,CAAA,CAAA;EAOA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EACA,SAASoC,UAAT,CAAoBzgB,OAApB,EAA6BqE,IAA7B,EAAmCqc,WAAnC,EAAgD;EAC9C5gB,EAAAA,KAAK,CAACqI,IAAN,CAAW,IAAX,EAAiBnI,OAAjB,CAAA,CAAA;IAEA,IAAKA,CAAAA,OAAL,GAAeA,OAAf,CAAA;EACA,EAAA,IAAA,CAAKqE,IAAL,GAAYA,IAAZ,CAJ8C;;EAO9C,EAAA,IAAIqc,WAAJ,EAAiB;EACf,IAAA,IAAA,CAAKC,IAAL,GAAY,IAAA,CAAKC,KAAL,GAAaF,WAAW,CAACC,IAArC,CAAA;EACD,GAT6C;;;EAY9C7gB,EAAAA,KAAK,CAAC+gB,iBAAN,CAAwB,IAAxB,EAA8B,KAAK9gB,WAAnC,CAAA,CAAA;EACD,CAAA;;EAED0gB,UAAU,CAAC1b,SAAX,GAAuB0B,MAAM,CAACC,MAAP,CAAc5G,KAAK,CAACiF,SAApB,CAAvB,CAAA;EACA0b,UAAU,CAAC1b,SAAX,CAAqBhF,WAArB,GAAmC0gB,UAAnC,CAAA;EACAA,UAAU,CAAC1b,SAAX,CAAqB9E,IAArB,GAA4B,YAA5B,CAAA;EAEA,IAAI6gB,OAAJ,CAAA;;EACA,IAAI;EACHA,EAAAA,OAAO,GAAGC,OAAO,CAAC,UAAD,CAAP,CAAoBD,OAA9B,CAAA;EACA,CAFD,CAEE,OAAOzN,CAAP,EAAU,EAAE;;EAEd,MAAM2N,SAAS,GAAGjQ,MAAM,CAAC,gBAAD,CAAxB;;EAGA,MAAMkQ,WAAW,GAAGpC,0BAAM,CAACoC,WAA3B,CAAA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EACA,SAASC,IAAT,CAAcC,IAAd,EAAoB;IACnB,IAAIC,KAAK,GAAG,IAAZ,CAAA;;IAEA,IAAIC,IAAI,GAAGnD,SAAS,CAACxf,MAAV,GAAmB,CAAnB,IAAwBwf,SAAS,CAAC,CAAD,CAAT,KAAiBhO,SAAzC,GAAqDgO,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAA/E;EAAA,MACIoD,SAAS,GAAGD,IAAI,CAAC3B,IADrB,CAAA;;IAGA,IAAIA,IAAI,GAAG4B,SAAS,KAAKpR,SAAd,GAA0B,CAA1B,GAA8BoR,SAAzC,CAAA;EACA,EAAA,IAAIC,YAAY,GAAGF,IAAI,CAACG,OAAxB,CAAA;IACA,IAAIA,OAAO,GAAGD,YAAY,KAAKrR,SAAjB,GAA6B,CAA7B,GAAiCqR,YAA/C,CAAA;;IAEA,IAAIJ,IAAI,IAAI,IAAZ,EAAkB;EACjB;EACAA,IAAAA,IAAI,GAAG,IAAP,CAAA;EACA,GAHD,MAGO,IAAIM,iBAAiB,CAACN,IAAD,CAArB,EAA6B;EACnC;MACAA,IAAI,GAAG/b,MAAM,CAACka,IAAP,CAAY6B,IAAI,CAAC7iB,QAAL,EAAZ,CAAP,CAAA;EACA,GAHM,MAGA,IAAIojB,MAAM,CAACP,IAAD,CAAV,EAAkB,CAAlB,KAAyB,IAAI/b,MAAM,CAACkB,QAAP,CAAgB6a,IAAhB,CAAJ,EAA2B,CAA3B,KAAkC,IAAI1a,MAAM,CAAC1B,SAAP,CAAiBzG,QAAjB,CAA0B6J,IAA1B,CAA+BgZ,IAA/B,CAAA,KAAyC,sBAA7C,EAAqE;EACtI;EACAA,IAAAA,IAAI,GAAG/b,MAAM,CAACka,IAAP,CAAY6B,IAAZ,CAAP,CAAA;KAFiE,MAG3D,IAAI/B,WAAW,CAACC,MAAZ,CAAmB8B,IAAnB,CAAJ,EAA8B;EACpC;EACAA,IAAAA,IAAI,GAAG/b,MAAM,CAACka,IAAP,CAAY6B,IAAI,CAACpM,MAAjB,EAAyBoM,IAAI,CAAC5B,UAA9B,EAA0C4B,IAAI,CAAC3B,UAA/C,CAAP,CAAA;EACA,GAHM,MAGA,IAAI2B,IAAI,YAAYtC,0BAApB,EAA4B,CAA5B,KAAmC;EACzC;EACA;MACAsC,IAAI,GAAG/b,MAAM,CAACka,IAAP,CAAYlP,MAAM,CAAC+Q,IAAD,CAAlB,CAAP,CAAA;EACA,GAAA;;EACD,EAAA,IAAA,CAAKH,SAAL,CAAkB,GAAA;MACjBG,IADiB;EAEjBQ,IAAAA,SAAS,EAAE,KAFM;EAGjB/d,IAAAA,KAAK,EAAE,IAAA;KAHR,CAAA;IAKA,IAAK8b,CAAAA,IAAL,GAAYA,IAAZ,CAAA;IACA,IAAK8B,CAAAA,OAAL,GAAeA,OAAf,CAAA;;IAEA,IAAIL,IAAI,YAAYtC,0BAApB,EAA4B;EAC3BsC,IAAAA,IAAI,CAACS,EAAL,CAAQ,OAAR,EAAiB,UAAUhc,GAAV,EAAe;QAC/B,MAAMhC,KAAK,GAAGgC,GAAG,CAAC3F,IAAJ,KAAa,YAAb,GAA4B2F,GAA5B,GAAkC,IAAI6a,UAAJ,CAAgB,+CAA8CW,KAAK,CAACxL,GAAI,CAAA,EAAA,EAAIhQ,GAAG,CAAC5F,OAAQ,CAAA,CAAxF,EAA2F,QAA3F,EAAqG4F,GAArG,CAAhD,CAAA;EACAwb,MAAAA,KAAK,CAACJ,SAAD,CAAL,CAAiBpd,KAAjB,GAAyBA,KAAzB,CAAA;OAFD,CAAA,CAAA;EAIA,GAAA;EACD,CAAA;;EAEDsd,IAAI,CAACnc,SAAL,GAAiB;EAChB,EAAA,IAAIoc,IAAJ,GAAW;MACV,OAAO,IAAA,CAAKH,SAAL,CAAA,CAAgBG,IAAvB,CAAA;KAFe;;EAKhB,EAAA,IAAIU,QAAJ,GAAe;MACd,OAAO,IAAA,CAAKb,SAAL,CAAA,CAAgBW,SAAvB,CAAA;KANe;;EAShB;EACD;EACA;EACA;EACA;EACC/B,EAAAA,WAAW,GAAG;MACb,OAAOkC,WAAW,CAAC3Z,IAAZ,CAAiB,IAAjB,EAAuBxC,IAAvB,CAA4B,UAAUuQ,GAAV,EAAe;EACjD,MAAA,OAAOA,GAAG,CAACnB,MAAJ,CAAW1S,KAAX,CAAiB6T,GAAG,CAACqJ,UAArB,EAAiCrJ,GAAG,CAACqJ,UAAJ,GAAiBrJ,GAAG,CAACsJ,UAAtD,CAAP,CAAA;EACA,KAFM,CAAP,CAAA;KAfe;;EAoBhB;EACD;EACA;EACA;EACA;EACCa,EAAAA,IAAI,GAAG;EACN,IAAA,IAAI0B,EAAE,GAAG,IAAKC,CAAAA,OAAL,IAAgB,IAAA,CAAKA,OAAL,CAAa5Y,GAAb,CAAiB,cAAjB,CAAhB,IAAoD,EAA7D,CAAA;MACA,OAAO0Y,WAAW,CAAC3Z,IAAZ,CAAiB,IAAjB,EAAuBxC,IAAvB,CAA4B,UAAUuQ,GAAV,EAAe;QACjD,OAAOzP,MAAM,CAACgE,MAAP;QAEP,IAAIuU,IAAJ,CAAS,EAAT,EAAa;UACZ3a,IAAI,EAAE0d,EAAE,CAAC/M,WAAH,EAAA;EADM,OAAb,CAFO,EAIH;EACH,QAAA,CAAC8J,MAAD,GAAU5I,GAAAA;EADP,OAJG,CAAP,CAAA;EAOA,KARM,CAAP,CAAA;KA3Be;;EAsChB;EACD;EACA;EACA;EACA;EACC+L,EAAAA,IAAI,GAAG;MACN,IAAIC,MAAM,GAAG,IAAb,CAAA;;MAEA,OAAOJ,WAAW,CAAC3Z,IAAZ,CAAiB,IAAjB,EAAuBxC,IAAvB,CAA4B,UAAUoP,MAAV,EAAkB;QACpD,IAAI;UACH,OAAOrI,IAAI,CAACyV,KAAL,CAAWpN,MAAM,CAACzW,QAAP,EAAX,CAAP,CAAA;SADD,CAEE,OAAOsH,GAAP,EAAY;UACb,OAAOsb,IAAI,CAACvc,OAAL,CAAae,MAAb,CAAoB,IAAI+a,UAAJ,CAAgB,CAAA,8BAAA,EAAgCyB,MAAM,CAACtM,GAAI,YAAWhQ,GAAG,CAAC5F,OAAQ,CAAlF,CAAA,EAAqF,cAArF,CAApB,CAAP,CAAA;EACA,OAAA;EACD,KANM,CAAP,CAAA;KA9Ce;;EAuDhB;EACD;EACA;EACA;EACA;EACC2f,EAAAA,IAAI,GAAG;MACN,OAAOmC,WAAW,CAAC3Z,IAAZ,CAAiB,IAAjB,EAAuBxC,IAAvB,CAA4B,UAAUoP,MAAV,EAAkB;QACpD,OAAOA,MAAM,CAACzW,QAAP,EAAP,CAAA;EACA,KAFM,CAAP,CAAA;KA7De;;EAkEhB;EACD;EACA;EACA;EACA;EACCyW,EAAAA,MAAM,GAAG;EACR,IAAA,OAAO+M,WAAW,CAAC3Z,IAAZ,CAAiB,IAAjB,CAAP,CAAA;KAxEe;;EA2EhB;EACD;EACA;EACA;EACA;EACA;EACCia,EAAAA,aAAa,GAAG;MACf,IAAIC,MAAM,GAAG,IAAb,CAAA;;MAEA,OAAOP,WAAW,CAAC3Z,IAAZ,CAAiB,IAAjB,EAAuBxC,IAAvB,CAA4B,UAAUoP,MAAV,EAAkB;EACpD,MAAA,OAAOuN,WAAW,CAACvN,MAAD,EAASsN,MAAM,CAACL,OAAhB,CAAlB,CAAA;EACA,KAFM,CAAP,CAAA;EAGA,GAAA;;EAvFe,CAAjB;;EA2FAvb,MAAM,CAAC6Z,gBAAP,CAAwBY,IAAI,CAACnc,SAA7B,EAAwC;EACvCoc,EAAAA,IAAI,EAAE;EAAEzZ,IAAAA,UAAU,EAAE,IAAA;KADmB;EAEvCma,EAAAA,QAAQ,EAAE;EAAEna,IAAAA,UAAU,EAAE,IAAA;KAFe;EAGvCkY,EAAAA,WAAW,EAAE;EAAElY,IAAAA,UAAU,EAAE,IAAA;KAHY;EAIvC2Y,EAAAA,IAAI,EAAE;EAAE3Y,IAAAA,UAAU,EAAE,IAAA;KAJmB;EAKvCua,EAAAA,IAAI,EAAE;EAAEva,IAAAA,UAAU,EAAE,IAAA;KALmB;EAMvCiY,EAAAA,IAAI,EAAE;EAAEjY,IAAAA,UAAU,EAAE,IAAA;EAAd,GAAA;EANiC,CAAxC,CAAA,CAAA;;EASAwZ,IAAI,CAACqB,KAAL,GAAa,UAAU/c,KAAV,EAAiB;IAC7B,KAAK,MAAMvF,IAAX,IAAmBwG,MAAM,CAACoB,mBAAP,CAA2BqZ,IAAI,CAACnc,SAAhC,CAAnB,EAA+D;EAC9D;EACA,IAAA,IAAI,EAAE9E,IAAI,IAAIuF,KAAV,CAAJ,EAAsB;QACrB,MAAMgd,IAAI,GAAG/b,MAAM,CAACY,wBAAP,CAAgC6Z,IAAI,CAACnc,SAArC,EAAgD9E,IAAhD,CAAb,CAAA;EACAwG,MAAAA,MAAM,CAACkB,cAAP,CAAsBnC,KAAtB,EAA6BvF,IAA7B,EAAmCuiB,IAAnC,CAAA,CAAA;EACA,KAAA;EACD,GAAA;EACD,CARD,CAAA;EAUA;EACA;EACA;EACA;EACA;EACA;EACA;;;EACA,SAASV,WAAT,GAAuB;IACtB,IAAIW,MAAM,GAAG,IAAb,CAAA;;EAEA,EAAA,IAAI,IAAKzB,CAAAA,SAAL,CAAgBW,CAAAA,SAApB,EAA+B;EAC9B,IAAA,OAAOT,IAAI,CAACvc,OAAL,CAAae,MAAb,CAAoB,IAAIqK,SAAJ,CAAe,CAAyB,uBAAA,EAAA,IAAA,CAAK6F,GAAI,CAAA,CAAjD,CAApB,CAAP,CAAA;EACA,GAAA;;EAED,EAAA,IAAA,CAAKoL,SAAL,CAAA,CAAgBW,SAAhB,GAA4B,IAA5B,CAAA;;EAEA,EAAA,IAAI,IAAKX,CAAAA,SAAL,CAAgBpd,CAAAA,KAApB,EAA2B;MAC1B,OAAOsd,IAAI,CAACvc,OAAL,CAAae,MAAb,CAAoB,IAAKsb,CAAAA,SAAL,CAAgBpd,CAAAA,KAApC,CAAP,CAAA;EACA,GAAA;;EAED,EAAA,IAAIud,IAAI,GAAG,IAAKA,CAAAA,IAAhB,CAbsB;;IAgBtB,IAAIA,IAAI,KAAK,IAAb,EAAmB;EAClB,IAAA,OAAOD,IAAI,CAACvc,OAAL,CAAac,OAAb,CAAqBL,MAAM,CAACsd,KAAP,CAAa,CAAb,CAArB,CAAP,CAAA;EACA,GAlBqB;;;EAqBtB,EAAA,IAAIhB,MAAM,CAACP,IAAD,CAAV,EAAkB;EACjBA,IAAAA,IAAI,GAAGA,IAAI,CAACrB,MAAL,EAAP,CAAA;EACA,GAvBqB;;;EA0BtB,EAAA,IAAI1a,MAAM,CAACkB,QAAP,CAAgB6a,IAAhB,CAAJ,EAA2B;EAC1B,IAAA,OAAOD,IAAI,CAACvc,OAAL,CAAac,OAAb,CAAqB0b,IAArB,CAAP,CAAA;EACA,GA5BqB;;;EA+BtB,EAAA,IAAI,EAAEA,IAAI,YAAYtC,0BAAlB,CAAJ,EAA+B;EAC9B,IAAA,OAAOqC,IAAI,CAACvc,OAAL,CAAac,OAAb,CAAqBL,MAAM,CAACsd,KAAP,CAAa,CAAb,CAArB,CAAP,CAAA;EACA,GAjCqB;EAoCtB;;;IACA,IAAIC,KAAK,GAAG,EAAZ,CAAA;IACA,IAAIC,UAAU,GAAG,CAAjB,CAAA;IACA,IAAIC,KAAK,GAAG,KAAZ,CAAA;IAEA,OAAO,IAAI3B,IAAI,CAACvc,OAAT,CAAiB,UAAUc,OAAV,EAAmBC,MAAnB,EAA2B;MAClD,IAAIod,UAAJ,CADkD;;MAIlD,IAAIL,MAAM,CAACjB,OAAX,EAAoB;QACnBsB,UAAU,GAAGnV,UAAU,CAAC,YAAY;EACnCkV,QAAAA,KAAK,GAAG,IAAR,CAAA;EACAnd,QAAAA,MAAM,CAAC,IAAI+a,UAAJ,CAAgB,CAAA,uCAAA,EAAyCgC,MAAM,CAAC7M,GAAI,CAAS6M,OAAAA,EAAAA,MAAM,CAACjB,OAAQ,CAAA,GAAA,CAA5F,EAAkG,cAAlG,CAAD,CAAN,CAAA;EACA,OAHsB,EAGpBiB,MAAM,CAACjB,OAHa,CAAvB,CAAA;EAIA,KATiD;;;EAYlDL,IAAAA,IAAI,CAACS,EAAL,CAAQ,OAAR,EAAiB,UAAUhc,GAAV,EAAe;EAC/B,MAAA,IAAIA,GAAG,CAAC3F,IAAJ,KAAa,YAAjB,EAA+B;EAC9B;EACA4iB,QAAAA,KAAK,GAAG,IAAR,CAAA;UACAnd,MAAM,CAACE,GAAD,CAAN,CAAA;EACA,OAJD,MAIO;EACN;EACAF,QAAAA,MAAM,CAAC,IAAI+a,UAAJ,CAAgB,CAA8CgC,4CAAAA,EAAAA,MAAM,CAAC7M,GAAI,CAAA,EAAA,EAAIhQ,GAAG,CAAC5F,OAAQ,CAAzF,CAAA,EAA4F,QAA5F,EAAsG4F,GAAtG,CAAD,CAAN,CAAA;EACA,OAAA;OARF,CAAA,CAAA;EAWAub,IAAAA,IAAI,CAACS,EAAL,CAAQ,MAAR,EAAgB,UAAUmB,KAAV,EAAiB;EAChC,MAAA,IAAIF,KAAK,IAAIE,KAAK,KAAK,IAAvB,EAA6B;EAC5B,QAAA,OAAA;EACA,OAAA;;EAED,MAAA,IAAIN,MAAM,CAAC/C,IAAP,IAAekD,UAAU,GAAGG,KAAK,CAACrkB,MAAnB,GAA4B+jB,MAAM,CAAC/C,IAAtD,EAA4D;EAC3DmD,QAAAA,KAAK,GAAG,IAAR,CAAA;EACAnd,QAAAA,MAAM,CAAC,IAAI+a,UAAJ,CAAgB,CAAA,gBAAA,EAAkBgC,MAAM,CAAC7M,GAAI,CAAe6M,aAAAA,EAAAA,MAAM,CAAC/C,IAAK,CAAA,CAAxE,EAA2E,UAA3E,CAAD,CAAN,CAAA;EACA,QAAA,OAAA;EACA,OAAA;;QAEDkD,UAAU,IAAIG,KAAK,CAACrkB,MAApB,CAAA;QACAikB,KAAK,CAACzgB,IAAN,CAAW6gB,KAAX,CAAA,CAAA;OAZD,CAAA,CAAA;EAeA5B,IAAAA,IAAI,CAACS,EAAL,CAAQ,KAAR,EAAe,YAAY;EAC1B,MAAA,IAAIiB,KAAJ,EAAW;EACV,QAAA,OAAA;EACA,OAAA;;QAEDhV,YAAY,CAACiV,UAAD,CAAZ,CAAA;;QAEA,IAAI;UACHrd,OAAO,CAACL,MAAM,CAACqa,MAAP,CAAckD,KAAd,EAAqBC,UAArB,CAAD,CAAP,CAAA;SADD,CAEE,OAAOhd,GAAP,EAAY;EACb;EACAF,QAAAA,MAAM,CAAC,IAAI+a,UAAJ,CAAgB,CAAiDgC,+CAAAA,EAAAA,MAAM,CAAC7M,GAAI,CAAA,EAAA,EAAIhQ,GAAG,CAAC5F,OAAQ,CAA5F,CAAA,EAA+F,QAA/F,EAAyG4F,GAAzG,CAAD,CAAN,CAAA;EACA,OAAA;OAZF,CAAA,CAAA;EAcA,GApDM,CAAP,CAAA;EAqDA,CAAA;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EACA,SAAS0c,WAAT,CAAqBvN,MAArB,EAA6BiN,OAA7B,EAAsC;EACrC,EAAA,IAAI,OAAOlB,OAAP,KAAmB,UAAvB,EAAmC;EAClC,IAAA,MAAM,IAAIhhB,KAAJ,CAAU,8EAAV,CAAN,CAAA;EACA,GAAA;;EAED,EAAA,MAAMiiB,EAAE,GAAGC,OAAO,CAAC5Y,GAAR,CAAY,cAAZ,CAAX,CAAA;IACA,IAAI4Z,OAAO,GAAG,OAAd,CAAA;EACA,EAAA,IAAItX,GAAJ,EAAS+F,GAAT,CAPqC;;EAUrC,EAAA,IAAIsQ,EAAJ,EAAQ;EACPrW,IAAAA,GAAG,GAAG,kBAAA,CAAmBuX,IAAnB,CAAwBlB,EAAxB,CAAN,CAAA;EACA,GAZoC;;;EAerCtQ,EAAAA,GAAG,GAAGsD,MAAM,CAAC1S,KAAP,CAAa,CAAb,EAAgB,IAAhB,CAAsB/D,CAAAA,QAAtB,EAAN,CAfqC;;EAkBrC,EAAA,IAAI,CAACoN,GAAD,IAAQ+F,GAAZ,EAAiB;EAChB/F,IAAAA,GAAG,GAAG,gCAAA,CAAiCuX,IAAjC,CAAsCxR,GAAtC,CAAN,CAAA;EACA,GApBoC;;;EAuBrC,EAAA,IAAI,CAAC/F,GAAD,IAAQ+F,GAAZ,EAAiB;EAChB/F,IAAAA,GAAG,GAAG,wEAAA,CAAyEuX,IAAzE,CAA8ExR,GAA9E,CAAN,CAAA;;MACA,IAAI,CAAC/F,GAAL,EAAU;EACTA,MAAAA,GAAG,GAAG,wEAAA,CAAyEuX,IAAzE,CAA8ExR,GAA9E,CAAN,CAAA;;EACA,MAAA,IAAI/F,GAAJ,EAAS;UACRA,GAAG,CAAC4L,GAAJ,EAAA,CADQ;EAER,OAAA;EACD,KAAA;;EAED,IAAA,IAAI5L,GAAJ,EAAS;QACRA,GAAG,GAAG,gBAAgBuX,IAAhB,CAAqBvX,GAAG,CAAC4L,GAAJ,EAArB,CAAN,CAAA;EACA,KAAA;EACD,GAnCoC;;;EAsCrC,EAAA,IAAI,CAAC5L,GAAD,IAAQ+F,GAAZ,EAAiB;EAChB/F,IAAAA,GAAG,GAAG,kCAAA,CAAmCuX,IAAnC,CAAwCxR,GAAxC,CAAN,CAAA;EACA,GAxCoC;;;EA2CrC,EAAA,IAAI/F,GAAJ,EAAS;EACRsX,IAAAA,OAAO,GAAGtX,GAAG,CAAC4L,GAAJ,EAAV,CADQ;EAIR;;EACA,IAAA,IAAI0L,OAAO,KAAK,QAAZ,IAAwBA,OAAO,KAAK,KAAxC,EAA+C;EAC9CA,MAAAA,OAAO,GAAG,SAAV,CAAA;EACA,KAAA;EACD,GAnDoC;;;IAsDrC,OAAOlC,OAAO,CAAC/L,MAAD,EAAS,OAAT,EAAkBiO,OAAlB,CAAP,CAAkC1kB,QAAlC,EAAP,CAAA;EACA,CAAA;EAED;EACA;EACA;EACA;EACA;EACA;EACA;;;EACA,SAASmjB,iBAAT,CAA2Brd,GAA3B,EAAgC;EAC/B;IACA,IAAI,OAAOA,GAAP,KAAe,QAAf,IAA2B,OAAOA,GAAG,CAAC8e,MAAX,KAAsB,UAAjD,IAA+D,OAAO9e,GAAG,CAAC+e,MAAX,KAAsB,UAArF,IAAmG,OAAO/e,GAAG,CAACgF,GAAX,KAAmB,UAAtH,IAAoI,OAAOhF,GAAG,CAACgf,MAAX,KAAsB,UAA1J,IAAwK,OAAOhf,GAAG,CAACyF,GAAX,KAAmB,UAA3L,IAAyM,OAAOzF,GAAG,CAAC6C,GAAX,KAAmB,UAAhO,EAA4O;EAC3O,IAAA,OAAO,KAAP,CAAA;EACA,GAJ8B;;;IAO/B,OAAO7C,GAAG,CAACrE,WAAJ,CAAgBE,IAAhB,KAAyB,iBAAzB,IAA8CwG,MAAM,CAAC1B,SAAP,CAAiBzG,QAAjB,CAA0B6J,IAA1B,CAA+B/D,GAA/B,CAAwC,KAAA,0BAAtF,IAAoH,OAAOA,GAAG,CAACif,IAAX,KAAoB,UAA/I,CAAA;EACA,CAAA;EAED;EACA;EACA;EACA;EACA;;;EACA,SAAS3B,MAAT,CAAgBtd,GAAhB,EAAqB;EACpB,EAAA,OAAO,OAAOA,GAAP,KAAe,QAAf,IAA2B,OAAOA,GAAG,CAACwb,WAAX,KAA2B,UAAtD,IAAoE,OAAOxb,GAAG,CAACC,IAAX,KAAoB,QAAxF,IAAoG,OAAOD,GAAG,CAAC0b,MAAX,KAAsB,UAA1H,IAAwI,OAAO1b,GAAG,CAACrE,WAAX,KAA2B,UAAnK,IAAiL,OAAOqE,GAAG,CAACrE,WAAJ,CAAgBE,IAAvB,KAAgC,QAAjN,IAA6N,eAAgBkX,CAAAA,IAAhB,CAAqB/S,GAAG,CAACrE,WAAJ,CAAgBE,IAArC,CAA7N,IAA2Q,eAAgBkX,CAAAA,IAAhB,CAAqB/S,GAAG,CAAC2M,MAAM,CAACwP,WAAR,CAAxB,CAAlR,CAAA;EACA,CAAA;EAED;EACA;EACA;EACA;EACA;EACA;;;EACA,SAASrc,KAAT,CAAe4E,QAAf,EAAyB;IACxB,IAAIwa,EAAJ,EAAQC,EAAR,CAAA;EACA,EAAA,IAAIpC,IAAI,GAAGrY,QAAQ,CAACqY,IAApB,CAFwB;;IAKxB,IAAIrY,QAAQ,CAAC+Y,QAAb,EAAuB;EACtB,IAAA,MAAM,IAAI/hB,KAAJ,CAAU,oCAAV,CAAN,CAAA;EACA,GAPuB;EAUxB;;;IACA,IAAIqhB,IAAI,YAAYtC,0BAAhB,IAA0B,OAAOsC,IAAI,CAACqC,WAAZ,KAA4B,UAA1D,EAAsE;EACrE;MACAF,EAAE,GAAG,IAAIrC,WAAJ,EAAL,CAAA;MACAsC,EAAE,GAAG,IAAItC,WAAJ,EAAL,CAAA;MACAE,IAAI,CAACsC,IAAL,CAAUH,EAAV,CAAA,CAAA;EACAnC,IAAAA,IAAI,CAACsC,IAAL,CAAUF,EAAV,EALqE;;EAOrEza,IAAAA,QAAQ,CAACkY,SAAD,CAAR,CAAoBG,IAApB,GAA2BmC,EAA3B,CAAA;EACAnC,IAAAA,IAAI,GAAGoC,EAAP,CAAA;EACA,GAAA;;EAED,EAAA,OAAOpC,IAAP,CAAA;EACA,CAAA;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EACA,SAASuC,kBAAT,CAA4BvC,IAA5B,EAAkC;IACjC,IAAIA,IAAI,KAAK,IAAb,EAAmB;EAClB;EACA,IAAA,OAAO,IAAP,CAAA;EACA,GAHD,MAGO,IAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;EACpC;EACA,IAAA,OAAO,0BAAP,CAAA;EACA,GAHM,MAGA,IAAIM,iBAAiB,CAACN,IAAD,CAArB,EAA6B;EACnC;EACA,IAAA,OAAO,iDAAP,CAAA;EACA,GAHM,MAGA,IAAIO,MAAM,CAACP,IAAD,CAAV,EAAkB;EACxB;EACA,IAAA,OAAOA,IAAI,CAAC9c,IAAL,IAAa,IAApB,CAAA;KAFM,MAGA,IAAIe,MAAM,CAACkB,QAAP,CAAgB6a,IAAhB,CAAJ,EAA2B;EACjC;EACA,IAAA,OAAO,IAAP,CAAA;EACA,GAHM,MAGA,IAAI1a,MAAM,CAAC1B,SAAP,CAAiBzG,QAAjB,CAA0B6J,IAA1B,CAA+BgZ,IAA/B,CAAA,KAAyC,sBAA7C,EAAqE;EAC3E;EACA,IAAA,OAAO,IAAP,CAAA;KAFM,MAGA,IAAI/B,WAAW,CAACC,MAAZ,CAAmB8B,IAAnB,CAAJ,EAA8B;EACpC;EACA,IAAA,OAAO,IAAP,CAAA;KAFM,MAGA,IAAI,OAAOA,IAAI,CAACqC,WAAZ,KAA4B,UAAhC,EAA4C;EAClD;EACA,IAAA,OAAQ,CAA+BrC,6BAAAA,EAAAA,IAAI,CAACqC,WAAL,EAAmB,CAA1D,CAAA,CAAA;EACA,GAHM,MAGA,IAAIrC,IAAI,YAAYtC,0BAApB,EAA4B;EAClC;EACA;EACA,IAAA,OAAO,IAAP,CAAA;EACA,GAJM,MAIA;EACN;EACA,IAAA,OAAO,0BAAP,CAAA;EACA,GAAA;EACD,CAAA;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EACA,SAAS8E,aAAT,CAAuB7a,QAAvB,EAAiC;EAChC,EAAA,MAAMqY,IAAI,GAAGrY,QAAQ,CAACqY,IAAtB,CAAA;;IAGA,IAAIA,IAAI,KAAK,IAAb,EAAmB;EAClB;EACA,IAAA,OAAO,CAAP,CAAA;EACA,GAHD,MAGO,IAAIO,MAAM,CAACP,IAAD,CAAV,EAAkB;MACxB,OAAOA,IAAI,CAACzB,IAAZ,CAAA;KADM,MAEA,IAAIta,MAAM,CAACkB,QAAP,CAAgB6a,IAAhB,CAAJ,EAA2B;EACjC;MACA,OAAOA,IAAI,CAACziB,MAAZ,CAAA;KAFM,MAGA,IAAIyiB,IAAI,IAAI,OAAOA,IAAI,CAACyC,aAAZ,KAA8B,UAA1C,EAAsD;EAC5D;MACA,IAAIzC,IAAI,CAAC0C,iBAAL,IAA0B1C,IAAI,CAAC0C,iBAAL,CAAuBnlB,MAAvB,IAAiC,CAA3D;EACJyiB,IAAAA,IAAI,CAAC2C,cAAL,IAAuB3C,IAAI,CAAC2C,cAAL,EADvB,EAC8C;EAC7C;QACA,OAAO3C,IAAI,CAACyC,aAAL,EAAP,CAAA;EACA,KAAA;;EACD,IAAA,OAAO,IAAP,CAAA;EACA,GARM,MAQA;EACN;EACA,IAAA,OAAO,IAAP,CAAA;EACA,GAAA;EACD,CAAA;EAED;EACA;EACA;EACA;EACA;EACA;;;EACA,SAASG,aAAT,CAAuBC,IAAvB,EAA6Blb,QAA7B,EAAuC;EACtC,EAAA,MAAMqY,IAAI,GAAGrY,QAAQ,CAACqY,IAAtB,CAAA;;IAGA,IAAIA,IAAI,KAAK,IAAb,EAAmB;EAClB;EACA6C,IAAAA,IAAI,CAACtgB,GAAL,EAAA,CAAA;EACA,GAHD,MAGO,IAAIge,MAAM,CAACP,IAAD,CAAV,EAAkB;EACxBA,IAAAA,IAAI,CAACrB,MAAL,EAAc2D,CAAAA,IAAd,CAAmBO,IAAnB,CAAA,CAAA;KADM,MAEA,IAAI5e,MAAM,CAACkB,QAAP,CAAgB6a,IAAhB,CAAJ,EAA2B;EACjC;MACA6C,IAAI,CAACC,KAAL,CAAW9C,IAAX,CAAA,CAAA;EACA6C,IAAAA,IAAI,CAACtgB,GAAL,EAAA,CAAA;EACA,GAJM,MAIA;EACN;MACAyd,IAAI,CAACsC,IAAL,CAAUO,IAAV,CAAA,CAAA;EACA,GAAA;EACD;;;EAGD9C,IAAI,CAACvc,OAAL,GAAe2D,MAAM,CAAC3D,OAAtB,CAAA;EAEA;EACA;EACA;EACA;EACA;;EAEA,MAAMuf,iBAAiB,GAAG,+BAA1B,CAAA;EACA,MAAMC,sBAAsB,GAAG,yBAA/B,CAAA;;EAEA,SAASC,YAAT,CAAsBnkB,IAAtB,EAA4B;IAC3BA,IAAI,GAAI,CAAEA,EAAAA,IAAK,CAAf,CAAA,CAAA;;IACA,IAAIikB,iBAAiB,CAAC/M,IAAlB,CAAuBlX,IAAvB,CAAgCA,IAAAA,IAAI,KAAK,EAA7C,EAAiD;EAChD,IAAA,MAAM,IAAI8P,SAAJ,CAAe,CAAE9P,EAAAA,IAAK,kCAAtB,CAAN,CAAA;EACA,GAAA;EACD,CAAA;;EAED,SAASokB,aAAT,CAAuBnlB,KAAvB,EAA8B;IAC7BA,KAAK,GAAI,CAAEA,EAAAA,KAAM,CAAjB,CAAA,CAAA;;EACA,EAAA,IAAIilB,sBAAsB,CAAChN,IAAvB,CAA4BjY,KAA5B,CAAJ,EAAwC;EACvC,IAAA,MAAM,IAAI6Q,SAAJ,CAAe,CAAE7Q,EAAAA,KAAM,mCAAvB,CAAN,CAAA;EACA,GAAA;EACD,CAAA;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EACA,SAASolB,IAAT,CAAc7hB,GAAd,EAAmBxC,IAAnB,EAAyB;EACxBA,EAAAA,IAAI,GAAGA,IAAI,CAAC+U,WAAL,EAAP,CAAA;;EACA,EAAA,KAAK,MAAMlO,GAAX,IAAkBrE,GAAlB,EAAuB;EACtB,IAAA,IAAIqE,GAAG,CAACkO,WAAJ,EAAA,KAAsB/U,IAA1B,EAAgC;EAC/B,MAAA,OAAO6G,GAAP,CAAA;EACA,KAAA;EACD,GAAA;;EACD,EAAA,OAAOoJ,SAAP,CAAA;EACA,CAAA;;EAED,MAAMqU,GAAG,GAAGxT,MAAM,CAAC,KAAD,CAAlB,CAAA;;EACA,MAAMyT,OAAN,CAAc;EACb;EACD;EACA;EACA;EACA;EACA;EACCzkB,EAAAA,WAAW,GAAG;MACb,IAAI0kB,IAAI,GAAGvG,SAAS,CAACxf,MAAV,GAAmB,CAAnB,IAAwBwf,SAAS,CAAC,CAAD,CAAT,KAAiBhO,SAAzC,GAAqDgO,SAAS,CAAC,CAAD,CAA9D,GAAoEhO,SAA/E,CAAA;EAEA,IAAA,IAAA,CAAKqU,GAAL,CAAY9d,GAAAA,MAAM,CAACC,MAAP,CAAc,IAAd,CAAZ,CAAA;;MAEA,IAAI+d,IAAI,YAAYD,OAApB,EAA6B;EAC5B,MAAA,MAAME,UAAU,GAAGD,IAAI,CAACE,GAAL,EAAnB,CAAA;EACA,MAAA,MAAMC,WAAW,GAAGne,MAAM,CAACmD,IAAP,CAAY8a,UAAZ,CAApB,CAAA;;EAEA,MAAA,KAAK,MAAMG,UAAX,IAAyBD,WAAzB,EAAsC;EACrC,QAAA,KAAK,MAAM1lB,KAAX,IAAoBwlB,UAAU,CAACG,UAAD,CAA9B,EAA4C;EAC3C,UAAA,IAAA,CAAK3B,MAAL,CAAY2B,UAAZ,EAAwB3lB,KAAxB,CAAA,CAAA;EACA,SAAA;EACD,OAAA;;EAED,MAAA,OAAA;EACA,KAhBY;EAmBb;;;MACA,IAAIulB,IAAI,IAAI,IAAZ,EAAkB,CAAlB,KAAyB,IAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;EACtD,MAAA,MAAMK,MAAM,GAAGL,IAAI,CAAC1T,MAAM,CAACgU,QAAR,CAAnB,CAAA;;QACA,IAAID,MAAM,IAAI,IAAd,EAAoB;EACnB,QAAA,IAAI,OAAOA,MAAP,KAAkB,UAAtB,EAAkC;EACjC,UAAA,MAAM,IAAI/U,SAAJ,CAAc,+BAAd,CAAN,CAAA;EACA,SAHkB;EAMnB;;;UACA,MAAMiV,KAAK,GAAG,EAAd,CAAA;;EACA,QAAA,KAAK,MAAMC,IAAX,IAAmBR,IAAnB,EAAyB;EACxB,UAAA,IAAI,OAAOQ,IAAP,KAAgB,QAAhB,IAA4B,OAAOA,IAAI,CAAClU,MAAM,CAACgU,QAAR,CAAX,KAAiC,UAAjE,EAA6E;EAC5E,YAAA,MAAM,IAAIhV,SAAJ,CAAc,mCAAd,CAAN,CAAA;EACA,WAAA;;YACDiV,KAAK,CAAC9iB,IAAN,CAAWqK,KAAK,CAAC+S,IAAN,CAAW2F,IAAX,CAAX,CAAA,CAAA;EACA,SAAA;;EAED,QAAA,KAAK,MAAMA,IAAX,IAAmBD,KAAnB,EAA0B;EACzB,UAAA,IAAIC,IAAI,CAACvmB,MAAL,KAAgB,CAApB,EAAuB;EACtB,YAAA,MAAM,IAAIqR,SAAJ,CAAc,6CAAd,CAAN,CAAA;EACA,WAAA;;YACD,IAAKmT,CAAAA,MAAL,CAAY+B,IAAI,CAAC,CAAD,CAAhB,EAAqBA,IAAI,CAAC,CAAD,CAAzB,CAAA,CAAA;EACA,SAAA;EACD,OArBD,MAqBO;EACN;UACA,KAAK,MAAMne,GAAX,IAAkBL,MAAM,CAACmD,IAAP,CAAY6a,IAAZ,CAAlB,EAAqC;EACpC,UAAA,MAAMvlB,KAAK,GAAGulB,IAAI,CAAC3d,GAAD,CAAlB,CAAA;EACA,UAAA,IAAA,CAAKoc,MAAL,CAAYpc,GAAZ,EAAiB5H,KAAjB,CAAA,CAAA;EACA,SAAA;EACD,OAAA;EACD,KA9BwB,MA8BlB;EACN,MAAA,MAAM,IAAI6Q,SAAJ,CAAc,wCAAd,CAAN,CAAA;EACA,KAAA;EACD,GAAA;EAED;EACD;EACA;EACA;EACA;EACA;;;IACC3G,GAAG,CAACnJ,IAAD,EAAO;MACTA,IAAI,GAAI,CAAEA,EAAAA,IAAK,CAAf,CAAA,CAAA;MACAmkB,YAAY,CAACnkB,IAAD,CAAZ,CAAA;MACA,MAAM6G,GAAG,GAAGwd,IAAI,CAAC,KAAKC,GAAL,CAAD,EAAYtkB,IAAZ,CAAhB,CAAA;;MACA,IAAI6G,GAAG,KAAKoJ,SAAZ,EAAuB;EACtB,MAAA,OAAO,IAAP,CAAA;EACA,KAAA;;MAED,OAAO,IAAA,CAAKqU,GAAL,CAAUzd,CAAAA,GAAV,EAAe9D,IAAf,CAAoB,IAApB,CAAP,CAAA;EACA,GAAA;EAED;EACD;EACA;EACA;EACA;EACA;EACA;;;IACCL,OAAO,CAACuiB,QAAD,EAAW;MACjB,IAAIC,OAAO,GAAGjH,SAAS,CAACxf,MAAV,GAAmB,CAAnB,IAAwBwf,SAAS,CAAC,CAAD,CAAT,KAAiBhO,SAAzC,GAAqDgO,SAAS,CAAC,CAAD,CAA9D,GAAoEhO,SAAlF,CAAA;EAEA,IAAA,IAAI8U,KAAK,GAAGI,UAAU,CAAC,IAAD,CAAtB,CAAA;MACA,IAAIxmB,CAAC,GAAG,CAAR,CAAA;;EACA,IAAA,OAAOA,CAAC,GAAGomB,KAAK,CAACtmB,MAAjB,EAAyB;EACxB,MAAA,IAAI2mB,QAAQ,GAAGL,KAAK,CAACpmB,CAAD,CAApB,CAAA;EACA,MAAA,MAAMqB,IAAI,GAAGolB,QAAQ,CAAC,CAAD,CAArB;EAAA,YACMnmB,KAAK,GAAGmmB,QAAQ,CAAC,CAAD,CADtB,CAAA;QAGAH,QAAQ,CAAC/c,IAAT,CAAcgd,OAAd,EAAuBjmB,KAAvB,EAA8Be,IAA9B,EAAoC,IAApC,CAAA,CAAA;EACA+kB,MAAAA,KAAK,GAAGI,UAAU,CAAC,IAAD,CAAlB,CAAA;QACAxmB,CAAC,EAAA,CAAA;EACD,KAAA;EACD,GAAA;EAED;EACD;EACA;EACA;EACA;EACA;EACA;;;EACCqI,EAAAA,GAAG,CAAChH,IAAD,EAAOf,KAAP,EAAc;MAChBe,IAAI,GAAI,CAAEA,EAAAA,IAAK,CAAf,CAAA,CAAA;MACAf,KAAK,GAAI,CAAEA,EAAAA,KAAM,CAAjB,CAAA,CAAA;MACAklB,YAAY,CAACnkB,IAAD,CAAZ,CAAA;MACAokB,aAAa,CAACnlB,KAAD,CAAb,CAAA;MACA,MAAM4H,GAAG,GAAGwd,IAAI,CAAC,KAAKC,GAAL,CAAD,EAAYtkB,IAAZ,CAAhB,CAAA;EACA,IAAA,IAAA,CAAKskB,GAAL,CAAA,CAAUzd,GAAG,KAAKoJ,SAAR,GAAoBpJ,GAApB,GAA0B7G,IAApC,CAAA,GAA4C,CAACf,KAAD,CAA5C,CAAA;EACA,GAAA;EAED;EACD;EACA;EACA;EACA;EACA;EACA;;;EACCgkB,EAAAA,MAAM,CAACjjB,IAAD,EAAOf,KAAP,EAAc;MACnBe,IAAI,GAAI,CAAEA,EAAAA,IAAK,CAAf,CAAA,CAAA;MACAf,KAAK,GAAI,CAAEA,EAAAA,KAAM,CAAjB,CAAA,CAAA;MACAklB,YAAY,CAACnkB,IAAD,CAAZ,CAAA;MACAokB,aAAa,CAACnlB,KAAD,CAAb,CAAA;MACA,MAAM4H,GAAG,GAAGwd,IAAI,CAAC,KAAKC,GAAL,CAAD,EAAYtkB,IAAZ,CAAhB,CAAA;;MACA,IAAI6G,GAAG,KAAKoJ,SAAZ,EAAuB;EACtB,MAAA,IAAA,CAAKqU,GAAL,CAAUzd,CAAAA,GAAV,CAAe5E,CAAAA,IAAf,CAAoBhD,KAApB,CAAA,CAAA;EACA,KAFD,MAEO;EACN,MAAA,IAAA,CAAKqlB,GAAL,CAAUtkB,CAAAA,IAAV,CAAkB,GAAA,CAACf,KAAD,CAAlB,CAAA;EACA,KAAA;EACD,GAAA;EAED;EACD;EACA;EACA;EACA;EACA;;;IACC2K,GAAG,CAAC5J,IAAD,EAAO;MACTA,IAAI,GAAI,CAAEA,EAAAA,IAAK,CAAf,CAAA,CAAA;MACAmkB,YAAY,CAACnkB,IAAD,CAAZ,CAAA;MACA,OAAOqkB,IAAI,CAAC,IAAKC,CAAAA,GAAL,CAAD,EAAYtkB,IAAZ,CAAJ,KAA0BiQ,SAAjC,CAAA;EACA,GAAA;EAED;EACD;EACA;EACA;EACA;EACA;;;IACCiT,MAAM,CAACljB,IAAD,EAAO;MACZA,IAAI,GAAI,CAAEA,EAAAA,IAAK,CAAf,CAAA,CAAA;MACAmkB,YAAY,CAACnkB,IAAD,CAAZ,CAAA;MACA,MAAM6G,GAAG,GAAGwd,IAAI,CAAC,KAAKC,GAAL,CAAD,EAAYtkB,IAAZ,CAAhB,CAAA;;MACA,IAAI6G,GAAG,KAAKoJ,SAAZ,EAAuB;EACtB,MAAA,OAAO,IAAKqU,CAAAA,GAAL,CAAUzd,CAAAA,GAAV,CAAP,CAAA;EACA,KAAA;EACD,GAAA;EAED;EACD;EACA;EACA;EACA;;;EACC6d,EAAAA,GAAG,GAAG;MACL,OAAO,IAAA,CAAKJ,GAAL,CAAP,CAAA;EACA,GAAA;EAED;EACD;EACA;EACA;EACA;;;EACC3a,EAAAA,IAAI,GAAG;EACN,IAAA,OAAO0b,qBAAqB,CAAC,IAAD,EAAO,KAAP,CAA5B,CAAA;EACA,GAAA;EAED;EACD;EACA;EACA;EACA;;;EACCC,EAAAA,MAAM,GAAG;EACR,IAAA,OAAOD,qBAAqB,CAAC,IAAD,EAAO,OAAP,CAA5B,CAAA;EACA,GAAA;EAED;EACD;EACA;EACA;EACA;EACA;EACA;;;IACiB,CAAfvU,MAAM,CAACgU,QAAQ,CAAI,GAAA;EACnB,IAAA,OAAOO,qBAAqB,CAAC,IAAD,EAAO,WAAP,CAA5B,CAAA;EACA,GAAA;;EAzMY,CAAA;;EA2Mdd,OAAO,CAACzf,SAAR,CAAkBygB,OAAlB,GAA4BhB,OAAO,CAACzf,SAAR,CAAkBgM,MAAM,CAACgU,QAAzB,CAA5B,CAAA;EAEAte,MAAM,CAACkB,cAAP,CAAsB6c,OAAO,CAACzf,SAA9B,EAAyCgM,MAAM,CAACwP,WAAhD,EAA6D;EAC5DrhB,EAAAA,KAAK,EAAE,SADqD;EAE5DshB,EAAAA,QAAQ,EAAE,KAFkD;EAG5D9Y,EAAAA,UAAU,EAAE,KAHgD;EAI5D2W,EAAAA,YAAY,EAAE,IAAA;EAJ8C,CAA7D,CAAA,CAAA;EAOA5X,MAAM,CAAC6Z,gBAAP,CAAwBkE,OAAO,CAACzf,SAAhC,EAA2C;EAC1CqE,EAAAA,GAAG,EAAE;EAAE1B,IAAAA,UAAU,EAAE,IAAA;KADuB;EAE1C/E,EAAAA,OAAO,EAAE;EAAE+E,IAAAA,UAAU,EAAE,IAAA;KAFmB;EAG1CT,EAAAA,GAAG,EAAE;EAAES,IAAAA,UAAU,EAAE,IAAA;KAHuB;EAI1Cwb,EAAAA,MAAM,EAAE;EAAExb,IAAAA,UAAU,EAAE,IAAA;KAJoB;EAK1CmC,EAAAA,GAAG,EAAE;EAAEnC,IAAAA,UAAU,EAAE,IAAA;KALuB;EAM1Cyb,EAAAA,MAAM,EAAE;EAAEzb,IAAAA,UAAU,EAAE,IAAA;KANoB;EAO1CkC,EAAAA,IAAI,EAAE;EAAElC,IAAAA,UAAU,EAAE,IAAA;KAPsB;EAQ1C6d,EAAAA,MAAM,EAAE;EAAE7d,IAAAA,UAAU,EAAE,IAAA;KARoB;EAS1C8d,EAAAA,OAAO,EAAE;EAAE9d,IAAAA,UAAU,EAAE,IAAA;EAAd,GAAA;EATiC,CAA3C,CAAA,CAAA;;EAYA,SAAS0d,UAAT,CAAoBpD,OAApB,EAA6B;IAC5B,IAAIyD,IAAI,GAAGvH,SAAS,CAACxf,MAAV,GAAmB,CAAnB,IAAwBwf,SAAS,CAAC,CAAD,CAAT,KAAiBhO,SAAzC,GAAqDgO,SAAS,CAAC,CAAD,CAA9D,GAAoE,WAA/E,CAAA;EAEA,EAAA,MAAMtU,IAAI,GAAGnD,MAAM,CAACmD,IAAP,CAAYoY,OAAO,CAACuC,GAAD,CAAnB,CAA0BlB,CAAAA,IAA1B,EAAb,CAAA;IACA,OAAOzZ,IAAI,CAACnH,GAAL,CAASgjB,IAAI,KAAK,KAAT,GAAiB,UAAUC,CAAV,EAAa;MAC7C,OAAOA,CAAC,CAAC1Q,WAAF,EAAP,CAAA;EACA,GAFe,GAEZyQ,IAAI,KAAK,OAAT,GAAmB,UAAUC,CAAV,EAAa;MACnC,OAAO1D,OAAO,CAACuC,GAAD,CAAP,CAAamB,CAAb,CAAgB1iB,CAAAA,IAAhB,CAAqB,IAArB,CAAP,CAAA;KADG,GAEA,UAAU0iB,CAAV,EAAa;EAChB,IAAA,OAAO,CAACA,CAAC,CAAC1Q,WAAF,EAAD,EAAkBgN,OAAO,CAACuC,GAAD,CAAP,CAAamB,CAAb,CAAA,CAAgB1iB,IAAhB,CAAqB,IAArB,CAAlB,CAAP,CAAA;EACA,GANM,CAAP,CAAA;EAOA,CAAA;;EAED,MAAM2iB,QAAQ,GAAG5U,MAAM,CAAC,UAAD,CAAvB,CAAA;;EAEA,SAASuU,qBAAT,CAA+BzU,MAA/B,EAAuC4U,IAAvC,EAA6C;EAC5C,EAAA,MAAMV,QAAQ,GAAGte,MAAM,CAACC,MAAP,CAAckf,wBAAd,CAAjB,CAAA;IACAb,QAAQ,CAACY,QAAD,CAAR,GAAqB;MACpB9U,MADoB;MAEpB4U,IAFoB;EAGpB7e,IAAAA,KAAK,EAAE,CAAA;KAHR,CAAA;EAKA,EAAA,OAAOme,QAAP,CAAA;EACA,CAAA;;EAED,MAAMa,wBAAwB,GAAGnf,MAAM,CAACof,cAAP,CAAsB;EACtDC,EAAAA,IAAI,GAAG;EACN;MACA,IAAI,CAAC,IAAD,IAASrf,MAAM,CAACE,cAAP,CAAsB,IAAtB,CAAgCif,KAAAA,wBAA7C,EAAuE;EACtE,MAAA,MAAM,IAAI7V,SAAJ,CAAc,0CAAd,CAAN,CAAA;EACA,KAAA;;EAED,IAAA,IAAIgW,SAAS,GAAG,IAAKJ,CAAAA,QAAL,CAAhB,CAAA;EACA,IAAA,MAAM9U,MAAM,GAAGkV,SAAS,CAAClV,MAAzB;EAAA,UACM4U,IAAI,GAAGM,SAAS,CAACN,IADvB;EAAA,UAEM7e,KAAK,GAAGmf,SAAS,CAACnf,KAFxB,CAAA;EAIA,IAAA,MAAM2e,MAAM,GAAGH,UAAU,CAACvU,MAAD,EAAS4U,IAAT,CAAzB,CAAA;EACA,IAAA,MAAMpZ,GAAG,GAAGkZ,MAAM,CAAC7mB,MAAnB,CAAA;;MACA,IAAIkI,KAAK,IAAIyF,GAAb,EAAkB;QACjB,OAAO;EACNnN,QAAAA,KAAK,EAAEgR,SADD;EAEN8V,QAAAA,IAAI,EAAE,IAAA;SAFP,CAAA;EAIA,KAAA;;EAED,IAAA,IAAA,CAAKL,QAAL,CAAe/e,CAAAA,KAAf,GAAuBA,KAAK,GAAG,CAA/B,CAAA;MAEA,OAAO;EACN1H,MAAAA,KAAK,EAAEqmB,MAAM,CAAC3e,KAAD,CADP;EAENof,MAAAA,IAAI,EAAE,KAAA;OAFP,CAAA;EAIA,GAAA;;EA3BqD,CAAtB,EA4B9Bvf,MAAM,CAACE,cAAP,CAAsBF,MAAM,CAACE,cAAP,CAAsB,EAAA,CAAGoK,MAAM,CAACgU,QAAV,CAAtB,EAAA,CAAtB,CA5B8B,CAAjC,CAAA;EA8BAte,MAAM,CAACkB,cAAP,CAAsBie,wBAAtB,EAAgD7U,MAAM,CAACwP,WAAvD,EAAoE;EACnErhB,EAAAA,KAAK,EAAE,iBAD4D;EAEnEshB,EAAAA,QAAQ,EAAE,KAFyD;EAGnE9Y,EAAAA,UAAU,EAAE,KAHuD;EAInE2W,EAAAA,YAAY,EAAE,IAAA;EAJqD,CAApE,CAAA,CAAA;EAOA;EACA;EACA;EACA;EACA;EACA;;EACA,SAAS4H,2BAAT,CAAqCjE,OAArC,EAA8C;EAC7C,EAAA,MAAM5d,GAAG,GAAGqC,MAAM,CAACgE,MAAP,CAAc;EAAEyb,IAAAA,SAAS,EAAE,IAAA;EAAb,GAAd,EAAmClE,OAAO,CAACuC,GAAD,CAA1C,CAAZ,CAD6C;EAI7C;;IACA,MAAM4B,aAAa,GAAG7B,IAAI,CAACtC,OAAO,CAACuC,GAAD,CAAR,EAAe,MAAf,CAA1B,CAAA;;IACA,IAAI4B,aAAa,KAAKjW,SAAtB,EAAiC;MAChC9L,GAAG,CAAC+hB,aAAD,CAAH,GAAqB/hB,GAAG,CAAC+hB,aAAD,CAAH,CAAmB,CAAnB,CAArB,CAAA;EACA,GAAA;;EAED,EAAA,OAAO/hB,GAAP,CAAA;EACA,CAAA;EAED;EACA;EACA;EACA;EACA;EACA;EACA;;;EACA,SAASgiB,oBAAT,CAA8BhiB,GAA9B,EAAmC;EAClC,EAAA,MAAM4d,OAAO,GAAG,IAAIwC,OAAJ,EAAhB,CAAA;;IACA,KAAK,MAAMvkB,IAAX,IAAmBwG,MAAM,CAACmD,IAAP,CAAYxF,GAAZ,CAAnB,EAAqC;EACpC,IAAA,IAAI8f,iBAAiB,CAAC/M,IAAlB,CAAuBlX,IAAvB,CAAJ,EAAkC;EACjC,MAAA,SAAA;EACA,KAAA;;MACD,IAAIsM,KAAK,CAACC,OAAN,CAAcpI,GAAG,CAACnE,IAAD,CAAjB,CAAJ,EAA8B;EAC7B,MAAA,KAAK,MAAMP,GAAX,IAAkB0E,GAAG,CAACnE,IAAD,CAArB,EAA6B;EAC5B,QAAA,IAAIkkB,sBAAsB,CAAChN,IAAvB,CAA4BzX,GAA5B,CAAJ,EAAsC;EACrC,UAAA,SAAA;EACA,SAAA;;UACD,IAAIsiB,OAAO,CAACuC,GAAD,CAAP,CAAatkB,IAAb,CAAA,KAAuBiQ,SAA3B,EAAsC;YACrC8R,OAAO,CAACuC,GAAD,CAAP,CAAatkB,IAAb,CAAqB,GAAA,CAACP,GAAD,CAArB,CAAA;EACA,SAFD,MAEO;YACNsiB,OAAO,CAACuC,GAAD,CAAP,CAAatkB,IAAb,CAAmBiC,CAAAA,IAAnB,CAAwBxC,GAAxB,CAAA,CAAA;EACA,SAAA;EACD,OAAA;EACD,KAXD,MAWO,IAAI,CAACykB,sBAAsB,CAAChN,IAAvB,CAA4B/S,GAAG,CAACnE,IAAD,CAA/B,CAAL,EAA6C;QACnD+hB,OAAO,CAACuC,GAAD,CAAP,CAAatkB,IAAb,CAAqB,GAAA,CAACmE,GAAG,CAACnE,IAAD,CAAJ,CAArB,CAAA;EACA,KAAA;EACD,GAAA;;EACD,EAAA,OAAO+hB,OAAP,CAAA;EACA,CAAA;;EAED,MAAMqE,WAAW,GAAGtV,MAAM,CAAC,oBAAD,CAA1B;;EAGA,MAAMuV,YAAY,GAAGtS,wBAAI,CAACsS,YAA1B,CAAA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EACA,MAAMC,QAAN,CAAe;EACdxmB,EAAAA,WAAW,GAAG;MACb,IAAIohB,IAAI,GAAGjD,SAAS,CAACxf,MAAV,GAAmB,CAAnB,IAAwBwf,SAAS,CAAC,CAAD,CAAT,KAAiBhO,SAAzC,GAAqDgO,SAAS,CAAC,CAAD,CAA9D,GAAoE,IAA/E,CAAA;MACA,IAAIvO,IAAI,GAAGuO,SAAS,CAACxf,MAAV,GAAmB,CAAnB,IAAwBwf,SAAS,CAAC,CAAD,CAAT,KAAiBhO,SAAzC,GAAqDgO,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAA/E,CAAA;EAEAgD,IAAAA,IAAI,CAAC/Y,IAAL,CAAU,IAAV,EAAgBgZ,IAAhB,EAAsBxR,IAAtB,CAAA,CAAA;EAEA,IAAA,MAAM8C,MAAM,GAAG9C,IAAI,CAAC8C,MAAL,IAAe,GAA9B,CAAA;MACA,MAAMuP,OAAO,GAAG,IAAIwC,OAAJ,CAAY7U,IAAI,CAACqS,OAAjB,CAAhB,CAAA;;MAEA,IAAIb,IAAI,IAAI,IAAR,IAAgB,CAACa,OAAO,CAACnY,GAAR,CAAY,cAAZ,CAArB,EAAkD;EACjD,MAAA,MAAM2c,WAAW,GAAG9C,kBAAkB,CAACvC,IAAD,CAAtC,CAAA;;EACA,MAAA,IAAIqF,WAAJ,EAAiB;EAChBxE,QAAAA,OAAO,CAACkB,MAAR,CAAe,cAAf,EAA+BsD,WAA/B,CAAA,CAAA;EACA,OAAA;EACD,KAAA;;EAED,IAAA,IAAA,CAAKH,WAAL,CAAoB,GAAA;QACnBzQ,GAAG,EAAEjG,IAAI,CAACiG,GADS;QAEnBnD,MAFmB;QAGnBgU,UAAU,EAAE9W,IAAI,CAAC8W,UAAL,IAAmBH,YAAY,CAAC7T,MAAD,CAHxB;QAInBuP,OAJmB;QAKnBtK,OAAO,EAAE/H,IAAI,CAAC+H,OAAAA;OALf,CAAA;EAOA,GAAA;;EAEM,EAAA,IAAH9B,GAAG,GAAG;EACT,IAAA,OAAO,IAAKyQ,CAAAA,WAAL,CAAkBzQ,CAAAA,GAAlB,IAAyB,EAAhC,CAAA;EACA,GAAA;;EAES,EAAA,IAANnD,MAAM,GAAG;MACZ,OAAO,IAAA,CAAK4T,WAAL,CAAA,CAAkB5T,MAAzB,CAAA;EACA,GAAA;EAED;EACD;EACA;;;EACO,EAAA,IAAFiU,EAAE,GAAG;EACR,IAAA,OAAO,IAAKL,CAAAA,WAAL,CAAkB5T,CAAAA,MAAlB,IAA4B,GAA5B,IAAmC,IAAA,CAAK4T,WAAL,CAAA,CAAkB5T,MAAlB,GAA2B,GAArE,CAAA;EACA,GAAA;;EAEa,EAAA,IAAVkU,UAAU,GAAG;EAChB,IAAA,OAAO,IAAKN,CAAAA,WAAL,CAAkB3O,CAAAA,OAAlB,GAA4B,CAAnC,CAAA;EACA,GAAA;;EAEa,EAAA,IAAV+O,UAAU,GAAG;MAChB,OAAO,IAAA,CAAKJ,WAAL,CAAA,CAAkBI,UAAzB,CAAA;EACA,GAAA;;EAEU,EAAA,IAAPzE,OAAO,GAAG;MACb,OAAO,IAAA,CAAKqE,WAAL,CAAA,CAAkBrE,OAAzB,CAAA;EACA,GAAA;EAED;EACD;EACA;EACA;EACA;;;EACC9d,EAAAA,KAAK,GAAG;EACP,IAAA,OAAO,IAAIqiB,QAAJ,CAAariB,KAAK,CAAC,IAAD,CAAlB,EAA0B;QAChC0R,GAAG,EAAE,KAAKA,GADsB;QAEhCnD,MAAM,EAAE,KAAKA,MAFmB;QAGhCgU,UAAU,EAAE,KAAKA,UAHe;QAIhCzE,OAAO,EAAE,KAAKA,OAJkB;QAKhC0E,EAAE,EAAE,KAAKA,EALuB;EAMhCC,MAAAA,UAAU,EAAE,IAAKA,CAAAA,UAAAA;EANe,KAA1B,CAAP,CAAA;EAQA,GAAA;;EAnEa,CAAA;;EAsEfzF,IAAI,CAACqB,KAAL,CAAWgE,QAAQ,CAACxhB,SAApB,CAAA,CAAA;EAEA0B,MAAM,CAAC6Z,gBAAP,CAAwBiG,QAAQ,CAACxhB,SAAjC,EAA4C;EAC3C6Q,EAAAA,GAAG,EAAE;EAAElO,IAAAA,UAAU,EAAE,IAAA;KADwB;EAE3C+K,EAAAA,MAAM,EAAE;EAAE/K,IAAAA,UAAU,EAAE,IAAA;KAFqB;EAG3Cgf,EAAAA,EAAE,EAAE;EAAEhf,IAAAA,UAAU,EAAE,IAAA;KAHyB;EAI3Cif,EAAAA,UAAU,EAAE;EAAEjf,IAAAA,UAAU,EAAE,IAAA;KAJiB;EAK3C+e,EAAAA,UAAU,EAAE;EAAE/e,IAAAA,UAAU,EAAE,IAAA;KALiB;EAM3Csa,EAAAA,OAAO,EAAE;EAAEta,IAAAA,UAAU,EAAE,IAAA;KANoB;EAO3CxD,EAAAA,KAAK,EAAE;EAAEwD,IAAAA,UAAU,EAAE,IAAA;EAAd,GAAA;EAPoC,CAA5C,CAAA,CAAA;EAUAjB,MAAM,CAACkB,cAAP,CAAsB4e,QAAQ,CAACxhB,SAA/B,EAA0CgM,MAAM,CAACwP,WAAjD,EAA8D;EAC7DrhB,EAAAA,KAAK,EAAE,UADsD;EAE7DshB,EAAAA,QAAQ,EAAE,KAFmD;EAG7D9Y,EAAAA,UAAU,EAAE,KAHiD;EAI7D2W,EAAAA,YAAY,EAAE,IAAA;EAJ+C,CAA9D,CAAA,CAAA;EAOA,MAAMuI,WAAW,GAAG7V,MAAM,CAAC,mBAAD,CAA1B,CAAA;EACA,MAAMkN,GAAG,GAAG4I,uBAAG,CAAC5I,GAAJ,IAAW6I,SAAS,CAAC7I,GAAjC;;EAGA,MAAM8I,SAAS,GAAGF,uBAAG,CAAC1E,KAAtB,CAAA;EACA,MAAM6E,UAAU,GAAGH,uBAAG,CAACxoB,MAAvB,CAAA;EAEA;EACA;EACA;EACA;EACA;EACA;;EACA,SAASue,QAAT,CAAkBqK,MAAlB,EAA0B;EACzB;EACD;EACA;EACA;EACA;EACC,EAAA,IAAI,2BAA4BhE,CAAAA,IAA5B,CAAiCgE,MAAjC,CAAJ,EAA8C;EAC7CA,IAAAA,MAAM,GAAG,IAAIhJ,GAAJ,CAAQgJ,MAAR,CAAA,CAAgB3oB,QAAhB,EAAT,CAAA;EACA,GARwB;;;IAWzB,OAAOyoB,SAAS,CAACE,MAAD,CAAhB,CAAA;EACA,CAAA;;EAED,MAAMC,0BAA0B,IAAG,SAAarI,IAAAA,0BAAM,CAACD,QAAP,CAAgB7Z,SAAhC,CAAhC,CAAA;EAEA;EACA;EACA;EACA;EACA;EACA;;EACA,SAASoiB,SAAT,CAAmB3S,KAAnB,EAA0B;IACzB,OAAO,OAAOA,KAAP,KAAiB,QAAjB,IAA6B,OAAOA,KAAK,CAACoS,WAAD,CAAZ,KAA8B,QAAlE,CAAA;EACA,CAAA;;EAED,SAASQ,aAAT,CAAuBC,MAAvB,EAA+B;EAC9B,EAAA,MAAM7hB,KAAK,GAAG6hB,MAAM,IAAI,OAAOA,MAAP,KAAkB,QAA5B,IAAwC5gB,MAAM,CAACE,cAAP,CAAsB0gB,MAAtB,CAAtD,CAAA;IACA,OAAO,CAAC,EAAE7hB,KAAK,IAAIA,KAAK,CAACzF,WAAN,CAAkBE,IAAlB,KAA2B,aAAtC,CAAR,CAAA;EACA,CAAA;EAED;EACA;EACA;EACA;EACA;EACA;EACA;;;EACA,MAAMqnB,OAAN,CAAc;IACbvnB,WAAW,CAACyU,KAAD,EAAQ;MAClB,IAAIiQ,IAAI,GAAGvG,SAAS,CAACxf,MAAV,GAAmB,CAAnB,IAAwBwf,SAAS,CAAC,CAAD,CAAT,KAAiBhO,SAAzC,GAAqDgO,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAA/E,CAAA;MAEA,IAAIV,SAAJ,CAHkB;;EAMlB,IAAA,IAAI,CAAC2J,SAAS,CAAC3S,KAAD,CAAd,EAAuB;EACtB,MAAA,IAAIA,KAAK,IAAIA,KAAK,CAACkJ,IAAnB,EAAyB;EACxB;EACA;EACA;EACAF,QAAAA,SAAS,GAAGZ,QAAQ,CAACpI,KAAK,CAACkJ,IAAP,CAApB,CAAA;EACA,OALD,MAKO;EACN;EACAF,QAAAA,SAAS,GAAGZ,QAAQ,CAAE,CAAEpI,EAAAA,KAAM,EAAV,CAApB,CAAA;EACA,OAAA;;EACDA,MAAAA,KAAK,GAAG,EAAR,CAAA;EACA,KAXD,MAWO;EACNgJ,MAAAA,SAAS,GAAGZ,QAAQ,CAACpI,KAAK,CAACoB,GAAP,CAApB,CAAA;EACA,KAAA;;MAED,IAAIkP,MAAM,GAAGL,IAAI,CAACK,MAAL,IAAetQ,KAAK,CAACsQ,MAArB,IAA+B,KAA5C,CAAA;EACAA,IAAAA,MAAM,GAAGA,MAAM,CAAC9O,WAAP,EAAT,CAAA;;MAEA,IAAI,CAACyO,IAAI,CAACtD,IAAL,IAAa,IAAb,IAAqBgG,SAAS,CAAC3S,KAAD,CAAT,IAAoBA,KAAK,CAAC2M,IAAN,KAAe,IAAzD,MAAmE2D,MAAM,KAAK,KAAX,IAAoBA,MAAM,KAAK,MAAlG,CAAJ,EAA+G;EAC9G,MAAA,MAAM,IAAI/U,SAAJ,CAAc,+CAAd,CAAN,CAAA;EACA,KAAA;;EAED,IAAA,IAAIwX,SAAS,GAAG9C,IAAI,CAACtD,IAAL,IAAa,IAAb,GAAoBsD,IAAI,CAACtD,IAAzB,GAAgCgG,SAAS,CAAC3S,KAAD,CAAT,IAAoBA,KAAK,CAAC2M,IAAN,KAAe,IAAnC,GAA0Cjd,KAAK,CAACsQ,KAAD,CAA/C,GAAyD,IAAzG,CAAA;EAEA0M,IAAAA,IAAI,CAAC/Y,IAAL,CAAU,IAAV,EAAgBof,SAAhB,EAA2B;QAC1B/F,OAAO,EAAEiD,IAAI,CAACjD,OAAL,IAAgBhN,KAAK,CAACgN,OAAtB,IAAiC,CADhB;QAE1B9B,IAAI,EAAE+E,IAAI,CAAC/E,IAAL,IAAalL,KAAK,CAACkL,IAAnB,IAA2B,CAAA;OAFlC,CAAA,CAAA;EAKA,IAAA,MAAMsC,OAAO,GAAG,IAAIwC,OAAJ,CAAYC,IAAI,CAACzC,OAAL,IAAgBxN,KAAK,CAACwN,OAAtB,IAAiC,EAA7C,CAAhB,CAAA;;MAEA,IAAIuF,SAAS,IAAI,IAAb,IAAqB,CAACvF,OAAO,CAACnY,GAAR,CAAY,cAAZ,CAA1B,EAAuD;EACtD,MAAA,MAAM2c,WAAW,GAAG9C,kBAAkB,CAAC6D,SAAD,CAAtC,CAAA;;EACA,MAAA,IAAIf,WAAJ,EAAiB;EAChBxE,QAAAA,OAAO,CAACkB,MAAR,CAAe,cAAf,EAA+BsD,WAA/B,CAAA,CAAA;EACA,OAAA;EACD,KAAA;;MAED,IAAIa,MAAM,GAAGF,SAAS,CAAC3S,KAAD,CAAT,GAAmBA,KAAK,CAAC6S,MAAzB,GAAkC,IAA/C,CAAA;EACA,IAAA,IAAI,YAAY5C,IAAhB,EAAsB4C,MAAM,GAAG5C,IAAI,CAAC4C,MAAd,CAAA;;MAEtB,IAAIA,MAAM,IAAI,IAAV,IAAkB,CAACD,aAAa,CAACC,MAAD,CAApC,EAA8C;EAC7C,MAAA,MAAM,IAAItX,SAAJ,CAAc,iDAAd,CAAN,CAAA;EACA,KAAA;;EAED,IAAA,IAAA,CAAK6W,WAAL,CAAoB,GAAA;QACnB9B,MADmB;QAEnB0C,QAAQ,EAAE/C,IAAI,CAAC+C,QAAL,IAAiBhT,KAAK,CAACgT,QAAvB,IAAmC,QAF1B;QAGnBxF,OAHmB;QAInBxE,SAJmB;EAKnB6J,MAAAA,MAAAA;EALmB,KAApB,CAnDkB;;MA4DlB,IAAKI,CAAAA,MAAL,GAAchD,IAAI,CAACgD,MAAL,KAAgBvX,SAAhB,GAA4BuU,IAAI,CAACgD,MAAjC,GAA0CjT,KAAK,CAACiT,MAAN,KAAiBvX,SAAjB,GAA6BsE,KAAK,CAACiT,MAAnC,GAA4C,EAApG,CAAA;MACA,IAAK1P,CAAAA,QAAL,GAAgB0M,IAAI,CAAC1M,QAAL,KAAkB7H,SAAlB,GAA8BuU,IAAI,CAAC1M,QAAnC,GAA8CvD,KAAK,CAACuD,QAAN,KAAmB7H,SAAnB,GAA+BsE,KAAK,CAACuD,QAArC,GAAgD,IAA9G,CAAA;MACA,IAAKL,CAAAA,OAAL,GAAe+M,IAAI,CAAC/M,OAAL,IAAgBlD,KAAK,CAACkD,OAAtB,IAAiC,CAAhD,CAAA;MACA,IAAKgQ,CAAAA,KAAL,GAAajD,IAAI,CAACiD,KAAL,IAAclT,KAAK,CAACkT,KAAjC,CAAA;EACA,GAAA;;EAES,EAAA,IAAN5C,MAAM,GAAG;MACZ,OAAO,IAAA,CAAK8B,WAAL,CAAA,CAAkB9B,MAAzB,CAAA;EACA,GAAA;;EAEM,EAAA,IAAHlP,GAAG,GAAG;EACT,IAAA,OAAOoR,UAAU,CAAC,IAAA,CAAKJ,WAAL,CAAA,CAAkBpJ,SAAnB,CAAjB,CAAA;EACA,GAAA;;EAEU,EAAA,IAAPwE,OAAO,GAAG;MACb,OAAO,IAAA,CAAK4E,WAAL,CAAA,CAAkB5E,OAAzB,CAAA;EACA,GAAA;;EAEW,EAAA,IAARwF,QAAQ,GAAG;MACd,OAAO,IAAA,CAAKZ,WAAL,CAAA,CAAkBY,QAAzB,CAAA;EACA,GAAA;;EAES,EAAA,IAANH,MAAM,GAAG;MACZ,OAAO,IAAA,CAAKT,WAAL,CAAA,CAAkBS,MAAzB,CAAA;EACA,GAAA;EAED;EACD;EACA;EACA;EACA;;;EACCnjB,EAAAA,KAAK,GAAG;EACP,IAAA,OAAO,IAAIojB,OAAJ,CAAY,IAAZ,CAAP,CAAA;EACA,GAAA;;EA9FY,CAAA;;EAiGdpG,IAAI,CAACqB,KAAL,CAAW+E,OAAO,CAACviB,SAAnB,CAAA,CAAA;EAEA0B,MAAM,CAACkB,cAAP,CAAsB2f,OAAO,CAACviB,SAA9B,EAAyCgM,MAAM,CAACwP,WAAhD,EAA6D;EAC5DrhB,EAAAA,KAAK,EAAE,SADqD;EAE5DshB,EAAAA,QAAQ,EAAE,KAFkD;EAG5D9Y,EAAAA,UAAU,EAAE,KAHgD;EAI5D2W,EAAAA,YAAY,EAAE,IAAA;EAJ8C,CAA7D,CAAA,CAAA;EAOA5X,MAAM,CAAC6Z,gBAAP,CAAwBgH,OAAO,CAACviB,SAAhC,EAA2C;EAC1C+f,EAAAA,MAAM,EAAE;EAAEpd,IAAAA,UAAU,EAAE,IAAA;KADoB;EAE1CkO,EAAAA,GAAG,EAAE;EAAElO,IAAAA,UAAU,EAAE,IAAA;KAFuB;EAG1Csa,EAAAA,OAAO,EAAE;EAAEta,IAAAA,UAAU,EAAE,IAAA;KAHmB;EAI1C8f,EAAAA,QAAQ,EAAE;EAAE9f,IAAAA,UAAU,EAAE,IAAA;KAJkB;EAK1CxD,EAAAA,KAAK,EAAE;EAAEwD,IAAAA,UAAU,EAAE,IAAA;KALqB;EAM1C2f,EAAAA,MAAM,EAAE;EAAE3f,IAAAA,UAAU,EAAE,IAAA;EAAd,GAAA;EANkC,CAA3C,CAAA,CAAA;EASA;EACA;EACA;EACA;EACA;EACA;;EACA,SAASigB,qBAAT,CAA+BC,OAA/B,EAAwC;EACvC,EAAA,MAAMpK,SAAS,GAAGoK,OAAO,CAAChB,WAAD,CAAP,CAAqBpJ,SAAvC,CAAA;EACA,EAAA,MAAMwE,OAAO,GAAG,IAAIwC,OAAJ,CAAYoD,OAAO,CAAChB,WAAD,CAAP,CAAqB5E,OAAjC,CAAhB,CAFuC;;EAKvC,EAAA,IAAI,CAACA,OAAO,CAACnY,GAAR,CAAY,QAAZ,CAAL,EAA4B;EAC3BmY,IAAAA,OAAO,CAAC/a,GAAR,CAAY,QAAZ,EAAsB,KAAtB,CAAA,CAAA;EACA,GAPsC;;;IAUvC,IAAI,CAACuW,SAAS,CAACI,QAAX,IAAuB,CAACJ,SAAS,CAACK,QAAtC,EAAgD;EAC/C,IAAA,MAAM,IAAI9N,SAAJ,CAAc,kCAAd,CAAN,CAAA;EACA,GAAA;;IAED,IAAI,CAAC,YAAYoH,IAAZ,CAAiBqG,SAAS,CAACI,QAA3B,CAAL,EAA2C;EAC1C,IAAA,MAAM,IAAI7N,SAAJ,CAAc,sCAAd,CAAN,CAAA;EACA,GAAA;;EAED,EAAA,IAAI6X,OAAO,CAACP,MAAR,IAAkBO,OAAO,CAACzG,IAAR,YAAwBtC,0BAAM,CAACD,QAAjD,IAA6D,CAACsI,0BAAlE,EAA8F;EAC7F,IAAA,MAAM,IAAIpnB,KAAJ,CAAU,iFAAV,CAAN,CAAA;EACA,GApBsC;;;IAuBvC,IAAI+nB,kBAAkB,GAAG,IAAzB,CAAA;;EACA,EAAA,IAAID,OAAO,CAACzG,IAAR,IAAgB,IAAhB,IAAwB,eAAgBhK,CAAAA,IAAhB,CAAqByQ,OAAO,CAAC9C,MAA7B,CAA5B,EAAkE;EACjE+C,IAAAA,kBAAkB,GAAG,GAArB,CAAA;EACA,GAAA;;EACD,EAAA,IAAID,OAAO,CAACzG,IAAR,IAAgB,IAApB,EAA0B;EACzB,IAAA,MAAM2G,UAAU,GAAGnE,aAAa,CAACiE,OAAD,CAAhC,CAAA;;EACA,IAAA,IAAI,OAAOE,UAAP,KAAsB,QAA1B,EAAoC;EACnCD,MAAAA,kBAAkB,GAAGzX,MAAM,CAAC0X,UAAD,CAA3B,CAAA;EACA,KAAA;EACD,GAAA;;EACD,EAAA,IAAID,kBAAJ,EAAwB;EACvB7F,IAAAA,OAAO,CAAC/a,GAAR,CAAY,gBAAZ,EAA8B4gB,kBAA9B,CAAA,CAAA;EACA,GAnCsC;;;EAsCvC,EAAA,IAAI,CAAC7F,OAAO,CAACnY,GAAR,CAAY,YAAZ,CAAL,EAAgC;EAC/BmY,IAAAA,OAAO,CAAC/a,GAAR,CAAY,YAAZ,EAA0B,wDAA1B,CAAA,CAAA;EACA,GAxCsC;;;IA2CvC,IAAI2gB,OAAO,CAAC7P,QAAR,IAAoB,CAACiK,OAAO,CAACnY,GAAR,CAAY,iBAAZ,CAAzB,EAAyD;EACxDmY,IAAAA,OAAO,CAAC/a,GAAR,CAAY,iBAAZ,EAA+B,cAA/B,CAAA,CAAA;EACA,GAAA;;EAED,EAAA,IAAIygB,KAAK,GAAGE,OAAO,CAACF,KAApB,CAAA;;EACA,EAAA,IAAI,OAAOA,KAAP,KAAiB,UAArB,EAAiC;EAChCA,IAAAA,KAAK,GAAGA,KAAK,CAAClK,SAAD,CAAb,CAAA;EACA,GAAA;;IAED,IAAI,CAACwE,OAAO,CAACnY,GAAR,CAAY,YAAZ,CAAD,IAA8B,CAAC6d,KAAnC,EAA0C;EACzC1F,IAAAA,OAAO,CAAC/a,GAAR,CAAY,YAAZ,EAA0B,OAA1B,CAAA,CAAA;EACA,GAtDsC;EAyDvC;;;EAEA,EAAA,OAAOR,MAAM,CAACgE,MAAP,CAAc,EAAd,EAAkB+S,SAAlB,EAA6B;MACnCsH,MAAM,EAAE8C,OAAO,CAAC9C,MADmB;EAEnC9C,IAAAA,OAAO,EAAEiE,2BAA2B,CAACjE,OAAD,CAFD;EAGnC0F,IAAAA,KAAAA;EAHmC,GAA7B,CAAP,CAAA;EAKA,CAAA;EAED;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;;EACA,SAASK,UAAT,CAAoB/nB,OAApB,EAA6B;EAC3BF,EAAAA,KAAK,CAACqI,IAAN,CAAW,IAAX,EAAiBnI,OAAjB,CAAA,CAAA;IAEA,IAAKqE,CAAAA,IAAL,GAAY,SAAZ,CAAA;EACA,EAAA,IAAA,CAAKrE,OAAL,GAAeA,OAAf,CAJ2B;;EAO3BF,EAAAA,KAAK,CAAC+gB,iBAAN,CAAwB,IAAxB,EAA8B,KAAK9gB,WAAnC,CAAA,CAAA;EACD,CAAA;;EAEDgoB,UAAU,CAAChjB,SAAX,GAAuB0B,MAAM,CAACC,MAAP,CAAc5G,KAAK,CAACiF,SAApB,CAAvB,CAAA;EACAgjB,UAAU,CAAChjB,SAAX,CAAqBhF,WAArB,GAAmCgoB,UAAnC,CAAA;EACAA,UAAU,CAAChjB,SAAX,CAAqB9E,IAArB,GAA4B,YAA5B,CAAA;EAEA,MAAM+nB,KAAK,GAAGnB,uBAAG,CAAC5I,GAAJ,IAAW6I,SAAS,CAAC7I,GAAnC;;EAGA,MAAMgK,aAAa,GAAGpJ,0BAAM,CAACoC,WAA7B,CAAA;;EAEA,MAAMiH,mBAAmB,GAAG,SAASA,mBAAT,CAA6BC,WAA7B,EAA0CC,QAA1C,EAAoD;EAC/E,EAAA,MAAMC,IAAI,GAAG,IAAIL,KAAJ,CAAUI,QAAV,EAAoBvK,QAAjC,CAAA;EACA,EAAA,MAAMmG,IAAI,GAAG,IAAIgE,KAAJ,CAAUG,WAAV,EAAuBtK,QAApC,CAAA;IAEA,OAAOwK,IAAI,KAAKrE,IAAT,IAAiBqE,IAAI,CAACA,IAAI,CAAC3pB,MAAL,GAAcslB,IAAI,CAACtlB,MAAnB,GAA4B,CAA7B,CAAJ,KAAwC,GAAxC,IAA+C2pB,IAAI,CAACC,QAAL,CAActE,IAAd,CAAvE,CAAA;EACA,CALD,CAAA;EAOA;EACA;EACA;EACA;EACA;EACA;EACA;;;EACA,SAASuE,KAAT,CAAe3S,GAAf,EAAoBjG,IAApB,EAA0B;EAEzB;EACA,EAAA,IAAI,CAAC4Y,KAAK,CAAC5jB,OAAX,EAAoB;EACnB,IAAA,MAAM,IAAI7E,KAAJ,CAAU,wEAAV,CAAN,CAAA;EACA,GAAA;;EAEDohB,EAAAA,IAAI,CAACvc,OAAL,GAAe4jB,KAAK,CAAC5jB,OAArB,CAPyB;;IAUzB,OAAO,IAAI4jB,KAAK,CAAC5jB,OAAV,CAAkB,UAAUc,OAAV,EAAmBC,MAAnB,EAA2B;EACnD;MACA,MAAMkiB,OAAO,GAAG,IAAIN,OAAJ,CAAY1R,GAAZ,EAAiBjG,IAAjB,CAAhB,CAAA;EACA,IAAA,MAAMxG,OAAO,GAAGwe,qBAAqB,CAACC,OAAD,CAArC,CAAA;EAEA,IAAA,MAAMY,IAAI,GAAG,CAACrf,OAAO,CAACyU,QAAR,KAAqB,QAArB,GAAgC3J,yBAAhC,GAAwCD,wBAAzC,EAA+C4T,OAA5D,CAAA;EACA,IAAA,MAAMP,MAAM,GAAGO,OAAO,CAACP,MAAvB,CAAA;MAEA,IAAIoB,QAAQ,GAAG,IAAf,CAAA;;EAEA,IAAA,MAAM5F,KAAK,GAAG,SAASA,KAAT,GAAiB;EAC9B,MAAA,IAAIjf,KAAK,GAAG,IAAImkB,UAAJ,CAAe,6BAAf,CAAZ,CAAA;QACAriB,MAAM,CAAC9B,KAAD,CAAN,CAAA;;QACA,IAAIgkB,OAAO,CAACzG,IAAR,IAAgByG,OAAO,CAACzG,IAAR,YAAwBtC,0BAAM,CAACD,QAAnD,EAA6D;EAC5DgJ,QAAAA,OAAO,CAACzG,IAAR,CAAauH,OAAb,CAAqB9kB,KAArB,CAAA,CAAA;EACA,OAAA;;EACD,MAAA,IAAI,CAAC6kB,QAAD,IAAa,CAACA,QAAQ,CAACtH,IAA3B,EAAiC,OAAA;EACjCsH,MAAAA,QAAQ,CAACtH,IAAT,CAActU,IAAd,CAAmB,OAAnB,EAA4BjJ,KAA5B,CAAA,CAAA;OAPD,CAAA;;EAUA,IAAA,IAAIyjB,MAAM,IAAIA,MAAM,CAACsB,OAArB,EAA8B;QAC7B9F,KAAK,EAAA,CAAA;EACL,MAAA,OAAA;EACA,KAAA;;EAED,IAAA,MAAM+F,gBAAgB,GAAG,SAASA,gBAAT,GAA4B;QACpD/F,KAAK,EAAA,CAAA;QACLgG,QAAQ,EAAA,CAAA;EACR,KAHD,CAzBmD;;;EA+BnD,IAAA,MAAMC,GAAG,GAAGN,IAAI,CAACrf,OAAD,CAAhB,CAAA;EACA,IAAA,IAAI4f,UAAJ,CAAA;;EAEA,IAAA,IAAI1B,MAAJ,EAAY;EACXA,MAAAA,MAAM,CAAC2B,gBAAP,CAAwB,OAAxB,EAAiCJ,gBAAjC,CAAA,CAAA;EACA,KAAA;;EAED,IAAA,SAASC,QAAT,GAAoB;EACnBC,MAAAA,GAAG,CAACjG,KAAJ,EAAA,CAAA;QACA,IAAIwE,MAAJ,EAAYA,MAAM,CAAC4B,mBAAP,CAA2B,OAA3B,EAAoCL,gBAApC,CAAA,CAAA;QACZ/a,YAAY,CAACkb,UAAD,CAAZ,CAAA;EACA,KAAA;;MAED,IAAInB,OAAO,CAACpG,OAAZ,EAAqB;EACpBsH,MAAAA,GAAG,CAACI,IAAJ,CAAS,QAAT,EAAmB,UAAUC,MAAV,EAAkB;UACpCJ,UAAU,GAAGpb,UAAU,CAAC,YAAY;EACnCjI,UAAAA,MAAM,CAAC,IAAI+a,UAAJ,CAAgB,CAAsBmH,oBAAAA,EAAAA,OAAO,CAAChS,GAAI,CAAlD,CAAA,EAAqD,iBAArD,CAAD,CAAN,CAAA;YACAiT,QAAQ,EAAA,CAAA;EACR,SAHsB,EAGpBjB,OAAO,CAACpG,OAHY,CAAvB,CAAA;SADD,CAAA,CAAA;EAMA,KAAA;;EAEDsH,IAAAA,GAAG,CAAClH,EAAJ,CAAO,OAAP,EAAgB,UAAUhc,GAAV,EAAe;EAC9BF,MAAAA,MAAM,CAAC,IAAI+a,UAAJ,CAAgB,CAAamH,WAAAA,EAAAA,OAAO,CAAChS,GAAI,CAAA,iBAAA,EAAmBhQ,GAAG,CAAC5F,OAAQ,CAAxE,CAAA,EAA2E,QAA3E,EAAqF4F,GAArF,CAAD,CAAN,CAAA;QACAijB,QAAQ,EAAA,CAAA;OAFT,CAAA,CAAA;EAKAC,IAAAA,GAAG,CAAClH,EAAJ,CAAO,UAAP,EAAmB,UAAUlW,GAAV,EAAe;QACjCmC,YAAY,CAACkb,UAAD,CAAZ,CAAA;QAEA,MAAM/G,OAAO,GAAGoE,oBAAoB,CAAC1a,GAAG,CAACsW,OAAL,CAApC,CAHiC;;QAMjC,IAAIuG,KAAK,CAACa,UAAN,CAAiB1d,GAAG,CAAC2d,UAArB,CAAJ,EAAsC;EACrC;UACA,MAAMC,QAAQ,GAAGtH,OAAO,CAAC5Y,GAAR,CAAY,UAAZ,CAAjB,CAFqC;;UAKrC,IAAImgB,WAAW,GAAG,IAAlB,CAAA;;UACA,IAAI;EACHA,UAAAA,WAAW,GAAGD,QAAQ,KAAK,IAAb,GAAoB,IAApB,GAA2B,IAAItB,KAAJ,CAAUsB,QAAV,EAAoB1B,OAAO,CAAChS,GAA5B,CAAA,CAAiCtX,QAAjC,EAAzC,CAAA;WADD,CAEE,OAAOsH,GAAP,EAAY;EACb;EACA;EACA;EACA,UAAA,IAAIgiB,OAAO,CAACJ,QAAR,KAAqB,QAAzB,EAAmC;cAClC9hB,MAAM,CAAC,IAAI+a,UAAJ,CAAgB,CAAA,qDAAA,EAAuD6I,QAAS,CAAhF,CAAA,EAAmF,kBAAnF,CAAD,CAAN,CAAA;cACAT,QAAQ,EAAA,CAAA;EACR,YAAA,OAAA;EACA,WAAA;EACD,SAjBoC;;;UAoBrC,QAAQjB,OAAO,CAACJ,QAAhB;EACC,UAAA,KAAK,OAAL;EACC9hB,YAAAA,MAAM,CAAC,IAAI+a,UAAJ,CAAgB,CAAyEmH,uEAAAA,EAAAA,OAAO,CAAChS,GAAI,CAArG,CAAA,EAAwG,aAAxG,CAAD,CAAN,CAAA;cACAiT,QAAQ,EAAA,CAAA;EACR,YAAA,OAAA;;EACD,UAAA,KAAK,QAAL;EACC;cACA,IAAIU,WAAW,KAAK,IAApB,EAA0B;EACzB;gBACA,IAAI;EACHvH,gBAAAA,OAAO,CAAC/a,GAAR,CAAY,UAAZ,EAAwBsiB,WAAxB,CAAA,CAAA;iBADD,CAEE,OAAO3jB,GAAP,EAAY;EACb;kBACAF,MAAM,CAACE,GAAD,CAAN,CAAA;EACA,eAAA;EACD,aAAA;;EACD,YAAA,MAAA;;EACD,UAAA,KAAK,QAAL;EACC;cACA,IAAI2jB,WAAW,KAAK,IAApB,EAA0B;EACzB,cAAA,MAAA;EACA,aAJF;;;EAOC,YAAA,IAAI3B,OAAO,CAAClQ,OAAR,IAAmBkQ,OAAO,CAACH,MAA/B,EAAuC;EACtC/hB,cAAAA,MAAM,CAAC,IAAI+a,UAAJ,CAAgB,CAA+BmH,6BAAAA,EAAAA,OAAO,CAAChS,GAAI,CAA3D,CAAA,EAA8D,cAA9D,CAAD,CAAN,CAAA;gBACAiT,QAAQ,EAAA,CAAA;EACR,cAAA,OAAA;EACA,aAXF;EAcC;;;EACA,YAAA,MAAMW,WAAW,GAAG;EACnBxH,cAAAA,OAAO,EAAE,IAAIwC,OAAJ,CAAYoD,OAAO,CAAC5F,OAApB,CADU;gBAEnByF,MAAM,EAAEG,OAAO,CAACH,MAFG;EAGnB/P,cAAAA,OAAO,EAAEkQ,OAAO,CAAClQ,OAAR,GAAkB,CAHR;gBAInBgQ,KAAK,EAAEE,OAAO,CAACF,KAJI;gBAKnB3P,QAAQ,EAAE6P,OAAO,CAAC7P,QALC;gBAMnB+M,MAAM,EAAE8C,OAAO,CAAC9C,MANG;gBAOnB3D,IAAI,EAAEyG,OAAO,CAACzG,IAPK;gBAQnBkG,MAAM,EAAEO,OAAO,CAACP,MARG;gBASnB7F,OAAO,EAAEoG,OAAO,CAACpG,OATE;gBAUnB9B,IAAI,EAAEkI,OAAO,CAAClI,IAAAA;eAVf,CAAA;;cAaA,IAAI,CAACwI,mBAAmB,CAACN,OAAO,CAAChS,GAAT,EAAc2T,WAAd,CAAxB,EAAoD;EACnD,cAAA,KAAK,MAAMtpB,IAAX,IAAmB,CAAC,eAAD,EAAkB,kBAAlB,EAAsC,QAAtC,EAAgD,SAAhD,CAAnB,EAA+E;EAC9EupB,gBAAAA,WAAW,CAACxH,OAAZ,CAAoBmB,MAApB,CAA2BljB,IAA3B,CAAA,CAAA;EACA,eAAA;EACD,aAhCF;;;EAmCC,YAAA,IAAIyL,GAAG,CAAC2d,UAAJ,KAAmB,GAAnB,IAA0BzB,OAAO,CAACzG,IAAlC,IAA0CwC,aAAa,CAACiE,OAAD,CAAb,KAA2B,IAAzE,EAA+E;gBAC9EliB,MAAM,CAAC,IAAI+a,UAAJ,CAAe,0DAAf,EAA2E,sBAA3E,CAAD,CAAN,CAAA;gBACAoI,QAAQ,EAAA,CAAA;EACR,cAAA,OAAA;EACA,aAvCF;;;cA0CC,IAAInd,GAAG,CAAC2d,UAAJ,KAAmB,GAAnB,IAA0B,CAAC3d,GAAG,CAAC2d,UAAJ,KAAmB,GAAnB,IAA0B3d,GAAG,CAAC2d,UAAJ,KAAmB,GAA9C,KAAsDzB,OAAO,CAAC9C,MAAR,KAAmB,MAAvG,EAA+G;gBAC9G0E,WAAW,CAAC1E,MAAZ,GAAqB,KAArB,CAAA;gBACA0E,WAAW,CAACrI,IAAZ,GAAmBjR,SAAnB,CAAA;EACAsZ,cAAAA,WAAW,CAACxH,OAAZ,CAAoBmB,MAApB,CAA2B,gBAA3B,CAAA,CAAA;EACA,aA9CF;;;cAiDC1d,OAAO,CAAC8iB,KAAK,CAAC,IAAIjB,OAAJ,CAAYiC,WAAZ,EAAyBC,WAAzB,CAAD,CAAN,CAAP,CAAA;cACAX,QAAQ,EAAA,CAAA;EACR,YAAA,OAAA;EApEF,SAAA;EAsEA,OAhGgC;;;EAmGjCnd,MAAAA,GAAG,CAACwd,IAAJ,CAAS,KAAT,EAAgB,YAAY;UAC3B,IAAI7B,MAAJ,EAAYA,MAAM,CAAC4B,mBAAP,CAA2B,OAA3B,EAAoCL,gBAApC,CAAA,CAAA;SADb,CAAA,CAAA;QAGA,IAAIzH,IAAI,GAAGzV,GAAG,CAAC+X,IAAJ,CAAS,IAAIwE,aAAJ,EAAT,CAAX,CAAA;EAEA,MAAA,MAAMwB,gBAAgB,GAAG;UACxB7T,GAAG,EAAEgS,OAAO,CAAChS,GADW;UAExBnD,MAAM,EAAE/G,GAAG,CAAC2d,UAFY;UAGxB5C,UAAU,EAAE/a,GAAG,CAACge,aAHQ;EAIxB1H,QAAAA,OAAO,EAAEA,OAJe;UAKxBtC,IAAI,EAAEkI,OAAO,CAAClI,IALU;UAMxB8B,OAAO,EAAEoG,OAAO,CAACpG,OANO;UAOxB9J,OAAO,EAAEkQ,OAAO,CAAClQ,OAAAA;EAPO,OAAzB,CAxGiC;;QAmHjC,MAAMiS,OAAO,GAAG3H,OAAO,CAAC5Y,GAAR,CAAY,kBAAZ,CAAhB,CAnHiC;EAuHjC;EACA;EACA;EACA;EACA;EACA;;QACA,IAAI,CAACwe,OAAO,CAAC7P,QAAT,IAAqB6P,OAAO,CAAC9C,MAAR,KAAmB,MAAxC,IAAkD6E,OAAO,KAAK,IAA9D,IAAsEje,GAAG,CAAC2d,UAAJ,KAAmB,GAAzF,IAAgG3d,GAAG,CAAC2d,UAAJ,KAAmB,GAAvH,EAA4H;EAC3HZ,QAAAA,QAAQ,GAAG,IAAIlC,QAAJ,CAAapF,IAAb,EAAmBsI,gBAAnB,CAAX,CAAA;UACAhkB,OAAO,CAACgjB,QAAD,CAAP,CAAA;EACA,QAAA,OAAA;EACA,OAjIgC;EAoIjC;EACA;EACA;EACA;;;EACA,MAAA,MAAMmB,WAAW,GAAG;UACnBC,KAAK,EAAEC,wBAAI,CAACC,YADO;UAEnBC,WAAW,EAAEF,wBAAI,CAACC,YAAAA;EAFC,OAApB,CAxIiC;;EA8IjC,MAAA,IAAIJ,OAAO,IAAI,MAAX,IAAqBA,OAAO,IAAI,QAApC,EAA8C;UAC7CxI,IAAI,GAAGA,IAAI,CAACsC,IAAL,CAAUqG,wBAAI,CAACG,YAAL,CAAkBL,WAAlB,CAAV,CAAP,CAAA;EACAnB,QAAAA,QAAQ,GAAG,IAAIlC,QAAJ,CAAapF,IAAb,EAAmBsI,gBAAnB,CAAX,CAAA;UACAhkB,OAAO,CAACgjB,QAAD,CAAP,CAAA;EACA,QAAA,OAAA;EACA,OAnJgC;;;EAsJjC,MAAA,IAAIkB,OAAO,IAAI,SAAX,IAAwBA,OAAO,IAAI,WAAvC,EAAoD;EACnD;EACA;UACA,MAAMhF,GAAG,GAAGjZ,GAAG,CAAC+X,IAAJ,CAAS,IAAIwE,aAAJ,EAAT,CAAZ,CAAA;EACAtD,QAAAA,GAAG,CAACuE,IAAJ,CAAS,MAAT,EAAiB,UAAUnG,KAAV,EAAiB;EACjC;YACA,IAAI,CAACA,KAAK,CAAC,CAAD,CAAL,GAAW,IAAZ,MAAsB,IAA1B,EAAgC;cAC/B5B,IAAI,GAAGA,IAAI,CAACsC,IAAL,CAAUqG,wBAAI,CAACI,aAAL,EAAV,CAAP,CAAA;EACA,WAFD,MAEO;cACN/I,IAAI,GAAGA,IAAI,CAACsC,IAAL,CAAUqG,wBAAI,CAACK,gBAAL,EAAV,CAAP,CAAA;EACA,WAAA;;EACD1B,UAAAA,QAAQ,GAAG,IAAIlC,QAAJ,CAAapF,IAAb,EAAmBsI,gBAAnB,CAAX,CAAA;YACAhkB,OAAO,CAACgjB,QAAD,CAAP,CAAA;WARD,CAAA,CAAA;EAUA,QAAA,OAAA;EACA,OArKgC;;;QAwKjC,IAAIkB,OAAO,IAAI,IAAX,IAAmB,OAAOG,wBAAI,CAACM,sBAAZ,KAAuC,UAA9D,EAA0E;UACzEjJ,IAAI,GAAGA,IAAI,CAACsC,IAAL,CAAUqG,wBAAI,CAACM,sBAAL,EAAV,CAAP,CAAA;EACA3B,QAAAA,QAAQ,GAAG,IAAIlC,QAAJ,CAAapF,IAAb,EAAmBsI,gBAAnB,CAAX,CAAA;UACAhkB,OAAO,CAACgjB,QAAD,CAAP,CAAA;EACA,QAAA,OAAA;EACA,OA7KgC;;;EAgLjCA,MAAAA,QAAQ,GAAG,IAAIlC,QAAJ,CAAapF,IAAb,EAAmBsI,gBAAnB,CAAX,CAAA;QACAhkB,OAAO,CAACgjB,QAAD,CAAP,CAAA;OAjLD,CAAA,CAAA;EAoLA1E,IAAAA,aAAa,CAAC+E,GAAD,EAAMlB,OAAN,CAAb,CAAA;EACA,GA/OM,CAAP,CAAA;EAgPA,CAAA;EACD;EACA;EACA;EACA;EACA;EACA;;;EACAW,KAAK,CAACa,UAAN,GAAmB,UAAUzI,IAAV,EAAgB;EAClC,EAAA,OAAOA,IAAI,KAAK,GAAT,IAAgBA,IAAI,KAAK,GAAzB,IAAgCA,IAAI,KAAK,GAAzC,IAAgDA,IAAI,KAAK,GAAzD,IAAgEA,IAAI,KAAK,GAAhF,CAAA;EACA,CAFD;;;EAKA4H,KAAK,CAAC5jB,OAAN,GAAgB2D,MAAM,CAAC3D,OAAvB;;;EClpDA,EAAA,IAAI,OAAO8B,MAAM,CAACC,MAAd,KAAyB,UAA7B,EAAyC;EACzC;MACE+B,cAAA,GAAiB,SAAS4hB,QAAT,CAAkBC,IAAlB,EAAwBC,SAAxB,EAAmC;EAClD,MAAA,IAAIA,SAAJ,EAAe;UACbD,IAAI,CAACE,MAAL,GAAcD,SAAd,CAAA;UACAD,IAAI,CAACvlB,SAAL,GAAiB0B,MAAM,CAACC,MAAP,CAAc6jB,SAAS,CAACxlB,SAAxB,EAAmC;EAClDhF,UAAAA,WAAW,EAAE;EACXb,YAAAA,KAAK,EAAEorB,IADI;EAEX5iB,YAAAA,UAAU,EAAE,KAFD;EAGX8Y,YAAAA,QAAQ,EAAE,IAHC;EAIXnC,YAAAA,YAAY,EAAE,IAAA;EAJH,WAAA;EADqC,SAAnC,CAAjB,CAAA;EAQD,OAAA;OAXH,CAAA;EAaD,GAfD,MAeO;EACP;MACE5V,cAAA,GAAiB,SAAS4hB,QAAT,CAAkBC,IAAlB,EAAwBC,SAAxB,EAAmC;EAClD,MAAA,IAAIA,SAAJ,EAAe;UACbD,IAAI,CAACE,MAAL,GAAcD,SAAd,CAAA;;EACA,QAAA,IAAIE,QAAQ,GAAG,YAAY,EAA3B,CAAA;;EACAA,QAAAA,QAAQ,CAAC1lB,SAAT,GAAqBwlB,SAAS,CAACxlB,SAA/B,CAAA;EACAulB,QAAAA,IAAI,CAACvlB,SAAL,GAAiB,IAAI0lB,QAAJ,EAAjB,CAAA;EACAH,QAAAA,IAAI,CAACvlB,SAAL,CAAehF,WAAf,GAA6BuqB,IAA7B,CAAA;EACD,OAAA;OAPH,CAAA;EASF,GAAA;;;;IC1BA,IAAI;MACF,IAAII,IAAI,GAAG1hB,8BAAX,CAAA;EACF;;MACE,IAAI,OAAO0hB,IAAI,CAACL,QAAZ,KAAyB,UAA7B,EAAyC,MAAM,EAAN,CAAA;EACzC5hB,IAAAA,MAAiB,CAAAC,OAAjB,GAAiBgiB,IAAI,CAACL,QAAtB,CAAA;KAJF,CAKE,OAAOhX,CAAP,EAAU;EACZ;MACE5K,MAAA,CAAAC,OAAA,GAAiBO,gBAAjB,CAAA;EACF,GAAA;;;ECPA,IAAIN,YAAY,GAAGK,8BAAiB,CAACL,YAArC,CAAA;EAEA,IAAAgiB,KAAc,GAAGC,KAAjB,CAAA;EACA,IAAAC,QAAsB,GAAGD,KAAzB,CAAA;;EAEA,SAASA,KAAT,CAAgBzhB,OAAhB,EAAyB;EACvB,EAAA,IAAI,EAAE,IAAA,YAAgByhB,KAAlB,CAAJ,EAA8B;EAC5B,IAAA,OAAO,IAAIA,KAAJ,CAAUzhB,OAAV,CAAP,CAAA;EACD,GAAA;;IAEDR,YAAY,CAACR,IAAb,CAAkB,IAAlB,CAAA,CAAA;IACAgB,OAAO,GAAGA,OAAO,IAAI,EAArB,CAAA;EACA,EAAA,IAAA,CAAK2hB,WAAL,GAAmB3hB,OAAO,CAAC2hB,WAAR,IAAuBzlB,QAA1C,CAAA;EACA,EAAA,IAAA,CAAKmc,OAAL,GAAerY,OAAO,CAACqY,OAAR,IAAmB,CAAlC,CAAA;EACA,EAAA,IAAA,CAAKuJ,SAAL,GAAiB5hB,OAAO,CAAC4hB,SAAR,IAAqB,KAAtC,CAAA;EACA,EAAA,IAAA,CAAKC,OAAL,GAAe7hB,OAAO,CAAC6hB,OAAR,IAAmB,IAAlC,CAAA;IACA,IAAKC,CAAAA,OAAL,GAAe,CAAf,CAAA;IACA,IAAKC,CAAAA,OAAL,GAAe,CAAf,CAAA;IACA,IAAKC,CAAAA,OAAL,GAAe,KAAf,CAAA;IACA,IAAKC,CAAAA,IAAL,GAAY,EAAZ,CAAA;IACA,IAAKC,CAAAA,MAAL,GAAc,EAAd,CAAA;EACD,CAAA;;EACDhB,QAAQ,CAACO,KAAD,EAAQjiB,YAAR,CAAR,CAAA;EAEA,IAAI2iB,YAAY,GAAG,CACjB,KADiB,EAEjB,OAFiB,EAGjB,SAHiB,EAIjB,aAJiB,CAAnB,CAAA;EAOAA,YAAY,CAAC3oB,OAAb,CAAqB,UAAUmiB,MAAV,EAAkB;EACrC8F,EAAAA,KAAK,CAAC7lB,SAAN,CAAgB+f,MAAhB,IAA0B,YAAY;EACpC,IAAA,OAAOvY,KAAK,CAACxH,SAAN,CAAgB+f,MAAhB,CAAA,CAAwBpS,KAAxB,CAA8B,IAAK0Y,CAAAA,IAAnC,EAAyClN,SAAzC,CAAP,CAAA;KADF,CAAA;EAGD,CAJD,CAAA,CAAA;;EAMA0M,KAAK,CAAC7lB,SAAN,CAAgB1C,KAAhB,GAAwB,UAAUkpB,KAAV,EAAiB7nB,GAAjB,EAAsB;IAC5C,IAAK0nB,CAAAA,IAAL,GAAY,IAAA,CAAKA,IAAL,CAAU/oB,KAAV,CAAgBkpB,KAAhB,EAAuB7nB,GAAvB,CAAZ,CAAA;EACA,EAAA,OAAO,IAAP,CAAA;EACD,CAHD,CAAA;;EAKAknB,KAAK,CAAC7lB,SAAN,CAAgBymB,OAAhB,GAA0B,YAAY;IACpC,IAAKJ,CAAAA,IAAL,CAAUI,OAAV,EAAA,CAAA;EACA,EAAA,OAAO,IAAP,CAAA;EACD,CAHD,CAAA;;EAKA,IAAIC,eAAe,GAAG,CACpB,MADoB,EAEpB,SAFoB,EAGpB,QAHoB,CAAtB,CAAA;EAMAA,eAAe,CAAC9oB,OAAhB,CAAwB,UAAUmiB,MAAV,EAAkB;EACxC8F,EAAAA,KAAK,CAAC7lB,SAAN,CAAgB+f,MAAhB,IAA0B,YAAY;EACpC,IAAA,IAAI4G,YAAY,GAAGnf,KAAK,CAACxH,SAAN,CAAgB+f,MAAhB,CAAwBpS,CAAAA,KAAxB,CAA8B,IAAA,CAAK0Y,IAAnC,EAAyClN,SAAzC,CAAnB,CAAA;;MACA,IAAI,IAAA,CAAK6M,SAAT,EAAoB;EAClB,MAAA,IAAA,CAAKtnB,KAAL,EAAA,CAAA;EACD,KAAA;;EACD,IAAA,OAAOioB,YAAP,CAAA;KALF,CAAA;EAOD,CARD,CAAA,CAAA;EAUAjlB,MAAM,CAACkB,cAAP,CAAsBijB,KAAK,CAAC7lB,SAA5B,EAAuC,QAAvC,EAAiD;EAC/CqE,EAAAA,GAAG,EAAE,YAAY;EACf,IAAA,OAAO,KAAK6hB,OAAL,GAAe,IAAKG,CAAAA,IAAL,CAAU1sB,MAAhC,CAAA;EACD,GAAA;EAH8C,CAAjD,CAAA,CAAA;;EAMAksB,KAAK,CAAC7lB,SAAN,CAAgBtB,KAAhB,GAAwB,UAAU+H,EAAV,EAAc;EACpC,EAAA,IAAIA,EAAJ,EAAQ;EACNmgB,IAAAA,gBAAgB,CAACxjB,IAAjB,CAAsB,IAAtB,EAA4BqD,EAA5B,CAAA,CAAA;EACD,GAAA;;IAED,IAAK2f,CAAAA,OAAL,GAAe,IAAf,CAAA;;EAEA,EAAA,IAAI,IAAKF,CAAAA,OAAL,IAAgB,IAAA,CAAKH,WAAzB,EAAsC;EACpC,IAAA,OAAA;EACD,GAAA;;EAED,EAAA,IAAI,KAAKM,IAAL,CAAU1sB,MAAV,KAAqB,CAAzB,EAA4B;EAC1B,IAAA,IAAI,IAAKusB,CAAAA,OAAL,KAAiB,CAArB,EAAwB;QACtBjF,IAAI,CAAC7d,IAAL,CAAU,IAAV,CAAA,CAAA;EACD,KAAA;;EACD,IAAA,OAAA;EACD,GAAA;;IAED,IAAIyjB,IAAI,GAAG,IAAX,CAAA;EACA,EAAA,IAAIC,GAAG,GAAG,IAAA,CAAKT,IAAL,CAAUjP,KAAV,EAAV,CAAA;IACA,IAAI+M,IAAI,GAAG,IAAX,CAAA;IACA,IAAIgC,OAAO,GAAG,IAAA,CAAKA,OAAnB,CAAA;IACA,IAAIY,SAAS,GAAG,IAAhB,CAAA;IACA,IAAIC,UAAU,GAAG,KAAjB,CAAA;IACA,IAAIC,WAAW,GAAG,IAAlB,CAAA;EACA,EAAA,IAAIxK,OAAO,GAAGqK,GAAG,CAACI,cAAJ,CAAmB,SAAnB,CAAA,GAAgCJ,GAAG,CAACrK,OAApC,GAA8C,KAAKA,OAAjE,CAAA;;EAEA,EAAA,SAASsE,IAAT,CAAelgB,GAAf,EAAoBjH,MAApB,EAA4B;EAC1B,IAAA,IAAIuqB,IAAI,IAAI0C,IAAI,CAACV,OAAL,KAAiBA,OAA7B,EAAsC;EACpChC,MAAAA,IAAI,GAAG,KAAP,CAAA;EACA0C,MAAAA,IAAI,CAACX,OAAL,EAAA,CAAA;;QACA,IAAIa,SAAS,KAAK,IAAlB,EAAwB;EACtB,QAAA,OAAOF,IAAI,CAACP,MAAL,CAAYS,SAAZ,CAAP,CAAA;UACAje,YAAY,CAACie,SAAD,CAAZ,CAAA;EACD,OAAA;;EAED,MAAA,IAAIlmB,GAAJ,EAAS;EACPgmB,QAAAA,IAAI,CAAC/e,IAAL,CAAU,OAAV,EAAmBjH,GAAnB,EAAwBimB,GAAxB,CAAA,CAAA;EACD,OAFD,MAEO,IAAIE,UAAU,KAAK,KAAnB,EAA0B;UAC/B,IAAIC,WAAW,KAAK,IAApB,EAA0B;EACxBJ,UAAAA,IAAI,CAACZ,OAAL,CAAagB,WAAb,CAAA,GAA4Bzf,KAAK,CAACxH,SAAN,CAAgB1C,KAAhB,CAAsB8F,IAAtB,CAA2B+V,SAA3B,EAAsC,CAAtC,CAA5B,CAAA;EACD,SAAA;;EACD0N,QAAAA,IAAI,CAAC/e,IAAL,CAAU,SAAV,EAAqBlO,MAArB,EAA6BktB,GAA7B,CAAA,CAAA;EACD,OAAA;;EAED,MAAA,IAAID,IAAI,CAACV,OAAL,KAAiBA,OAArB,EAA8B;EAC5B,QAAA,IAAIU,IAAI,CAACX,OAAL,KAAiB,CAAjB,IAAsBW,IAAI,CAACR,IAAL,CAAU1sB,MAAV,KAAqB,CAA/C,EAAkD;YAChDsnB,IAAI,CAAC7d,IAAL,CAAUyjB,IAAV,CAAA,CAAA;EACD,SAFD,MAEO,IAAIA,IAAI,CAACT,OAAT,EAAkB;EACvBS,UAAAA,IAAI,CAACnoB,KAAL,EAAA,CAAA;EACD,SAAA;EACF,OAAA;EACF,KAAA;EACF,GAAA;;EAED,EAAA,IAAI+d,OAAJ,EAAa;MACXsK,SAAS,GAAGne,UAAU,CAAC,YAAY;EACjCoe,MAAAA,UAAU,GAAG,IAAb,CAAA;;QACA,IAAIH,IAAI,CAACM,SAAL,CAAe,SAAf,CAA0BxtB,CAAAA,MAA1B,GAAmC,CAAvC,EAA0C;EACxCktB,QAAAA,IAAI,CAAC/e,IAAL,CAAU,SAAV,EAAqBiZ,IAArB,EAA2B+F,GAA3B,CAAA,CAAA;EACD,OAFD,MAEO;UACL/F,IAAI,EAAA,CAAA;EACL,OAAA;OANmB,EAOnBtE,OAPmB,CAAtB,CAAA;EAQA,IAAA,IAAA,CAAK6J,MAAL,CAAYS,SAAZ,CAAA,GAAyBA,SAAzB,CAAA;EACD,GAAA;;IAED,IAAI,IAAA,CAAKd,OAAT,EAAkB;EAChBgB,IAAAA,WAAW,GAAG,IAAA,CAAKhB,OAAL,CAAatsB,MAA3B,CAAA;EACA,IAAA,IAAA,CAAKssB,OAAL,CAAagB,WAAb,CAAA,GAA4B,IAA5B,CAAA;EACD,GAAA;;EAED,EAAA,IAAA,CAAKf,OAAL,EAAA,CAAA;EACAW,EAAAA,IAAI,CAAC/e,IAAL,CAAU,OAAV,EAAmBgf,GAAnB,CAAA,CAAA;EACA,EAAA,IAAIM,OAAO,GAAGN,GAAG,CAAC/F,IAAD,CAAjB,CAAA;;EACA,EAAA,IAAIqG,OAAO,IAAIA,OAAO,CAACxmB,IAAnB,IAA2B,OAAOwmB,OAAO,CAACxmB,IAAf,KAAwB,UAAvD,EAAmE;EACjEwmB,IAAAA,OAAO,CAACxmB,IAAR,CAAa,UAAUhH,MAAV,EAAkB;EAC7B,MAAA,OAAOmnB,IAAI,CAAC,IAAD,EAAOnnB,MAAP,CAAX,CAAA;EACD,KAFD,CAEGytB,CAAAA,KAFH,CAES,UAAUxmB,GAAV,EAAe;EACtB,MAAA,OAAOkgB,IAAI,CAAClgB,GAAG,IAAI,IAAR,CAAX,CAAA;OAHF,CAAA,CAAA;EAKD,GAAA;;IAED,IAAI,IAAA,CAAKulB,OAAL,IAAgB,IAAA,CAAKC,IAAL,CAAU1sB,MAAV,GAAmB,CAAvC,EAA0C;EACxC,IAAA,IAAA,CAAK+E,KAAL,EAAA,CAAA;EACD,GAAA;EACF,CAtFD,CAAA;;EAwFAmnB,KAAK,CAAC7lB,SAAN,CAAgBsnB,IAAhB,GAAuB,YAAY;IACjC,IAAKlB,CAAAA,OAAL,GAAe,KAAf,CAAA;EACD,CAFD,CAAA;;EAIAP,KAAK,CAAC7lB,SAAN,CAAgBrB,GAAhB,GAAsB,UAAUkC,GAAV,EAAe;IACnC0mB,WAAW,CAACnkB,IAAZ,CAAiB,IAAjB,CAAA,CAAA;EACA,EAAA,IAAA,CAAKijB,IAAL,CAAU1sB,MAAV,GAAmB,CAAnB,CAAA;IACA,IAAKusB,CAAAA,OAAL,GAAe,CAAf,CAAA;EACAjF,EAAAA,IAAI,CAAC7d,IAAL,CAAU,IAAV,EAAgBvC,GAAhB,CAAA,CAAA;EACD,CALD,CAAA;;EAOA,SAAS0mB,WAAT,GAAwB;EACtB,EAAA,KAAK,IAAIxlB,GAAT,IAAgB,IAAA,CAAKukB,MAArB,EAA6B;EAC3B,IAAA,IAAIS,SAAS,GAAG,IAAA,CAAKT,MAAL,CAAYvkB,GAAZ,CAAhB,CAAA;EACA,IAAA,OAAO,IAAKukB,CAAAA,MAAL,CAAYvkB,GAAZ,CAAP,CAAA;MACA+G,YAAY,CAACie,SAAD,CAAZ,CAAA;EACD,GAAA;EACF,CAAA;;EAED,SAASH,gBAAT,CAA2BngB,EAA3B,EAA+B;IAC7B,IAAIogB,IAAI,GAAG,IAAX,CAAA;EACA,EAAA,IAAA,CAAKhK,EAAL,CAAQ,OAAR,EAAiB2K,OAAjB,CAAA,CAAA;EACA,EAAA,IAAA,CAAK3K,EAAL,CAAQ,KAAR,EAAe4K,KAAf,CAAA,CAAA;;IAEA,SAASD,OAAT,CAAkB3mB,GAAlB,EAAuB;MAAEgmB,IAAI,CAACloB,GAAL,CAASkC,GAAT,CAAA,CAAA;EAAe,GAAA;;IACxC,SAAS4mB,KAAT,CAAgB5mB,GAAhB,EAAqB;EACnBgmB,IAAAA,IAAI,CAACa,cAAL,CAAoB,OAApB,EAA6BF,OAA7B,CAAA,CAAA;EACAX,IAAAA,IAAI,CAACa,cAAL,CAAoB,KAApB,EAA2BD,KAA3B,CAAA,CAAA;EACAhhB,IAAAA,EAAE,CAAC5F,GAAD,EAAM,IAAA,CAAKolB,OAAX,CAAF,CAAA;EACD,GAAA;EACF,CAAA;;EAED,SAAShF,IAAT,CAAepgB,GAAf,EAAoB;EAClB,EAAA,IAAA,CAAKslB,OAAL,EAAA,CAAA;IACA,IAAKC,CAAAA,OAAL,GAAe,KAAf,CAAA;EACA,EAAA,IAAA,CAAKte,IAAL,CAAU,KAAV,EAAiBjH,GAAjB,CAAA,CAAA;EACF,CAAA;;;;;ECjMAa,EAAAA,MAAM,CAACkB,cAAP,CAAqBe,OAArB,EAA+B,YAA/B,EAA6C;EAAExJ,IAAAA,KAAK,EAAE,IAAA;KAAtD,CAAA,CAAA;EACAwJ,EAAAA,OAAc,CAAAgkB,GAAd,GAAc,KAAK,CAAnB,CAAA;IACAhkB,OAAc,CAAAgkB,GAAd,GAAc;MACVC,QAAQ,CAAC5X,MAAD,EAAS;QACb,OAAQ,IAAA,KAASA,MAAM,CAACzW,QAAP,CAAgB,OAAhB,EAAyB,CAAzB,EAA4B,CAA5B,CAAjB,CAAA;OAFM;;MAIVsuB,SAAS,CAAC7X,MAAD,EAAS;QACd,OAAO;UACHzU,MAAM,EAAExB,IAAI,CAACc,GAAL,CAASmV,MAAM,CAAC8X,WAAP,CAAmB,EAAnB,CAAT,CADL;EAEHxsB,QAAAA,KAAK,EAAE0U,MAAM,CAAC+X,YAAP,CAAoB,EAApB,CAAA;SAFX,CAAA;EAIH,KAAA;;KATL,CAAA;;;;;ECFArmB,EAAAA,MAAM,CAACkB,cAAP,CAAqBe,OAArB,EAA+B,YAA/B,EAA6C;EAAExJ,IAAAA,KAAK,EAAE,IAAA;KAAtD,CAAA,CAAA;EACAwJ,EAAAA,OAAc,CAAAqkB,GAAd,GAAc,KAAK,CAAnB,CAAA;IACA,MAAMC,SAAS,GAAG,CAAlB,CAAA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EACA,EAAA,MAAMC,WAAW,GAAG,CAAA,GAAI,CAAJ,GAAQ,CAA5B;;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EACA,EAAA,MAAMC,gBAAgB,GAAG,CAAA,GAAI,CAAJ,GAAQ,CAAR,GAAY,CAAZ,GAAgB,CAAhB,GAAoB,CAApB,GAAwB,CAAxB,GAA4B,CAArD;;EACA,EAAA,SAASC,iBAAT,CAA2BpY,MAA3B,EAAmCqY,MAAnC,EAA2C;EACvC,IAAA,MAAMluB,KAAK,GAAG6V,MAAM,CAACsY,SAAP,CAAiBD,MAAjB,CAAd,CAAA;EACA,IAAA,OAAOluB,KAAK,KAAK,CAAV,GAAc,GAAd,GAAoBA,KAA3B,CAAA;EACH,GAAA;;EACD,EAAA,SAASouB,YAAT,CAAsBvY,MAAtB,EAA8BwY,UAA9B,EAA0C;EACtC,IAAA,MAAMH,MAAM,GAAGH,WAAW,GAAIM,UAAU,GAAGL,gBAA3C,CAAA;MACA,OAAO;QACH5sB,MAAM,EAAE6sB,iBAAiB,CAACpY,MAAD,EAASqY,MAAM,GAAG,CAAlB,CADtB;EAEH/sB,MAAAA,KAAK,EAAE8sB,iBAAiB,CAACpY,MAAD,EAASqY,MAAT,CAAA;OAF5B,CAAA;EAIH,GAAA;;IACD1kB,OAAc,CAAAqkB,GAAd,GAAc;MACVJ,QAAQ,CAAC5X,MAAD,EAAS;EACb,MAAA,IAAIA,MAAM,CAACyY,YAAP,CAAoB,CAApB,CAAA,KAA2B,CAA/B,EAAkC;EAC9B,QAAA,OAAO,KAAP,CAAA;EACH,OAAA;;EACD,MAAA,OAAOzY,MAAM,CAACyY,YAAP,CAAoB,CAApB,MAA2BR,SAAlC,CAAA;OALM;;MAOVJ,SAAS,CAAC7X,MAAD,EAAS;EACd,MAAA,MAAM0Y,QAAQ,GAAG1Y,MAAM,CAACyY,YAAP,CAAoB,CAApB,CAAjB,CAAA;EACA,MAAA,MAAME,SAAS,GAAGJ,YAAY,CAACvY,MAAD,EAAS,CAAT,CAA9B,CAAA;;QACA,IAAI0Y,QAAQ,KAAK,CAAjB,EAAoB;EAChB,QAAA,OAAOC,SAAP,CAAA;EACH,OAAA;;EACD,MAAA,MAAMC,IAAI,GAAG,CAACD,SAAD,CAAb,CAAA;;EACA,MAAA,KAAK,IAAIH,UAAU,GAAG,CAAtB,EAAyBA,UAAU,GAAGE,QAAtC,EAAgDF,UAAU,IAAI,CAA9D,EAAiE;UAC7DI,IAAI,CAACzrB,IAAL,CAAUorB,YAAY,CAACvY,MAAD,EAASwY,UAAT,CAAtB,CAAA,CAAA;EACH,OAAA;;EACD,MAAA,MAAM5uB,MAAM,GAAG;UACX2B,MAAM,EAAEotB,SAAS,CAACptB,MADP;EAEXstB,QAAAA,MAAM,EAAED,IAFG;UAGXttB,KAAK,EAAEqtB,SAAS,CAACrtB,KAAAA;SAHrB,CAAA;EAKA,MAAA,OAAO1B,MAAP,CAAA;EACH,KAAA;;KAvBL,CAAA;;;;;ECzCA8H,EAAAA,MAAM,CAACkB,cAAP,CAAqBe,OAArB,EAA+B,YAA/B,EAA6C;EAAExJ,IAAAA,KAAK,EAAE,IAAA;KAAtD,CAAA,CAAA;EACAwJ,EAAAA,OAAc,CAAAmlB,GAAd,GAAc,KAAK,CAAnB,CAAA;IAEA,MAAMC,WAAW,GAAG,CAApB,CAAA;IACAplB,OAAc,CAAAmlB,GAAd,GAAc;MACVlB,QAAQ,CAAC5X,MAAD,EAAS;EACb,MAAA,IAAIA,MAAM,CAACyY,YAAP,CAAoB,CAApB,CAAA,KAA2B,CAA/B,EAAkC;EAC9B,QAAA,OAAO,KAAP,CAAA;EACH,OAAA;;EACD,MAAA,OAAOzY,MAAM,CAACyY,YAAP,CAAoB,CAApB,MAA2BM,WAAlC,CAAA;OALM;;MAOVlB,SAAS,CAAC7X,MAAD,EAAS;EACd,MAAA,OAAOgZ,GAAK,CAAChB,GAAN,CAAUH,SAAV,CAAoB7X,MAApB,CAAP,CAAA;EACH,KAAA;;KATL,CAAA;;;;;ECJAtO,EAAAA,MAAM,CAACkB,cAAP,CAAqBe,OAArB,EAA+B,YAA/B,EAA6C;EAAExJ,IAAAA,KAAK,EAAE,IAAA;KAAtD,CAAA,CAAA;EACAwJ,EAAAA,OAAc,CAAAslB,GAAd,GAAc,KAAK,CAAnB,CAAA;IACAtlB,OAAc,CAAAslB,GAAd,GAAc;MACVrB,QAAQ,CAAC5X,MAAD,EAAS;EACb,MAAA,OAAOA,MAAM,CAAC+X,YAAP,CAAoB,CAApB,MAA2B,UAAlC,CAAA;OAFM;;MAIVF,SAAS,CAAC7X,MAAD,EAAS;QACd,OAAO;EACHzU,QAAAA,MAAM,EAAEyU,MAAM,CAAC+X,YAAP,CAAoB,EAApB,CADL;EAEHzsB,QAAAA,KAAK,EAAE0U,MAAM,CAAC+X,YAAP,CAAoB,EAApB,CAAA;SAFX,CAAA;EAIH,KAAA;;KATL,CAAA;;;;;ECFArmB,EAAAA,MAAM,CAACkB,cAAP,CAAqBe,OAArB,EAA+B,YAA/B,EAA6C;EAAExJ,IAAAA,KAAK,EAAE,IAAA;KAAtD,CAAA,CAAA;EACAwJ,EAAAA,OAAc,CAAAulB,GAAd,GAAc,KAAK,CAAnB,CAAA;IACA,MAAMC,SAAS,GAAG,YAAlB,CAAA;IACAxlB,OAAc,CAAAulB,GAAd,GAAc;MACVtB,QAAQ,CAAC5X,MAAD,EAAS;QACb,MAAMoZ,SAAS,GAAGpZ,MAAM,CAACzW,QAAP,CAAgB,OAAhB,EAAyB,CAAzB,EAA4B,CAA5B,CAAlB,CAAA;EACA,MAAA,OAAQ4vB,SAAS,CAAC/W,IAAV,CAAegX,SAAf,CAAR,CAAA;OAHM;;MAKVvB,SAAS,CAAC7X,MAAD,EAAS;QACd,OAAO;EACHzU,QAAAA,MAAM,EAAEyU,MAAM,CAACyY,YAAP,CAAoB,CAApB,CADL;EAEHntB,QAAAA,KAAK,EAAE0U,MAAM,CAACyY,YAAP,CAAoB,CAApB,CAAA;SAFX,CAAA;EAIH,KAAA;;KAVL,CAAA;;;;;ECHA/mB,EAAAA,MAAM,CAACkB,cAAP,CAAqBe,OAArB,EAA+B,YAA/B,EAA6C;EAAExJ,IAAAA,KAAK,EAAE,IAAA;KAAtD,CAAA,CAAA;EACAwJ,EAAAA,OAAe,CAAA0lB,IAAf,GAAe,KAAK,CAApB,CAAA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EACA,EAAA,MAAMnB,WAAW,GAAG,CAAI,GAAA,CAAxB;;EACA,EAAA,MAAMoB,kBAAkB,GAAG,CAA3B;;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EACA,EAAA,MAAMC,mBAAmB,GAAG,CAA5B;;EACA,EAAA,MAAMC,cAAc,GAAG;EACnBC,IAAAA,IAAI,EAAE,EADa;EAEnB,IAAA,MAAA,EAAQ,EAFW;EAGvB;EACI,IAAA,MAAA,EAAQ,EAJW;EAKnBC,IAAAA,IAAI,EAAE,EALa;EAMnBC,IAAAA,IAAI,EAAE,EANa;EAOvB;EACI,IAAA,MAAA,EAAQ,EARW;EASnBC,IAAAA,IAAI,EAAE,EATa;EAUnBC,IAAAA,IAAI,EAAE,EAVa;EAWnBC,IAAAA,IAAI,EAAE,EAXa;EAYnBC,IAAAA,IAAI,EAAE,EAZa;EAanBC,IAAAA,IAAI,EAAE,EAba;EAcvB;EACIC,IAAAA,IAAI,EAAE,EAfa;EAgBnBC,IAAAA,IAAI,EAAE,EAhBa;EAiBnBC,IAAAA,IAAI,EAAE,EAjBa;EAkBnBC,IAAAA,IAAI,EAAE,EAlBa;EAmBnBC,IAAAA,IAAI,EAAE,EAnBa;EAoBnBC,IAAAA,IAAI,EAAE,EApBa;EAqBvB;EACIC,IAAAA,IAAI,EAAE,EAtBa;EAuBnBC,IAAAA,IAAI,EAAE,EAvBa;EAwBnBC,IAAAA,IAAI,EAAE,EAxBa;EAyBnBC,IAAAA,IAAI,EAAE,EAzBa;EA0BvB;EACIC,IAAAA,IAAI,EAAE,EA3Ba;EA4BnBC,IAAAA,IAAI,EAAE,EA5Ba;EA6BvB;EACIC,IAAAA,IAAI,EAAE,GA9Ba;EA+BnBC,IAAAA,IAAI,EAAE,GA/Ba;EAgCnBC,IAAAA,IAAI,EAAE,GAhCa;EAiCvB;EACIC,IAAAA,IAAI,EAAE,GAlCa;EAmCnBC,IAAAA,IAAI,EAAE,GAnCa;EAoCvB;EACIC,IAAAA,IAAI,EAAE,GArCa;EAsCnBC,IAAAA,IAAI,EAAE,GAtCa;EAuCvB;EACIC,IAAAA,IAAI,EAAE,IAAA;KAxCV,CAAA;;EA0CA,EAAA,SAASC,eAAT,CAAyBrb,MAAzB,EAAiCsb,WAAjC,EAA8C;EAC1C,IAAA,MAAMC,iBAAiB,GAAGD,WAAW,GAAG/B,mBAAxC,CAAA;EACA,IAAA,OAAO,CACHvZ,MAAM,CAACzW,QAAP,CAAgB,OAAhB,EAAyB+xB,WAAzB,EAAsCC,iBAAtC,CADG,EAEHvb,MAAM,CAACwb,YAAP,CAAoBD,iBAApB,CAFG,CAAP,CAAA;EAIH,GAAA;;IACD,SAAShD,YAAT,CAAsBjpB,IAAtB,EAA4B;EACxB,IAAA,MAAMqb,IAAI,GAAG6O,cAAc,CAAClqB,IAAD,CAA3B,CAAA;MACA,OAAO;EAAEhE,MAAAA,KAAK,EAAEqf,IAAT;EAAepf,MAAAA,MAAM,EAAEof,IAAvB;EAA6Brb,MAAAA,IAAAA;OAApC,CAAA;EACH,GAAA;;IACDqE,OAAe,CAAA0lB,IAAf,GAAe;MACXzB,QAAQ,CAAC5X,MAAD,EAAS;QACb,OAAQ,MAAA,KAAWA,MAAM,CAACzW,QAAP,CAAgB,OAAhB,EAAyB,CAAzB,EAA4B,CAA5B,CAAnB,CAAA;OAFO;;MAIXsuB,SAAS,CAAC7X,MAAD,EAAS;EACd,MAAA,MAAMyb,YAAY,GAAGzb,MAAM,CAACrW,MAA5B,CAAA;EACA,MAAA,MAAM+xB,UAAU,GAAG1b,MAAM,CAACwb,YAAP,CAAoBlC,kBAApB,CAAnB,CAAA;QACA,IAAIgC,WAAW,GAAGpD,WAAlB,CAAA;EACA,MAAA,IAAIyD,WAAW,GAAGN,eAAe,CAACrb,MAAD,EAASsb,WAAT,CAAjC,CAAA;QACA,IAAI3C,SAAS,GAAGJ,YAAY,CAACoD,WAAW,CAAC,CAAD,CAAZ,CAA5B,CAAA;EACAL,MAAAA,WAAW,IAAIK,WAAW,CAAC,CAAD,CAA1B,CAAA;;QACA,IAAIL,WAAW,KAAKI,UAApB,EAAgC;EAC5B,QAAA,OAAO/C,SAAP,CAAA;EACH,OAAA;;EACD,MAAA,MAAM/uB,MAAM,GAAG;UACX2B,MAAM,EAAEotB,SAAS,CAACptB,MADP;UAEXstB,MAAM,EAAE,CAACF,SAAD,CAFG;UAGXrtB,KAAK,EAAEqtB,SAAS,CAACrtB,KAAAA;SAHrB,CAAA;;EAKA,MAAA,OAAOgwB,WAAW,GAAGI,UAAd,IAA4BJ,WAAW,GAAGG,YAAjD,EAA+D;EAC3DE,QAAAA,WAAW,GAAGN,eAAe,CAACrb,MAAD,EAASsb,WAAT,CAA7B,CAAA;EACA3C,QAAAA,SAAS,GAAGJ,YAAY,CAACoD,WAAW,CAAC,CAAD,CAAZ,CAAxB,CAAA;EACAL,QAAAA,WAAW,IAAIK,WAAW,CAAC,CAAD,CAA1B,CAAA;EACA/xB,QAAAA,MAAM,CAACivB,MAAP,CAAc1rB,IAAd,CAAmBwrB,SAAnB,CAAA,CAAA;EACH,OAAA;;EACD,MAAA,OAAO/uB,MAAP,CAAA;EACH,KAAA;;KA1BL,CAAA;;;;;EC1EA8H,EAAAA,MAAM,CAACkB,cAAP,CAAqBe,OAArB,EAA+B,YAA/B,EAA6C;EAAExJ,IAAAA,KAAK,EAAE,IAAA;KAAtD,CAAA,CAAA;EACAwJ,EAAAA,OAAc,CAAAioB,GAAd,GAAc,KAAK,CAAnB,CAAA;IACAjoB,OAAc,CAAAioB,GAAd,GAAc;MACVhE,QAAQ,CAAC5X,MAAD,EAAS;EACrB;QACQ,OAAOA,MAAM,CAACzW,QAAP,CAAgB,KAAhB,EAAuB,CAAvB,EAA0B,CAA1B,CAAA,KAAiC,UAAxC,CAAA;OAHM;;MAKVsuB,SAAS,CAAC7X,MAAD,EAAS;QACd,OAAO;EACHzU,QAAAA,MAAM,EAAEyU,MAAM,CAACwb,YAAP,CAAoB,EAApB,CADL;EAEHlwB,QAAAA,KAAK,EAAE0U,MAAM,CAACwb,YAAP,CAAoB,CAApB,CAAA;SAFX,CAAA;EAIH,KAAA;;KAVL,CAAA;;;;;ECFA9pB,EAAAA,MAAM,CAACkB,cAAP,CAAqBe,OAArB,EAA+B,YAA/B,EAA6C;EAAExJ,IAAAA,KAAK,EAAE,IAAA;KAAtD,CAAA,CAAA;EACAwJ,EAAAA,OAAc,CAAAkoB,GAAd,GAAc,KAAK,CAAnB,CAAA;EACA,EAAA,MAAMC,QAAQ,GAAG;EACbC,IAAAA,IAAI,EAAE,UADO;EAEbC,IAAAA,IAAI,EAAE,UAFO;EAGbC,IAAAA,IAAI,EAAE,UAHO;EAIbC,IAAAA,IAAI,EAAE,UAJO;EAKbC,IAAAA,IAAI,EAAE,UALO;EAMbC,IAAAA,IAAI,EAAE,UAAA;KANV,CAAA;;IAQA,MAAMC,mBAAmB,GAAIC,GAAD,IAAS;EACjC,IAAA,MAAMC,IAAI,GAAGD,GAAG,CAAChE,SAAJ,CAAc,CAAd,CAAb,CAAA;EACA,IAAA,IAAID,MAAM,GAAG,CAAK,GAAA,CAAA,GAAIkE,IAAtB,CAAA;EACA,IAAA,MAAMC,WAAW,GAAGF,GAAG,CAACG,YAAJ,CAAiBpE,MAAjB,CAApB,CAAA;EACA,IAAA,MAAMqE,WAAW,GAAGF,WAAW,IAAI,CAAA,GAAID,IAAR,CAA/B,CAAA;EACAlE,IAAAA,MAAM,GAAGA,MAAM,GAAG,CAAT,GAAaqE,WAAtB,CAAA;EACA,IAAA,MAAMC,iBAAiB,GAAGL,GAAG,CAACG,YAAJ,CAAiBpE,MAAjB,CAA1B,CAAA;EACA,IAAA,MAAMuE,cAAc,GAAGD,iBAAiB,IAAI,EAAA,GAAKJ,IAAT,CAAxC,CAAA;EACA,IAAA,OAAOlE,MAAM,GAAG,CAAT,GAAauE,cAApB,CAAA;KARJ,CAAA;;IAUA,MAAMC,SAAS,GAAIP,GAAD,IAAS;MACvB,OAAO;EACH/wB,MAAAA,MAAM,EAAE+wB,GAAG,CAACd,YAAJ,CAAiB,CAAjB,CADL;EAEHlwB,MAAAA,KAAK,EAAEgxB,GAAG,CAACd,YAAJ,CAAiB,CAAjB,CAAA;OAFX,CAAA;KADJ,CAAA;;IAMA7nB,OAAc,CAAAkoB,GAAd,GAAc;MACVjE,QAAQ,CAAC5X,MAAD,EAAS;QACb,MAAMoZ,SAAS,GAAGpZ,MAAM,CAACzW,QAAP,CAAgB,KAAhB,EAAuB,CAAvB,EAA0B,CAA1B,CAAlB,CAAA;EACA,MAAA,MAAMuzB,eAAe,GAAG9c,MAAM,CAACwb,YAAP,CAAoB,CAApB,CAAxB,CAAA;;QACA,IAAIpC,SAAS,KAAK0C,QAAQ,CAACI,IAAvB,IAA+BY,eAAe,GAAG,CAArD,EAAwD;EACpD,QAAA,OAAO,KAAP,CAAA;EACH,OAAA;;EACD,MAAA,MAAMC,aAAa,GAAGD,eAAe,GAAG,CAAxC,CAAA;EACA,MAAA,MAAME,aAAa,GAAGhd,MAAM,CAACwb,YAAP,CAAoBsB,eAApB,CAAtB,CAAA;QACA,MAAMG,OAAO,GAAGjd,MAAM,CAAC1S,KAAP,CAAayvB,aAAb,EAA4BA,aAAa,GAAGC,aAA5C,CAAhB,CAAA;EACA,MAAA,OAAOC,OAAO,CAAC1zB,QAAR,CAAiB,KAAjB,EAAwB,CAAxB,EAA2B,CAA3B,CAAA,KAAkCuyB,QAAQ,CAACC,IAAlD,CAAA;OAVM;;MAYVlE,SAAS,CAAC7X,MAAD,EAAS;EACd,MAAA,MAAM8c,eAAe,GAAG9c,MAAM,CAACwb,YAAP,CAAoB,CAApB,CAAxB,CAAA;QACA,MAAMwB,aAAa,GAAGhd,MAAM,CAACyc,YAAP,CAAoBK,eAAe,GAAG,CAAtC,CAAtB,CAAA;EACA,MAAA,IAAIzE,MAAM,GAAGyE,eAAe,GAAG,CAAlB,GAAsBE,aAAnC,CAAA;EACA,MAAA,MAAME,WAAW,GAAGld,MAAM,CAACzW,QAAP,CAAgB,KAAhB,EAAuB8uB,MAAvB,EAA+BA,MAAM,GAAG,CAAxC,CAApB,CAAA;;EACA,MAAA,QAAQ6E,WAAR;UACI,KAAKpB,QAAQ,CAACK,IAAd;EACZ;EACA;YACgB,MAAMgB,KAAK,GAAG,CAAd,CAAA;EACA9E,UAAAA,MAAM,GAAGA,MAAM,GAAG,CAAT,GAAa8E,KAAb,GAAqBd,mBAAmB,CAACrc,MAAM,CAAC1S,KAAP,CAAa+qB,MAAM,GAAG,CAAtB,CAAD,CAAjD,CAAA;EACA,UAAA,OAAOwE,SAAS,CAAC7c,MAAM,CAAC1S,KAAP,CAAa+qB,MAAM,GAAG,CAAtB,EAAyBA,MAAM,GAAG,EAAlC,CAAD,CAAhB,CAAA;;UACJ,KAAKyD,QAAQ,CAACG,IAAd;EACI,UAAA,OAAOY,SAAS,CAAC7c,MAAM,CAAC1S,KAAP,CAAa+qB,MAAM,GAAG,CAAtB,EAAyBA,MAAM,GAAG,EAAlC,CAAD,CAAhB,CAAA;;EACJ,QAAA;EACI,UAAA,MAAM,IAAIrd,SAAJ,CAAc,4BAA+BgF,GAAAA,MAAM,CAACzW,QAAP,CAAgB,OAAhB,EAAyB8uB,MAAzB,EAAiCA,MAAM,GAAG,CAA1C,CAA7C,CAAN,CAAA;EAVR,OAAA;EAYH,KAAA;;KA7BL,CAAA;;;;;EC1BA3mB,EAAAA,MAAM,CAACkB,cAAP,CAAqBe,OAArB,EAA+B,YAA/B,EAA6C;EAAExJ,IAAAA,KAAK,EAAE,IAAA;KAAtD,CAAA,CAAA;EACAwJ,EAAAA,OAAmB,CAAAypB,QAAnB,GAAmB,KAAK,CAAxB;;IAEA,SAASA,QAAT,CAAkBpd,MAAlB,EAA0Bqd,IAA1B,EAAgChF,MAAhC,EAAwCiF,WAAxC,EAAqD;MACjDjF,MAAM,GAAGA,MAAM,IAAI,CAAnB,CAAA;EACA,IAAA,MAAMkF,MAAM,GAAGD,WAAW,GAAG,IAAH,GAAU,IAApC,CAAA;EACA,IAAA,MAAME,UAAU,GAAI,UAAaH,GAAAA,IAAb,GAAoBE,MAAxC,CAAA;MACA,OAAOvd,MAAM,CAACwd,UAAD,CAAN,CAAmBpqB,IAAnB,CAAwB4M,MAAxB,EAAgCqY,MAAhC,CAAP,CAAA;EACH,GAAA;;IACD1kB,OAAA,CAAAypB,QAAA,GAAmBA,QAAnB,CAAA;;;;ECRA;EACA;EACA;;EACA1rB,EAAAA,MAAM,CAACkB,cAAP,CAAqBe,OAArB,EAA+B,YAA/B,EAA6C;EAAExJ,IAAAA,KAAK,EAAE,IAAA;KAAtD,CAAA,CAAA;EACAwJ,EAAAA,OAAc,CAAA8pB,GAAd,GAAc,KAAK,CAAnB,CAAA;IAEA,MAAMC,WAAW,GAAG,UAApB,CAAA;IACA,MAAMC,oBAAoB,GAAG,CAA7B,CAAA;IACA,MAAMC,iBAAiB,GAAG,CAA1B,CAAA;IACA,MAAMC,qBAAqB,GAAG,CAA9B,CAAA;IACA,MAAMC,qBAAqB,GAAG,MAA9B,CAAA;EACA,EAAA,MAAMC,wBAAwB,GAAG,MAAjC;;IAEA,MAAMC,eAAe,GAAG,EAAxB,CAAA;IACA,MAAMC,2BAA2B,GAAG,CAApC,CAAA;;IACA,SAASC,MAAT,CAAgBle,MAAhB,EAAwB;MACpB,OAAQA,MAAM,CAACzW,QAAP,CAAgB,KAAhB,EAAuB,CAAvB,EAA0B,CAA1B,CAAA,KAAiCm0B,WAAzC,CAAA;EACH,GAAA;;EACD,EAAA,SAASS,WAAT,CAAqBne,MAArB,EAA6BnO,KAA7B,EAAoC;MAChC,OAAO;EACHtG,MAAAA,MAAM,EAAEyU,MAAM,CAACyc,YAAP,CAAoB5qB,KAApB,CADL;EAEHvG,MAAAA,KAAK,EAAE0U,MAAM,CAACyc,YAAP,CAAoB5qB,KAAK,GAAG,CAA5B,CAAA;OAFX,CAAA;EAIH,GAAA;;EACD,EAAA,SAASusB,kBAAT,CAA4BC,SAA5B,EAAuCf,WAAvC,EAAoD;EACpD;EACA;EACA;EACA;EACI,IAAA,MAAMgB,SAAS,GAAG,CAAlB,CALgD;EAOpD;;EACI,IAAA,MAAMjG,MAAM,GAAGuF,iBAAiB,GAAGU,SAAnC,CAAA;EACA,IAAA,MAAMC,mBAAmB,GAAGC,UAAU,CAACpB,QAAX,CAAoBiB,SAApB,EAA+B,EAA/B,EAAmChG,MAAnC,EAA2CiF,WAA3C,CAA5B,CAAA;;MACA,KAAK,IAAImB,oBAAoB,GAAG,CAAhC,EAAmCA,oBAAoB,GAAGF,mBAA1D,EAA+EE,oBAAoB,EAAnG,EAAuG;QACnG,MAAM/vB,KAAK,GAAG2pB,MAAM,GAAG4F,2BAAT,GAAwCQ,oBAAoB,GAAGT,eAA7E,CAAA;EACA,MAAA,MAAMrvB,GAAG,GAAGD,KAAK,GAAGsvB,eAApB,CAFmG;;EAInG,MAAA,IAAItvB,KAAK,GAAG2vB,SAAS,CAAC10B,MAAtB,EAA8B;EAC1B,QAAA,OAAA;EACH,OAAA;;QACD,MAAM+0B,KAAK,GAAGL,SAAS,CAAC/wB,KAAV,CAAgBoB,KAAhB,EAAuBC,GAAvB,CAAd,CAAA;EACA,MAAA,MAAMgwB,SAAS,GAAGH,UAAU,CAACpB,QAAX,CAAoBsB,KAApB,EAA2B,EAA3B,EAA+B,CAA/B,EAAkCpB,WAAlC,CAAlB,CARmG;;QAUnG,IAAIqB,SAAS,KAAK,GAAlB,EAAuB;EACnB,QAAA,MAAMC,UAAU,GAAGJ,UAAU,CAACpB,QAAX,CAAoBsB,KAApB,EAA2B,EAA3B,EAA+B,CAA/B,EAAkCpB,WAAlC,CAAnB,CAAA;;UACA,IAAIsB,UAAU,KAAK,CAAnB,EAAsB;EAClB,UAAA,OAAA;EACH,SAJkB;EAM/B;;;EACY,QAAA,MAAMC,kBAAkB,GAAGL,UAAU,CAACpB,QAAX,CAAoBsB,KAApB,EAA2B,EAA3B,EAA+B,CAA/B,EAAkCpB,WAAlC,CAA3B,CAAA;;UACA,IAAIuB,kBAAkB,KAAK,CAA3B,EAA8B;EAC1B,UAAA,OAAA;EACH,SAAA;;UACD,OAAOL,UAAU,CAACpB,QAAX,CAAoBsB,KAApB,EAA2B,EAA3B,EAA+B,CAA/B,EAAkCpB,WAAlC,CAAP,CAAA;EACH,OAAA;EACJ,KAAA;EACJ,GAAA;;EACD,EAAA,SAASwB,iBAAT,CAA2B9e,MAA3B,EAAmCnO,KAAnC,EAA0C;EAC1C;MACI,MAAMwsB,SAAS,GAAGre,MAAM,CAAC1S,KAAP,CAAaqwB,oBAAb,EAAmC9rB,KAAnC,CAAlB,CAFsC;;EAItC,IAAA,MAAMktB,SAAS,GAAGV,SAAS,CAAC90B,QAAV,CAAmB,KAAnB,EAA0Bq0B,iBAA1B,EAA6CA,iBAAiB,GAAGC,qBAAjE,CAAlB,CAJsC;;EAMtC,IAAA,MAAMP,WAAW,GAAGyB,SAAS,KAAKjB,qBAAlC,CAAA;EACA,IAAA,MAAMkB,cAAc,GAAGD,SAAS,KAAKhB,wBAArC,CAAA;;MACA,IAAIT,WAAW,IAAI0B,cAAnB,EAAmC;EAC/B,MAAA,OAAOZ,kBAAkB,CAACC,SAAD,EAAYf,WAAZ,CAAzB,CAAA;EACH,KAAA;EACJ,GAAA;;EACD,EAAA,SAAS2B,cAAT,CAAwBjf,MAAxB,EAAgCnO,KAAhC,EAAuC;EACvC;EACI,IAAA,IAAIA,KAAK,GAAGmO,MAAM,CAACrW,MAAnB,EAA2B;EACvB,MAAA,MAAM,IAAIqR,SAAJ,CAAc,qCAAd,CAAN,CAAA;EACH,KAJkC;;;EAMnC,IAAA,IAAIgF,MAAM,CAACnO,KAAD,CAAN,KAAkB,IAAtB,EAA4B;EACxB,MAAA,MAAM,IAAImJ,SAAJ,CAAc,qCAAd,CAAN,CAAA;EACH,KAAA;EACJ,GAAA;;IACDrH,OAAc,CAAA8pB,GAAd,GAAc;MACV7F,QAAQ,CAAC5X,MAAD,EAAS;QACb,MAAMkf,SAAS,GAAGlf,MAAM,CAACzW,QAAP,CAAgB,KAAhB,EAAuB,CAAvB,EAA0B,CAA1B,CAAlB,CAAA;EACA,MAAA,OAAQ,WAAW21B,SAAnB,CAAA;OAHM;;MAKVrH,SAAS,CAAC7X,MAAD,EAAS;EACtB;EACQA,MAAAA,MAAM,GAAGA,MAAM,CAAC1S,KAAP,CAAa,CAAb,CAAT,CAAA;EACA,MAAA,IAAI6xB,WAAJ,CAAA;EACA,MAAA,IAAIpO,IAAJ,CAAA;;QACA,OAAO/Q,MAAM,CAACrW,MAAd,EAAsB;EAC9B;EACY,QAAA,MAAME,CAAC,GAAGmW,MAAM,CAACyc,YAAP,CAAoB,CAApB,CAAV,CAAA;;EACA,QAAA,IAAIyB,MAAM,CAACle,MAAD,CAAV,EAAoB;EAChBmf,UAAAA,WAAW,GAAGL,iBAAiB,CAAC9e,MAAD,EAASnW,CAAT,CAA/B,CAAA;EACH,SALiB;;;EAOlBo1B,QAAAA,cAAc,CAACjf,MAAD,EAASnW,CAAT,CAAd,CAPkB;EAS9B;EACA;;EACYknB,QAAAA,IAAI,GAAG/Q,MAAM,CAACnW,CAAC,GAAG,CAAL,CAAb,CAAA;;UACA,IAAIknB,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,IAA1B,IAAkCA,IAAI,KAAK,IAA/C,EAAqD;YACjD,MAAMpG,IAAI,GAAGwT,WAAW,CAACne,MAAD,EAASnW,CAAC,GAAG,CAAb,CAAxB,CADiD;;YAGjD,IAAI,CAACs1B,WAAL,EAAkB;EACd,YAAA,OAAOxU,IAAP,CAAA;EACH,WAAA;;YACD,OAAO;cACHpf,MAAM,EAAEof,IAAI,CAACpf,MADV;cAEH4zB,WAFG;cAGH7zB,KAAK,EAAEqf,IAAI,CAACrf,KAAAA;aAHhB,CAAA;EAKH,SAvBiB;;;UAyBlB0U,MAAM,GAAGA,MAAM,CAAC1S,KAAP,CAAazD,CAAC,GAAG,CAAjB,CAAT,CAAA;EACH,OAAA;;EACD,MAAA,MAAM,IAAImR,SAAJ,CAAc,4BAAd,CAAN,CAAA;EACH,KAAA;;KAtCL,CAAA;;;;;EClFAtJ,EAAAA,MAAM,CAACkB,cAAP,CAAqBe,OAArB,EAA+B,YAA/B,EAA6C;EAAExJ,IAAAA,KAAK,EAAE,IAAA;KAAtD,CAAA,CAAA;EACAwJ,EAAAA,OAAc,CAAAyrB,GAAd,GAAc,KAAK,CAAnB,CAAA;IACA,MAAMC,SAAS,GAAG,QAAlB,CAAA;IACA1rB,OAAc,CAAAyrB,GAAd,GAAc;MACVxH,QAAQ,CAAC5X,MAAD,EAAS;QACb,OAAOqf,SAAS,KAAKrf,MAAM,CAACzW,QAAP,CAAgB,OAAhB,EAAyB,CAAzB,EAA4B,CAA5B,CAArB,CAAA;OAFM;;MAIVsuB,SAAS,CAAC7X,MAAD,EAAS;QACd,OAAO;EACHzU,QAAAA,MAAM,EAAEyU,MAAM,CAAC+X,YAAP,CAAoB,EAApB,CADL;EAEHzsB,QAAAA,KAAK,EAAE0U,MAAM,CAAC+X,YAAP,CAAoB,EAApB,CAAA;SAFX,CAAA;EAIH,KAAA;;KATL,CAAA;;;;;ECHArmB,EAAAA,MAAM,CAACkB,cAAP,CAAqBe,OAArB,EAA+B,YAA/B,EAA6C;EAAExJ,IAAAA,KAAK,EAAE,IAAA;KAAtD,CAAA,CAAA;EACAwJ,EAAAA,OAAc,CAAA2rB,GAAd,GAAc,KAAK,CAAnB,CAAA;IACA,MAAMC,YAAY,GAAG,eAArB,CAAA;EACA,EAAA,MAAMC,uBAAuB,GAAG,MAAhC;;IAEA,MAAMC,iBAAiB,GAAG,MAA1B,CAAA;IACA9rB,OAAc,CAAA2rB,GAAd,GAAc;MACV1H,QAAQ,CAAC5X,MAAD,EAAS;EACb,MAAA,IAAIuf,YAAY,KAAKvf,MAAM,CAACzW,QAAP,CAAgB,OAAhB,EAAyB,CAAzB,EAA4B,CAA5B,CAArB,EAAqD;UACjD,IAAIm2B,SAAS,GAAG1f,MAAM,CAACzW,QAAP,CAAgB,OAAhB,EAAyB,EAAzB,EAA6B,EAA7B,CAAhB,CAAA;;UACA,IAAIm2B,SAAS,KAAKD,iBAAlB,EAAqC;YACjCC,SAAS,GAAG1f,MAAM,CAACzW,QAAP,CAAgB,OAAhB,EAAyB,EAAzB,EAA6B,EAA7B,CAAZ,CAAA;EACH,SAAA;;UACD,IAAIm2B,SAAS,KAAKF,uBAAlB,EAA2C;EACvC,UAAA,MAAM,IAAIxkB,SAAJ,CAAc,aAAd,CAAN,CAAA;EACH,SAAA;;EACD,QAAA,OAAO,IAAP,CAAA;EACH,OAAA;;EACD,MAAA,OAAO,KAAP,CAAA;OAZM;;MAcV6c,SAAS,CAAC7X,MAAD,EAAS;QACd,IAAIA,MAAM,CAACzW,QAAP,CAAgB,OAAhB,EAAyB,EAAzB,EAA6B,EAA7B,CAAqCk2B,KAAAA,iBAAzC,EAA4D;UACxD,OAAO;EACHl0B,UAAAA,MAAM,EAAEyU,MAAM,CAACwb,YAAP,CAAoB,EAApB,CADL;EAEHlwB,UAAAA,KAAK,EAAE0U,MAAM,CAACwb,YAAP,CAAoB,EAApB,CAAA;WAFX,CAAA;EAIH,OAAA;;QACD,OAAO;EACHjwB,QAAAA,MAAM,EAAEyU,MAAM,CAACwb,YAAP,CAAoB,EAApB,CADL;EAEHlwB,QAAAA,KAAK,EAAE0U,MAAM,CAACwb,YAAP,CAAoB,EAApB,CAAA;SAFX,CAAA;EAIH,KAAA;;KAzBL,CAAA;;;;;ECNA9pB,EAAAA,MAAM,CAACkB,cAAP,CAAqBe,OAArB,EAA+B,YAA/B,EAA6C;EAAExJ,IAAAA,KAAK,EAAE,IAAA;KAAtD,CAAA,CAAA;EACAwJ,EAAAA,OAAc,CAAAgsB,GAAd,GAAc,KAAK,CAAnB,CAAA;EACA,EAAA,MAAMC,QAAQ,GAAG;EACbC,IAAAA,EAAE,EAAE,WADS;EAEbC,IAAAA,EAAE,EAAE,WAFS;EAGbC,IAAAA,EAAE,EAAE,WAHS;EAIbC,IAAAA,EAAE,EAAE,KAJS;EAKbC,IAAAA,EAAE,EAAE,KALS;EAMbC,IAAAA,EAAE,EAAE,KANS;EAObC,IAAAA,EAAE,EAAE,KAPS;EAQbC,IAAAA,EAAE,EAAE,KAAA;KARR,CAAA;EAUA,EAAA,MAAMC,UAAU,GAAG3uB,MAAM,CAACmD,IAAP,CAAY+qB,QAAZ,CAAnB,CAAA;EACA,EAAA,MAAMU,QAAQ,GAAG;MACbC,OAAO,EAAGC,KAAD,IAAW;QAChB,IAAIC,UAAU,GAAG,EAAjB,CAAA;;EACA,MAAA,OAAOD,KAAK,CAAC72B,MAAN,GAAe,CAAtB,EAAyB;EACrB,QAAA,MAAM+2B,IAAI,GAAGF,KAAK,CAACpZ,KAAN,EAAb,CAAA;;EACA,QAAA,IAAIsZ,IAAI,CAAC,CAAD,CAAJ,KAAY,GAAhB,EAAqB;EACjB,UAAA,SAAA;EACH,SAAA;;EACDD,QAAAA,UAAU,GAAGC,IAAI,CAAC/jB,KAAL,CAAW,GAAX,CAAb,CAAA;EACA,QAAA,MAAA;EACH,OAAA;;EACD,MAAA,IAAI8jB,UAAU,CAAC92B,MAAX,KAAsB,CAA1B,EAA6B;UACzB,OAAO;YACH4B,MAAM,EAAE+V,QAAQ,CAACmf,UAAU,CAAC,CAAD,CAAX,EAAgB,EAAhB,CADb;YAEHn1B,KAAK,EAAEgW,QAAQ,CAACmf,UAAU,CAAC,CAAD,CAAX,EAAgB,EAAhB,CAAA;WAFnB,CAAA;EAIH,OALD,MAMK;EACD,QAAA,MAAM,IAAIzlB,SAAJ,CAAc,aAAd,CAAN,CAAA;EACH,OAAA;OAnBQ;MAqBb2lB,GAAG,EAAGH,KAAD,IAAW;QACZ,MAAM7V,IAAI,GAAG,EAAb,CAAA;;EACA,MAAA,OAAO6V,KAAK,CAAC72B,MAAN,GAAe,CAAtB,EAAyB;EACrB,QAAA,MAAM+2B,IAAI,GAAGF,KAAK,CAACpZ,KAAN,EAAb,CAAA;;EACA,QAAA,IAAIsZ,IAAI,CAAC/2B,MAAL,GAAc,EAAd,IAAoB+2B,IAAI,CAACjlB,UAAL,CAAgB,CAAhB,CAAA,GAAqB,GAA7C,EAAkD;EAC9C,UAAA,SAAA;EACH,SAAA;;UACD,MAAM,CAAC1J,GAAD,EAAM5H,KAAN,CAAA,GAAeu2B,IAAI,CAAC/jB,KAAL,CAAW,GAAX,CAArB,CAAA;;UACA,IAAI5K,GAAG,IAAI5H,KAAX,EAAkB;EACdwgB,UAAAA,IAAI,CAAC5Y,GAAG,CAACkO,WAAJ,EAAD,CAAJ,GAA0BqB,QAAQ,CAACnX,KAAD,EAAQ,EAAR,CAAlC,CAAA;EACH,SAAA;;EACD,QAAA,IAAIwgB,IAAI,CAACpf,MAAL,IAAeof,IAAI,CAACrf,KAAxB,EAA+B;EAC3B,UAAA,MAAA;EACH,SAAA;EACJ,OAAA;;EACD,MAAA,IAAIqf,IAAI,CAACpf,MAAL,IAAeof,IAAI,CAACrf,KAAxB,EAA+B;UAC3B,OAAO;YACHC,MAAM,EAAEof,IAAI,CAACpf,MADV;YAEHD,KAAK,EAAEqf,IAAI,CAACrf,KAAAA;WAFhB,CAAA;EAIH,OALD,MAMK;EACD,QAAA,MAAM,IAAI0P,SAAJ,CAAc,aAAd,CAAN,CAAA;EACH,OAAA;EACJ,KAAA;KA7CL,CAAA;IA+CArH,OAAc,CAAAgsB,GAAd,GAAc;MACV/H,QAAQ,CAAC5X,MAAD,EAAS;QACb,MAAMoZ,SAAS,GAAGpZ,MAAM,CAACzW,QAAP,CAAgB,OAAhB,EAAyB,CAAzB,EAA4B,CAA5B,CAAlB,CAAA;EACA,MAAA,OAAO82B,UAAU,CAACO,QAAX,CAAoBxH,SAApB,CAAP,CAAA;OAHM;;MAKVvB,SAAS,CAAC7X,MAAD,EAAS;QACd,MAAMoZ,SAAS,GAAGpZ,MAAM,CAACzW,QAAP,CAAgB,OAAhB,EAAyB,CAAzB,EAA4B,CAA5B,CAAlB,CAAA;EACA,MAAA,MAAM+F,IAAI,GAAGswB,QAAQ,CAACxG,SAAD,CAArB,CAFc;;EAId,MAAA,MAAMoH,KAAK,GAAGxgB,MAAM,CAACzW,QAAP,CAAgB,OAAhB,EAAyB,CAAzB,CAAA,CAA4BoT,KAA5B,CAAkC,SAAlC,CAAd,CAAA;QACA,MAAMkkB,OAAO,GAAGP,QAAQ,CAAChxB,IAAD,CAAR,IAAkBgxB,QAAQ,CAACC,OAA3C,CAAA;QACA,OAAOM,OAAO,CAACL,KAAD,CAAd,CAAA;EACH,KAAA;;KAZL,CAAA;;;;;EC5DA9uB,EAAAA,MAAM,CAACkB,cAAP,CAAqBe,OAArB,EAA+B,YAA/B,EAA6C;EAAExJ,IAAAA,KAAK,EAAE,IAAA;KAAtD,CAAA,CAAA;EACAwJ,EAAAA,OAAc,CAAAmtB,GAAd,GAAc,KAAK,CAAnB,CAAA;IACAntB,OAAc,CAAAmtB,GAAd,GAAc;MACVlJ,QAAQ,CAAC5X,MAAD,EAAS;QACb,OAAQ,MAAA,KAAWA,MAAM,CAACzW,QAAP,CAAgB,OAAhB,EAAyB,CAAzB,EAA4B,CAA5B,CAAnB,CAAA;OAFM;;MAIVsuB,SAAS,CAAC7X,MAAD,EAAS;QACd,OAAO;EACHzU,QAAAA,MAAM,EAAEyU,MAAM,CAACwb,YAAP,CAAoB,EAApB,CADL;EAEHlwB,QAAAA,KAAK,EAAE0U,MAAM,CAACwb,YAAP,CAAoB,EAApB,CAAA;SAFX,CAAA;EAIH,KAAA;;KATL,CAAA;;;;;ECFA9pB,EAAAA,MAAM,CAACkB,cAAP,CAAqBe,OAArB,EAA+B,YAA/B,EAA6C;EAAExJ,IAAAA,KAAK,EAAE,IAAA;KAAtD,CAAA,CAAA;EACAwJ,EAAAA,OAAc,CAAAotB,GAAd,GAAc,KAAK,CAAnB,CAAA;IACA,MAAMC,MAAM,GAAG,kCAAf,CAAA;EACA,EAAA,MAAMC,gBAAgB,GAAG;EACrB11B,IAAAA,MAAM,EAAE,2BADa;EAErB21B,IAAAA,IAAI,EAAEF,MAFe;EAGrBG,IAAAA,OAAO,EAAE,0BAHY;EAIrB71B,IAAAA,KAAK,EAAE,0BAAA;KAJX,CAAA;IAMA,MAAM81B,OAAO,GAAG,IAAhB,CAAA;EACA,EAAA,MAAMC,KAAK,GAAG;EACVC,IAAAA,EAAE,EAAE,EADM;MAEVC,EAAE,EAAE,KAAKH,OAFC;EAGVI,IAAAA,EAAE,EAAE,EAHM;EAIVC,IAAAA,EAAE,EAAE,CAJM;EAKVC,IAAAA,CAAC,EAAE,EAAA,GAAKN,OAAL,GAAe,GALR;EAMVO,IAAAA,EAAE,EAAE,EAAA,GAAKP,OAAL,GAAe,EANT;EAOVQ,IAAAA,EAAE,EAAE,EAAA,GAAK,EAAL,GAAU,EAPJ;MAQVC,EAAE,EAAE,KAAK,EARC;EASVC,IAAAA,EAAE,EAAE,CAAA;KATR,CAAA;EAWA,EAAA,MAAMC,QAAQ,GAAG,IAAI/wB,MAAJ,CAAY,wBAAuBU,MAAM,CAACmD,IAAP,CAAYwsB,KAAZ,CAAmBpzB,CAAAA,IAAnB,CAAwB,GAAxB,CAA6B,KAAhE,CAAjB,CAAA;;IACA,SAAS+zB,WAAT,CAAqB1qB,GAArB,EAA0B;EACtB,IAAA,MAAMoqB,CAAC,GAAGK,QAAQ,CAAC7T,IAAT,CAAc5W,GAAd,CAAV,CAAA;;MACA,IAAI,CAACoqB,CAAL,EAAQ;EACJ,MAAA,OAAOvmB,SAAP,CAAA;EACH,KAAA;;MACD,OAAOpR,IAAI,CAACS,KAAL,CAAWsQ,MAAM,CAAC4mB,CAAC,CAAC,CAAD,CAAF,CAAN,IAAgBL,KAAK,CAACK,CAAC,CAAC,CAAD,CAAF,CAAL,IAAe,CAA/B,CAAX,CAAP,CAAA;EACH,GAAA;;IACD,SAASO,YAAT,CAAsBd,OAAtB,EAA+B;EAC3B,IAAA,MAAMe,MAAM,GAAGf,OAAO,CAACxkB,KAAR,CAAc,GAAd,CAAf,CAAA;MACA,OAAO;EACHpR,MAAAA,MAAM,EAAEy2B,WAAW,CAACE,MAAM,CAAC,CAAD,CAAP,CADhB;EAEH52B,MAAAA,KAAK,EAAE02B,WAAW,CAACE,MAAM,CAAC,CAAD,CAAP,CAAA;OAFtB,CAAA;EAIH,GAAA;;IACD,SAASC,eAAT,CAAyBjB,IAAzB,EAA+B;MAC3B,MAAM51B,KAAK,GAAG41B,IAAI,CAACkB,KAAL,CAAWnB,gBAAgB,CAAC31B,KAA5B,CAAd,CAAA;MACA,MAAMC,MAAM,GAAG21B,IAAI,CAACkB,KAAL,CAAWnB,gBAAgB,CAAC11B,MAA5B,CAAf,CAAA;MACA,MAAM41B,OAAO,GAAGD,IAAI,CAACkB,KAAL,CAAWnB,gBAAgB,CAACE,OAA5B,CAAhB,CAAA;MACA,OAAO;QACH51B,MAAM,EAAEA,MAAM,IAAIy2B,WAAW,CAACz2B,MAAM,CAAC,CAAD,CAAP,CAD1B;QAEH41B,OAAO,EAAEA,OAAO,IAAIc,YAAY,CAACd,OAAO,CAAC,CAAD,CAAR,CAF7B;QAGH71B,KAAK,EAAEA,KAAK,IAAI02B,WAAW,CAAC12B,KAAK,CAAC,CAAD,CAAN,CAAA;OAH/B,CAAA;EAKH,GAAA;;IACD,SAAS+2B,qBAAT,CAA+BhwB,KAA/B,EAAsC;MAClC,OAAO;QACH9G,MAAM,EAAE8G,KAAK,CAAC9G,MADX;QAEHD,KAAK,EAAE+G,KAAK,CAAC/G,KAAAA;OAFjB,CAAA;EAIH,GAAA;;EACD,EAAA,SAASg3B,kBAAT,CAA4BjwB,KAA5B,EAAmC8uB,OAAnC,EAA4C;MACxC,MAAMoB,KAAK,GAAGpB,OAAO,CAAC71B,KAAR,GAAgB61B,OAAO,CAAC51B,MAAtC,CAAA;;MACA,IAAI8G,KAAK,CAAC/G,KAAV,EAAiB;QACb,OAAO;UACHC,MAAM,EAAExB,IAAI,CAACC,KAAL,CAAWqI,KAAK,CAAC/G,KAAN,GAAci3B,KAAzB,CADL;UAEHj3B,KAAK,EAAE+G,KAAK,CAAC/G,KAAAA;SAFjB,CAAA;EAIH,KAAA;;MACD,IAAI+G,KAAK,CAAC9G,MAAV,EAAkB;QACd,OAAO;UACHA,MAAM,EAAE8G,KAAK,CAAC9G,MADX;UAEHD,KAAK,EAAEvB,IAAI,CAACC,KAAL,CAAWqI,KAAK,CAAC9G,MAAN,GAAeg3B,KAA1B,CAAA;SAFX,CAAA;EAIH,KAAA;;MACD,OAAO;QACHh3B,MAAM,EAAE41B,OAAO,CAAC51B,MADb;QAEHD,KAAK,EAAE61B,OAAO,CAAC71B,KAAAA;OAFnB,CAAA;EAIH,GAAA;;IACDqI,OAAc,CAAAotB,GAAd,GAAc;MACVnJ,QAAQ,CAAC5X,MAAD,EAAS;EACb,MAAA,MAAMtD,GAAG,GAAGrB,MAAM,CAAC2E,MAAD,CAAlB,CAAA;EACA,MAAA,OAAOghB,MAAM,CAAC5e,IAAP,CAAY1F,GAAZ,CAAP,CAAA;OAHM;;MAKVmb,SAAS,CAAC7X,MAAD,EAAS;EACd,MAAA,MAAMkhB,IAAI,GAAGlhB,MAAM,CAACzW,QAAP,CAAgB,MAAhB,CAAA,CAAwB64B,KAAxB,CAA8BnB,gBAAgB,CAACC,IAA/C,CAAb,CAAA;;EACA,MAAA,IAAIA,IAAJ,EAAU;UACN,MAAM7uB,KAAK,GAAG8vB,eAAe,CAACjB,IAAI,CAAC,CAAD,CAAL,CAA7B,CAAA;;EACA,QAAA,IAAI7uB,KAAK,CAAC/G,KAAN,IAAe+G,KAAK,CAAC9G,MAAzB,EAAiC;YAC7B,OAAO82B,qBAAqB,CAAChwB,KAAD,CAA5B,CAAA;EACH,SAAA;;UACD,IAAIA,KAAK,CAAC8uB,OAAV,EAAmB;EACf,UAAA,OAAOmB,kBAAkB,CAACjwB,KAAD,EAAQA,KAAK,CAAC8uB,OAAd,CAAzB,CAAA;EACH,SAAA;EACJ,OAAA;;EACD,MAAA,MAAM,IAAInmB,SAAJ,CAAc,aAAd,CAAN,CAAA;EACH,KAAA;;KAjBL,CAAA;;;;;ECvEAtJ,EAAAA,MAAM,CAACkB,cAAP,CAAqBe,OAArB,EAA+B,YAA/B,EAA6C;EAAExJ,IAAAA,KAAK,EAAE,IAAA;KAAtD,CAAA,CAAA;EACAwJ,EAAAA,OAAe,CAAA6uB,IAAf,GAAe,KAAK,CAApB;EAEA;EAGA;;EACA,EAAA,SAASC,OAAT,CAAiBziB,MAAjB,EAAyB0iB,QAAzB,EAAmCpF,WAAnC,EAAgD;EAC5C,IAAA,MAAMqF,SAAS,GAAGnE,UAAU,CAACpB,QAAX,CAAoBpd,MAApB,EAA4B,EAA5B,EAAgC,CAAhC,EAAmCsd,WAAnC,CAAlB,CAD4C;;MAG5C,IAAIsF,UAAU,GAAG,IAAjB,CAAA;MACA,MAAMC,QAAQ,GAAGC,sBAAE,CAACC,QAAH,CAAYL,QAAZ,EAAsB/X,IAAvC,CAAA;;EACA,IAAA,IAAIgY,SAAS,GAAGC,UAAZ,GAAyBC,QAA7B,EAAuC;EACnCD,MAAAA,UAAU,GAAGC,QAAQ,GAAGF,SAAX,GAAuB,EAApC,CAAA;EACH,KAP2C;;;EAS5C,IAAA,MAAMK,SAAS,GAAG3yB,MAAM,CAACsd,KAAP,CAAaiV,UAAb,CAAlB,CAAA;MACA,MAAMlwB,UAAU,GAAGowB,sBAAE,CAACG,QAAH,CAAYP,QAAZ,EAAsB,GAAtB,CAAnB,CAAA;MACAI,sBAAE,CAACI,QAAH,CAAYxwB,UAAZ,EAAwBswB,SAAxB,EAAmC,CAAnC,EAAsCJ,UAAtC,EAAkDD,SAAlD,CAAA,CAAA;MACAG,sBAAE,CAACK,SAAH,CAAazwB,UAAb,CAAA,CAAA;EACA,IAAA,OAAOswB,SAAS,CAAC11B,KAAV,CAAgB,CAAhB,CAAP,CAAA;EACH;;;EAED,EAAA,SAAS81B,SAAT,CAAmBpjB,MAAnB,EAA2Bsd,WAA3B,EAAwC;EACpC,IAAA,MAAM+F,GAAG,GAAG7E,UAAU,CAACpB,QAAX,CAAoBpd,MAApB,EAA4B,EAA5B,EAAgC,CAAhC,EAAmCsd,WAAnC,CAAZ,CAAA;EACA,IAAA,MAAMgG,IAAI,GAAG9E,UAAU,CAACpB,QAAX,CAAoBpd,MAApB,EAA4B,EAA5B,EAAgC,EAAhC,EAAoCsd,WAApC,CAAb,CAAA;EACA,IAAA,OAAO,CAACgG,IAAI,IAAI,EAAT,IAAeD,GAAtB,CAAA;EACH;;;IAED,SAASE,OAAT,CAAiBvjB,MAAjB,EAAyB;EACrB,IAAA,IAAIA,MAAM,CAACrW,MAAP,GAAgB,EAApB,EAAwB;EACpB,MAAA,OAAOqW,MAAM,CAAC1S,KAAP,CAAa,EAAb,CAAP,CAAA;EACH,KAAA;EACJ;;;EAED,EAAA,SAASk2B,WAAT,CAAqBxjB,MAArB,EAA6Bsd,WAA7B,EAA0C;MACtC,MAAMmG,IAAI,GAAG,EAAb,CAAA;MACA,IAAIngB,IAAI,GAAGtD,MAAX,CAAA;;EACA,IAAA,OAAOsD,IAAI,IAAIA,IAAI,CAAC3Z,MAApB,EAA4B;EACxB,MAAA,MAAMiiB,IAAI,GAAG4S,UAAU,CAACpB,QAAX,CAAoB9Z,IAApB,EAA0B,EAA1B,EAA8B,CAA9B,EAAiCga,WAAjC,CAAb,CAAA;EACA,MAAA,MAAMhuB,IAAI,GAAGkvB,UAAU,CAACpB,QAAX,CAAoB9Z,IAApB,EAA0B,EAA1B,EAA8B,CAA9B,EAAiCga,WAAjC,CAAb,CAAA;EACA,MAAA,MAAM3zB,MAAM,GAAG60B,UAAU,CAACpB,QAAX,CAAoB9Z,IAApB,EAA0B,EAA1B,EAA8B,CAA9B,EAAiCga,WAAjC,CAAf,CAHwB;;QAKxB,IAAI1R,IAAI,KAAK,CAAb,EAAgB;EACZ,QAAA,MAAA;EACH,OAFD,MAGK;EACb;EACA;EACY,QAAA,IAAIjiB,MAAM,KAAK,CAAX,KAAiB2F,IAAI,KAAK,CAAT,IAAcA,IAAI,KAAK,CAAxC,CAAJ,EAAgD;YAC5Cm0B,IAAI,CAAC7X,IAAD,CAAJ,GAAawX,SAAS,CAAC9f,IAAD,EAAOga,WAAP,CAAtB,CAAA;EACH,SALA;;;EAODha,QAAAA,IAAI,GAAGigB,OAAO,CAACjgB,IAAD,CAAd,CAAA;EACH,OAAA;EACJ,KAAA;;EACD,IAAA,OAAOmgB,IAAP,CAAA;EACH;;;IAED,SAASC,mBAAT,CAA6B1jB,MAA7B,EAAqC;MACjC,MAAMoZ,SAAS,GAAGpZ,MAAM,CAACzW,QAAP,CAAgB,OAAhB,EAAyB,CAAzB,EAA4B,CAA5B,CAAlB,CAAA;;MACA,IAAI,IAAA,KAAS6vB,SAAb,EAAwB;EACpB,MAAA,OAAO,IAAP,CAAA;EACH,KAFD,MAGK,IAAI,IAASA,KAAAA,SAAb,EAAwB;EACzB,MAAA,OAAO,IAAP,CAAA;EACH,KAAA;EACJ,GAAA;;IACD,MAAMuK,UAAU,GAAG;IAEf,UAFe,EAGf,UAHe;EAInB;KAJA,CAAA;IAMAhwB,OAAe,CAAA6uB,IAAf,GAAe;MACX5K,QAAQ,CAAC5X,MAAD,EAAS;EACb,MAAA,OAAO2jB,UAAU,CAAC/C,QAAX,CAAoB5gB,MAAM,CAACzW,QAAP,CAAgB,KAAhB,EAAuB,CAAvB,EAA0B,CAA1B,CAApB,CAAP,CAAA;OAFO;;EAIXsuB,IAAAA,SAAS,CAAC7X,MAAD,EAAS0iB,QAAT,EAAmB;QACxB,IAAI,CAACA,QAAL,EAAe;EACX,QAAA,MAAM,IAAI1nB,SAAJ,CAAc,8BAAd,CAAN,CAAA;EACH,OAHuB;;;QAKxB,MAAMsiB,WAAW,GAAGoG,mBAAmB,CAAC1jB,MAAD,CAAnB,KAAgC,IAApD,CALwB;;QAOxB,MAAM4jB,SAAS,GAAGnB,OAAO,CAACziB,MAAD,EAAS0iB,QAAT,EAAmBpF,WAAnB,CAAzB,CAPwB;;EASxB,MAAA,MAAMmG,IAAI,GAAGD,WAAW,CAACI,SAAD,EAAYtG,WAAZ,CAAxB,CAAA;EACA,MAAA,MAAMhyB,KAAK,GAAGm4B,IAAI,CAAC,GAAD,CAAlB,CAAA;EACA,MAAA,MAAMl4B,MAAM,GAAGk4B,IAAI,CAAC,GAAD,CAAnB,CAAA;;EACA,MAAA,IAAI,CAACn4B,KAAD,IAAU,CAACC,MAAf,EAAuB;EACnB,QAAA,MAAM,IAAIyP,SAAJ,CAAc,4BAAd,CAAN,CAAA;EACH,OAAA;;QACD,OAAO;UAAEzP,MAAF;EAAUD,QAAAA,KAAAA;SAAjB,CAAA;EACH,KAAA;;KApBL,CAAA;;;;;EC1EAoG,EAAAA,MAAM,CAACkB,cAAP,CAAqBe,OAArB,EAA+B,YAA/B,EAA6C;EAAExJ,IAAAA,KAAK,EAAE,IAAA;KAAtD,CAAA,CAAA;EACAwJ,EAAAA,OAAe,CAAAkwB,IAAf,GAAe,KAAK,CAApB,CAAA;;IACA,SAASC,iBAAT,CAA2B9jB,MAA3B,EAAmC;MAC/B,OAAO;QACHzU,MAAM,EAAE,IAAIyU,MAAM,CAAC+jB,UAAP,CAAkB,CAAlB,EAAqB,CAArB,CADT;QAEHz4B,KAAK,EAAE,IAAI0U,MAAM,CAAC+jB,UAAP,CAAkB,CAAlB,EAAqB,CAArB,CAAA;OAFf,CAAA;EAIH,GAAA;;IACD,SAASC,iBAAT,CAA2BhkB,MAA3B,EAAmC;MAC/B,OAAO;EACHzU,MAAAA,MAAM,EAAE,CAAA,IAAM,CAACyU,MAAM,CAAC,CAAD,CAAN,GAAY,GAAb,KAAqB,EAAtB,GAA6BA,MAAM,CAAC,CAAD,CAAN,IAAa,CAA1C,GAAgD,CAACA,MAAM,CAAC,CAAD,CAAN,GAAY,IAAb,KAAsB,CAA3E,CADL;EAEH1U,MAAAA,KAAK,EAAE,CAAA,IAAM,CAAC0U,MAAM,CAAC,CAAD,CAAN,GAAY,IAAb,KAAsB,CAAvB,GAA4BA,MAAM,CAAC,CAAD,CAAvC,CAAA;OAFX,CAAA;EAIH,GAAA;;IACD,SAASikB,cAAT,CAAwBjkB,MAAxB,EAAgC;EAChC;EACA;MACI,OAAO;EACHzU,MAAAA,MAAM,EAAEyU,MAAM,CAACkkB,WAAP,CAAmB,CAAnB,IAAwB,MAD7B;EAEH54B,MAAAA,KAAK,EAAE0U,MAAM,CAACkkB,WAAP,CAAmB,CAAnB,CAAwB,GAAA,MAAA;OAFnC,CAAA;EAIH,GAAA;;IACDvwB,OAAe,CAAAkwB,IAAf,GAAe;MACXjM,QAAQ,CAAC5X,MAAD,EAAS;EACb,MAAA,MAAMmkB,UAAU,GAAG,MAAWnkB,KAAAA,MAAM,CAACzW,QAAP,CAAgB,OAAhB,EAAyB,CAAzB,EAA4B,CAA5B,CAA9B,CAAA;EACA,MAAA,MAAM66B,UAAU,GAAG,MAAWpkB,KAAAA,MAAM,CAACzW,QAAP,CAAgB,OAAhB,EAAyB,CAAzB,EAA4B,EAA5B,CAA9B,CAAA;EACA,MAAA,MAAM86B,SAAS,GAAG,KAAUrkB,KAAAA,MAAM,CAACzW,QAAP,CAAgB,OAAhB,EAAyB,EAAzB,EAA6B,EAA7B,CAA5B,CAAA;EACA,MAAA,OAAQ46B,UAAU,IAAIC,UAAd,IAA4BC,SAApC,CAAA;OALO;;MAOXxM,SAAS,CAAC7X,MAAD,EAAS;QACd,MAAMskB,WAAW,GAAGtkB,MAAM,CAACzW,QAAP,CAAgB,OAAhB,EAAyB,EAAzB,EAA6B,EAA7B,CAApB,CAAA;QACAyW,MAAM,GAAGA,MAAM,CAAC1S,KAAP,CAAa,EAAb,EAAiB,EAAjB,CAAT,CAFc;;QAId,IAAIg3B,WAAW,KAAK,MAApB,EAA4B;EACxB,QAAA,MAAMC,cAAc,GAAGvkB,MAAM,CAAC,CAAD,CAA7B,CAAA;EACA,QAAA,MAAMwkB,UAAU,GAAG,CAACD,cAAc,GAAG,IAAlB,MAA4B,CAA/C,CAAA;EACA,QAAA,MAAME,QAAQ,GAAG,CAACF,cAAc,GAAG,IAAlB,MAA4B,CAA7C,CAAA;;UACA,IAAIC,UAAU,IAAIC,QAAlB,EAA4B;YACxB,OAAOX,iBAAiB,CAAC9jB,MAAD,CAAxB,CAAA;EACH,SAFD,MAGK;EACjB;EACgB,UAAA,MAAM,IAAIhF,SAAJ,CAAc,cAAd,CAAN,CAAA;EACH,SAAA;EACJ,OAfa;;;QAiBd,IAAIspB,WAAW,KAAK,MAAhB,IAA0BtkB,MAAM,CAAC,CAAD,CAAN,KAAc,IAA5C,EAAkD;UAC9C,OAAOikB,cAAc,CAACjkB,MAAD,CAArB,CAAA;EACH,OAnBa;;;QAqBd,MAAMoZ,SAAS,GAAGpZ,MAAM,CAACzW,QAAP,CAAgB,KAAhB,EAAuB,CAAvB,EAA0B,CAA1B,CAAlB,CAAA;;EACA,MAAA,IAAI+6B,WAAW,KAAK,MAAhB,IAA0BlL,SAAS,KAAK,QAA5C,EAAsD;UAClD,OAAO4K,iBAAiB,CAAChkB,MAAD,CAAxB,CAAA;EACH,OAAA;;EACD,MAAA,MAAM,IAAIhF,SAAJ,CAAc,cAAd,CAAN,CAAA;EACH,KAAA;;KAjCL,CAAA;;;;;ECtBAtJ,EAAAA,MAAM,CAACkB,cAAP,CAAqBe,OAArB,EAA+B,YAA/B,EAA6C;EAAExJ,IAAAA,KAAK,EAAE,IAAA;KAAtD,CAAA,CAAA;EACAwJ,EAAAA,OAAuB,CAAA+wB,YAAvB,GAAuB,KAAK,CAA5B;;IAkBA/wB,OAAuB,CAAA+wB,YAAvB,GAAuB;MACnBC,GAAG,EAAEC,GAAK,CAACjN,GADQ;MAEnBkN,GAAG,EAAEC,GAAK,CAAChM,GAFQ;MAGnBiM,GAAG,EAAEC,GAAK,CAAC/L,GAHQ;MAInBgM,GAAG,EAAEC,GAAK,CAAChM,GAJQ;MAKnBiM,IAAI,EAAEC,IAAM,CAAC/L,IALM;MAMnBgM,GAAG,EAAErM,GAAK,CAAChB,GANQ;MAOnBsN,GAAG,EAAEC,GAAK,CAAC3J,GAPQ;MAQnB4J,GAAG,EAAEC,GAAK,CAAC5J,GARQ;MASnB6J,GAAG,EAAEC,GAAK,CAAClI,GATQ;MAUnBmI,GAAG,EAAEC,GAAK,CAACzG,GAVQ;MAWnB0G,GAAG,EAAEC,GAAK,CAACzG,GAXQ;MAYnB0G,GAAG,EAAEC,GAAK,CAACtG,GAZQ;MAanBuG,GAAG,EAAEC,GAAK,CAACrF,GAbQ;MAcnBsF,GAAG,EAAEC,GAAK,CAACtF,GAdQ;MAenBuF,IAAI,EAAEC,IAAM,CAAC/D,IAfM;MAgBnBgE,IAAI,EAAEC,IAAM,CAAC5C,IAAAA;KAhBjB,CAAA;;;;;ECnBAnyB,EAAAA,MAAM,CAACkB,cAAP,CAAqBe,OAArB,EAA+B,YAA/B,EAA6C;EAAExJ,IAAAA,KAAK,EAAE,IAAA;KAAtD,CAAA,CAAA;EACAwJ,EAAAA,OAAmB,CAAA+yB,QAAnB,GAAmB,KAAK,CAAxB,CAAA;IAEA,MAAM7xB,IAAI,GAAGnD,MAAM,CAACmD,IAAP,CAAY8xB,KAAO,CAACjC,YAApB,CAAb;;EAEA,EAAA,MAAMkC,UAAU,GAAG;EACf,IAAA,IAAA,EAAM,KADS;EAEf,IAAA,IAAA,EAAM,KAFS;EAGf,IAAA,IAAA,EAAM,KAHS;EAIf,IAAA,IAAA,EAAM,KAJS;EAKf,IAAA,IAAA,EAAM,MALS;EAMf,IAAA,IAAA,EAAM,MANS;EAOf,IAAA,IAAA,EAAM,MAPS;EAQf,IAAA,IAAA,EAAM,MARS;EASf,IAAA,IAAA,EAAM,KATS;MAUf,IAAM,EAAA,KAAA;KAVV,CAAA;;IAYA,SAASF,QAAT,CAAkB1mB,MAAlB,EAA0B;EACtB,IAAA,MAAM6mB,IAAI,GAAG7mB,MAAM,CAAC,CAAD,CAAnB,CAAA;;MACA,IAAI6mB,IAAI,IAAID,UAAZ,EAAwB;EACpB,MAAA,MAAMt3B,IAAI,GAAGs3B,UAAU,CAACC,IAAD,CAAvB,CAAA;;EACA,MAAA,IAAIv3B,IAAI,IAAIq3B,KAAO,CAACjC,YAAR,CAAqBp1B,IAArB,CAAA,CAA2BsoB,QAA3B,CAAoC5X,MAApC,CAAZ,EAAyD;EACrD,QAAA,OAAO1Q,IAAP,CAAA;EACH,OAAA;EACJ,KAAA;;EACD,IAAA,MAAMw3B,MAAM,GAAI/0B,GAAD,IAAS40B,KAAO,CAACjC,YAAR,CAAqB3yB,GAArB,CAAA,CAA0B6lB,QAA1B,CAAmC5X,MAAnC,CAAxB,CAAA;;EACA,IAAA,OAAOnL,IAAI,CAAC0a,IAAL,CAAUuX,MAAV,CAAP,CAAA;EACH,GAAA;;IACDnzB,OAAA,CAAA+yB,QAAA,GAAmBA,QAAnB,CAAA;;;;;IC5BA,IAAIK,SAAS,GAAIltB,cAAAA,IAAQA,cAAAA,CAAKktB,SAAd,IAA4B,UAAU3W,OAAV,EAAmB4W,UAAnB,EAA+BC,CAA/B,EAAkCC,SAAlC,EAA6C;MACrF,SAASC,KAAT,CAAeh9B,KAAf,EAAsB;QAAE,OAAOA,KAAK,YAAY88B,CAAjB,GAAqB98B,KAArB,GAA6B,IAAI88B,CAAJ,CAAM,UAAUv2B,OAAV,EAAmB;UAAEA,OAAO,CAACvG,KAAD,CAAP,CAAA;EAAiB,OAA5C,CAApC,CAAA;EAAoF,KAAA;;EAC5G,IAAA,OAAO,KAAK88B,CAAC,KAAKA,CAAC,GAAGr3B,OAAT,CAAN,EAAyB,UAAUc,OAAV,EAAmBC,MAAnB,EAA2B;QACvD,SAASy2B,SAAT,CAAmBj9B,KAAnB,EAA0B;UAAE,IAAI;EAAEk9B,UAAAA,IAAI,CAACH,SAAS,CAACnW,IAAV,CAAe5mB,KAAf,CAAD,CAAJ,CAAA;WAAN,CAAqC,OAAOmU,CAAP,EAAU;YAAE3N,MAAM,CAAC2N,CAAD,CAAN,CAAA;EAAY,SAAA;EAAE,OAAA;;QAC3F,SAASgpB,QAAT,CAAkBn9B,KAAlB,EAAyB;UAAE,IAAI;YAAEk9B,IAAI,CAACH,SAAS,CAAC,OAAD,CAAT,CAAmB/8B,KAAnB,CAAD,CAAJ,CAAA;WAAN,CAAyC,OAAOmU,CAAP,EAAU;YAAE3N,MAAM,CAAC2N,CAAD,CAAN,CAAA;EAAY,SAAA;EAAE,OAAA;;QAC9F,SAAS+oB,IAAT,CAAcz9B,MAAd,EAAsB;UAAEA,MAAM,CAACqnB,IAAP,GAAcvgB,OAAO,CAAC9G,MAAM,CAACO,KAAR,CAArB,GAAsCg9B,KAAK,CAACv9B,MAAM,CAACO,KAAR,CAAL,CAAoByG,IAApB,CAAyBw2B,SAAzB,EAAoCE,QAApC,CAAtC,CAAA;EAAsF,OAAA;;EAC9GD,MAAAA,IAAI,CAAC,CAACH,SAAS,GAAGA,SAAS,CAACvpB,KAAV,CAAgByS,OAAhB,EAAyB4W,UAAU,IAAI,EAAvC,CAAb,EAAyDjW,IAAzD,EAAD,CAAJ,CAAA;EACH,KALM,CAAP,CAAA;KAFJ,CAAA;;EASArf,EAAAA,MAAM,CAACkB,cAAP,CAAqBe,OAArB,EAA+B,YAA/B,EAA6C;EAAExJ,IAAAA,KAAK,EAAE,IAAA;KAAtD,CAAA,CAAA;IACAwJ,OAAA,CAAA4zB,KAAA,GAAgB5zB,sBAAA,GAAyBA,OAAuB,CAAA6zB,YAAvB,GAAuB7zB,OAAA,CAAA8zB,SAAA,GAAoB9zB,OAAoB,CAAAglB,SAApB,GAAoB,KAAK,CAA7G;EAOA;;EACA,EAAA,MAAM+O,aAAa,GAAG,GAAM,GAAA,IAA5B;;EAEA,EAAA,MAAM9R,OAAK,GAAG,IAAI+R,KAAO,CAACpH,OAAZ,CAAoB;EAAExK,IAAAA,WAAW,EAAE,GAAf;EAAoBC,IAAAA,SAAS,EAAE,IAAA;EAA/B,GAApB,CAAd,CAAA;EACA,EAAA,MAAM4R,aAAa,GAAG;EAClBC,IAAAA,UAAU,EAAE,KADM;EAElBC,IAAAA,aAAa,EAAE,EAAA;KAFnB,CAAA;EAIA;EACA;EACA;EACA;EACA;EACA;EACA;;EACA,EAAA,SAASC,MAAT,CAAgB/nB,MAAhB,EAAwB0iB,QAAxB,EAAkC;EAClC;EACI,IAAA,MAAMpzB,IAAI,GAAG04B,UAAU,CAACtB,QAAX,CAAoB1mB,MAApB,CAAb,CAAA;;EACA,IAAA,IAAI,OAAO1Q,IAAP,KAAgB,WAApB,EAAiC;QAC7B,IAAIs4B,aAAa,CAACE,aAAd,CAA4Bh2B,OAA5B,CAAoCxC,IAApC,CAAA,GAA4C,CAAC,CAAjD,EAAoD;EAChD,QAAA,MAAM,IAAI0L,SAAJ,CAAc,sBAAA,GAAyB1L,IAAvC,CAAN,CAAA;EACH,OAH4B;;;EAK7B,MAAA,IAAIA,IAAI,IAAIq3B,KAAO,CAACjC,YAApB,EAAkC;EAC9B,QAAA,MAAM/Z,IAAI,GAAGgc,KAAO,CAACjC,YAAR,CAAqBp1B,IAArB,CAAA,CAA2BuoB,SAA3B,CAAqC7X,MAArC,EAA6C0iB,QAA7C,CAAb,CAAA;;UACA,IAAI/X,IAAI,KAAKxP,SAAb,EAAwB;YACpBwP,IAAI,CAACrb,IAAL,GAAYA,IAAZ,CAAA;EACA,UAAA,OAAOqb,IAAP,CAAA;EACH,SAAA;EACJ,OAAA;EACJ,KAf6B;;;MAiB9B,MAAM,IAAI3P,SAAJ,CAAc,yBAA4B1L,GAAAA,IAA5B,GAAmC,UAAnC,GAAgDozB,QAAhD,GAA2D,GAAzE,CAAN,CAAA;EACH,GAAA;EACD;EACA;EACA;EACA;EACA;;;IACA,SAASuF,iBAAT,CAA2BvF,QAA3B,EAAqC;MACjC,OAAOqE,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;EAChD,MAAA,MAAMmB,MAAM,GAAG,MAAMpF,sBAAE,CAACqF,QAAH,CAAYC,IAAZ,CAAiB1F,QAAjB,EAA2B,GAA3B,CAArB,CAAA;QACA,MAAM;EAAE/X,QAAAA,IAAAA;EAAF,OAAA,GAAW,MAAMud,MAAM,CAACG,IAAP,EAAvB,CAAA;;QACA,IAAI1d,IAAI,IAAI,CAAZ,EAAe;UACX,MAAMud,MAAM,CAAChzB,KAAP,EAAN,CAAA;EACA,QAAA,MAAM,IAAInK,KAAJ,CAAU,YAAV,CAAN,CAAA;EACH,OAAA;;QACD,MAAM63B,UAAU,GAAG74B,IAAI,CAACQ,GAAL,CAASogB,IAAT,EAAe+c,aAAf,CAAnB,CAAA;EACA,MAAA,MAAM1nB,MAAM,GAAG3P,MAAM,CAACsd,KAAP,CAAaiV,UAAb,CAAf,CAAA;QACA,MAAMsF,MAAM,CAACI,IAAP,CAAYtoB,MAAZ,EAAoB,CAApB,EAAuB4iB,UAAvB,EAAmC,CAAnC,CAAN,CAAA;QACA,MAAMsF,MAAM,CAAChzB,KAAP,EAAN,CAAA;EACA,MAAA,OAAO8K,MAAP,CAAA;EACH,KAZe,CAAhB,CAAA;EAaH,GAAA;EACD;EACA;EACA;EACA;EACA;EACA;;;IACA,SAASuoB,gBAAT,CAA0B7F,QAA1B,EAAoC;EACpC;MACI,MAAMhwB,UAAU,GAAGowB,sBAAE,CAACG,QAAH,CAAYP,QAAZ,EAAsB,GAAtB,CAAnB,CAAA;MACA,MAAM;EAAE/X,MAAAA,IAAAA;EAAF,KAAA,GAAWmY,sBAAE,CAAC0F,SAAH,CAAa91B,UAAb,CAAjB,CAAA;;MACA,IAAIiY,IAAI,IAAI,CAAZ,EAAe;QACXmY,sBAAE,CAACK,SAAH,CAAazwB,UAAb,CAAA,CAAA;EACA,MAAA,MAAM,IAAI3H,KAAJ,CAAU,YAAV,CAAN,CAAA;EACH,KAAA;;MACD,MAAM63B,UAAU,GAAG74B,IAAI,CAACQ,GAAL,CAASogB,IAAT,EAAe+c,aAAf,CAAnB,CAAA;EACA,IAAA,MAAM1nB,MAAM,GAAG3P,MAAM,CAACsd,KAAP,CAAaiV,UAAb,CAAf,CAAA;MACAE,sBAAE,CAACI,QAAH,CAAYxwB,UAAZ,EAAwBsN,MAAxB,EAAgC,CAAhC,EAAmC4iB,UAAnC,EAA+C,CAA/C,CAAA,CAAA;MACAE,sBAAE,CAACK,SAAH,CAAazwB,UAAb,CAAA,CAAA;EACA,IAAA,OAAOsN,MAAP,CAAA;EACH;;;EAEDtM,EAAAA,MAAiB,CAAAC,OAAjB,GAAiBA,OAAO,GAAGglB,SAA3B;;IACAhlB,OAAA,CAAA4sB,OAAA,GAAkB5H,SAAlB,CAAA;EACA;EACA;EACA;EACA;;EACA,EAAA,SAASA,SAAT,CAAmBlZ,KAAnB,EAA0B0Q,QAA1B,EAAoC;EACpC;EACI,IAAA,IAAI9f,MAAM,CAACkB,QAAP,CAAgBkO,KAAhB,CAAJ,EAA4B;QACxB,OAAOsoB,MAAM,CAACtoB,KAAD,CAAb,CAAA;EACH,KAJ+B;;;MAMhC,IAAI,OAAOA,KAAP,KAAiB,QAAjB,IAA6BmoB,aAAa,CAACC,UAA/C,EAA2D;EACvD,MAAA,MAAM,IAAI7sB,SAAJ,CAAc,8CAAd,CAAN,CAAA;EACH,KAR+B;;;EAUhC,IAAA,MAAM0nB,QAAQ,GAAG7d,wBAAI,CAACnU,OAAL,CAAa+O,KAAb,CAAjB,CAAA;;EACA,IAAA,IAAI,OAAO0Q,QAAP,KAAoB,UAAxB,EAAoC;EAChCyF,MAAAA,OAAK,CAACzoB,IAAN,CAAW,MAAM86B,iBAAiB,CAACvF,QAAD,CAAjB,CACZ9xB,IADY,CACNoP,MAAD,IAAYyoB,OAAO,CAACC,QAAR,CAAiBvY,QAAjB,EAA2B,IAA3B,EAAiC4X,MAAM,CAAC/nB,MAAD,EAAS0iB,QAAT,CAAvC,CADL,CAAA,CAEZrL,KAFY,CAENlH,QAFM,CAAjB,CAAA,CAAA;EAGH,KAJD,MAKK;EACD,MAAA,MAAMnQ,MAAM,GAAGuoB,gBAAgB,CAAC7F,QAAD,CAA/B,CAAA;EACA,MAAA,OAAOqF,MAAM,CAAC/nB,MAAD,EAAS0iB,QAAT,CAAb,CAAA;EACH,KAAA;EACJ,GAAA;;IACD/uB,OAAA,CAAAglB,SAAA,GAAoBA,SAApB,CAAA;;IACA,MAAM8O,SAAS,GAAIr9B,CAAD,IAAO;MAAEw9B,aAAa,CAACC,UAAd,GAA2Bz9B,CAA3B,CAAA;KAA3B,CAAA;;IACAuJ,OAAA,CAAA8zB,SAAA,GAAoBA,SAApB,CAAA;;IACA,MAAMD,YAAY,GAAID,KAAD,IAAW;MAAEK,aAAa,CAACE,aAAd,GAA8BP,KAA9B,CAAA;KAAlC,CAAA;;IACA5zB,OAAA,CAAA6zB,YAAA,GAAuBA,YAAvB,CAAA;;IACA,MAAMmB,cAAc,GAAI11B,CAAD,IAAO;MAAE2iB,OAAK,CAACG,WAAN,GAAoB9iB,CAApB,CAAA;KAAhC,CAAA;;IACAU,OAAA,CAAAg1B,cAAA,GAAyBA,cAAzB,CAAA;IACAh1B,OAAA,CAAA4zB,KAAA,GAAgB71B,MAAM,CAACmD,IAAP,CAAY8xB,KAAO,CAACjC,YAApB,CAAhB,CAAA;;;;EC/HO,MAAMkE,UAAU,GAAG,CAACzkB,GAAD,EAAMwG,IAAN,KACxBxG,GAAG,CAACxa,MAAJ,GAAaghB,IAAb,GACI,CAACxG,GAAG,CAAC7W,KAAJ,CAAU,CAAV,EAAaqd,IAAb,CAAD,EAAqB,GAAGie,UAAU,CAACzkB,GAAG,CAAC7W,KAAJ,CAAUqd,IAAV,CAAD,EAAkBA,IAAlB,CAAlC,CADJ,GAEI,CAACxG,GAAD,CAHC;;ECwBP,MAAMoU,YAAY,GAAmBxZ,IAAD,IAAS;IAC3C,MAAM;MAAEzT,KAAF;MAASC,MAAT;EAAiB+D,IAAAA,IAAAA;KAASu5B,GAAAA,MAAM,CAAC9pB,IAAD,CAAtC,CAAA;IAEA,OAAO;MACLzT,KADK;MAELC,MAFK;EAGL+D,IAAAA,IAAAA;KAHF,CAAA;EAKD,CARD,CAAA;EAUA;EACiD;;;EAEjD,MAAMw5B,gBAAgB,GAAG,IAAI30B,SAAJ,EAAzB,CAAA;;EAMA,MAAM40B,eAAe,GAAqB,MAAOC,GAAP,IAAc;EACtD,EAAA,MAAMC,WAAW,GAAGH,gBAAgB,CAACz0B,GAAjB,CAAqB20B,GAArB,CAApB,CAAA;;EAEA,EAAA,IAAI,OAAOC,WAAP,KAAuB,WAA3B,EAAwC;EACtC,IAAA,MAAMvV,QAAQ,GAAG,MAAMF,KAAK,CAACwV,GAAD,CAA5B,CAAA;EACA,IAAA,MAAMhpB,MAAM,GAAG,MAAM0T,QAAQ,CAAC1T,MAAT,EAArB,CAAA;EAEA8oB,IAAAA,gBAAgB,CAAC52B,GAAjB,CAAqB82B,GAArB,EAA0BhpB,MAA1B,CAAA,CAAA;EAEA,IAAA,OAAOA,MAAP,CAAA;EACD,GAAA;;EAED,EAAA,IAAI,CAAC3P,MAAM,CAACkB,QAAP,CAAgB03B,WAAhB,CAAL,EACE,MAAMl+B,KAAK,CAAC,CAAoBi+B,iBAAAA,EAAAA,GAAG,cAAxB,CAAX,CAAA;EAEF,EAAA,OAAOC,WAAP,CAAA;EACD,CAhBD,CAAA;;EA8BA,MAAMC,SAAS,GAAe,MAAOC,SAAP,IAAoB;EAChD,EAAA,IAAI94B,MAAM,CAACkB,QAAP,CAAgB43B,SAAhB,CAAJ,EAAgC;EAC9B,IAAA,MAAMxQ,SAAS,GAAGJ,YAAY,CAAC4Q,SAAD,CAA9B,CAAA;MAEA,OAAO;EACLpqB,MAAAA,IAAI,EAAEoqB,SADD;QAELC,GAAG,EAAA,QAAA,CAAA;EACDJ,QAAAA,GAAG,EAAE,IAAA;EADJ,OAAA,EAEErQ,SAFF,CAAA;OAFL,CAAA;EAOD,GAAA;;EAED,EAAA,IAAIwQ,SAAS,CAACE,UAAV,CAAqB,MAArB,CAAJ,EAAkC;EAChC,IAAA,MAAMrpB,MAAM,GAAG,MAAM+oB,eAAe,CAACI,SAAD,CAApC,CAAA;EACA,IAAA,MAAMxQ,SAAS,GAAGJ,YAAY,CAACvY,MAAD,CAA9B,CAAA;MAEA,OAAO;EACLjB,MAAAA,IAAI,EAAEiB,MADD;QAELopB,GAAG,EAAA,QAAA,CAAA;EACDJ,QAAAA,GAAG,EAAEG,SAAAA;EADJ,OAAA,EAEExQ,SAFF,CAAA;OAFL,CAAA;EAOD,GAAA;;EAED,EAAA,IAAI,CAACwQ,SAAS,CAACE,UAAV,CAAqB,GAArB,CAAL,EACE,MAAM,IAAIt+B,KAAJ,EACqBo+B,sBAAAA,EAAAA,SAAS,oEAD9B,CAAN,CAAA;IAIF,MAAMpqB,IAAI,GAAG8F,wBAAI,CAAC5W,IAAL,CAAU,WAAV,EAAuBk7B,SAAvB,CAAb,CAAA;EACA,EAAA,MAAMxQ,SAAS,GAAGJ,YAAY,CAACxZ,IAAD,CAA9B,CAAA;IAEA,OAAO;MACLA,IADK;MAELqqB,GAAG,EAAA,QAAA,CAAA;EACDJ,MAAAA,GAAG,EAAEG,SAAAA;EADJ,KAAA,EAEExQ,SAFF,CAAA;KAFL,CAAA;EAOD,CAzCD,CAAA;;EAmEA,MAAM2Q,aAAa,GAAmB,OAAON,GAAP,EAAY50B,OAAO,GAAG;EAAEuW,EAAAA,IAAI,EAAE,CAAA;EAAR,CAAtB,KAAqC;IACzE,MAAM4e,OAAO,GAAG,CAAhB,CAAA;IACA,MAAMC,OAAO,GAAG,EAAhB,CAAA;EAEA,EAAA,MAAMC,WAAW,GAAGF,OAAO,IAAIn1B,OAAO,CAACuW,IAAnB,IAA2BvW,OAAO,CAACuW,IAAR,IAAgB6e,OAA/D,CAAA;EACA,EAAA,CAACC,WAAD,IACE76B,OAAO,CAACC,KAAR,CACE,CAAC,qCAAD,EAAwC06B,OAAxC,EAAiD,KAAjD,EAAwDC,OAAxD,CAAA,CAAiEv7B,IAAjE,CAAsE,GAAtE,CADF,CADF,CAAA;IAKA,MAAM0c,IAAI,GAAG8e,WAAW,GAAGr1B,OAAO,CAACuW,IAAX,GAAkB,CAA1C,CAAA;EAEA,EAAA,MAAM+e,QAAQ,GAAGC,yBAAK,CAACX,GAAD,CAAL,CAAWY,MAAX,CAAkBjf,IAAlB,EAAwBA,IAAxB,EAA8B;EAC7Ckf,IAAAA,GAAG,EAAE,QAAA;EADwC,GAA9B,CAAjB,CAAA;IAIA,MAAMC,qBAAqB,GAAGJ,QAAQ,CACnCv6B,KAD2B,EAE3B46B,CAAAA,SAF2B,EAG3BC,CAAAA,QAH2B,CAGlB;EAAEC,IAAAA,UAAU,EAAE,GAAd;EAAmBC,IAAAA,UAAU,EAAE,CAAA;EAA/B,GAHkB,CAI3BC,CAAAA,WAJ2B,EAK3BC,CAAAA,QAL2B,CAKlB;EAAEC,IAAAA,iBAAiB,EAAE,IAAA;EAArB,GALkB,CAA9B,CAAA;IAOA,MAAMC,uBAAuB,GAAGZ,QAAQ,CACrCv6B,KAD6B,EAE7BygB,CAAAA,GAF6B,EAG7B2a,CAAAA,WAH6B,EAI7BH,CAAAA,QAJ6B,CAIpB;EAAEC,IAAAA,iBAAiB,EAAE,IAAA;EAArB,GAJoB,CAAhC,CAAA;IAMA,MAAMG,qBAAqB,GAAGd,QAAQ,CACnCv6B,KAD2B,EAE3BygB,CAAAA,GAF2B,EAG3Bwa,CAAAA,QAH2B,CAGlB;EAAEC,IAAAA,iBAAiB,EAAE,IAAA;EAArB,GAHkB,CAA9B,CAAA;IAKA,OAAOz6B,OAAO,CAAC66B,GAAR,CAAY,CACjBX,qBADiB,EAEjBQ,uBAFiB,EAGjBE,qBAHiB,CAAZ,CAMJ55B,CAAAA,IANI,CAME4f,MAAD,IACJA,MAAM,CAAC9iB,GAAP,CAAYvD,KAAD,IAAU;MACnB,MAAM;QAAE6D,QAAF;EAAY1C,MAAAA,KAAAA;OAAUnB,GAAAA,KAAK,CAACd,IAAlC,CAAA;MAEA,MAAMqhC,SAAS,GAAG,EAAGhgB,CAAAA,MAAH,CAAU,GAAGvgB,KAAK,CAACf,IAAnB,CAAlB,CAAA;EACA,IAAA,MAAMiC,MAAM,GAAGu9B,UAAU,CAAC8B,SAAD,EAAY18B,QAAZ,CAAzB,CAAA;EACA,IAAA,MAAMK,IAAI,GAAGu6B,UAAU,CAACv9B,MAAD,EAASC,KAAT,CAAvB,CAAA;EAEA,IAAA,OAAA,QAAA,CAAA,EAAA,EACKnB,KADL,EAAA;QAEEugC,SAFF;EAGEr8B,MAAAA,IAAAA;EAHF,KAAA,CAAA,CAAA;EAKD,GAZD,CAPG,CAAA,CAqBJuC,IArBI,CAqBE4f,MAAD,KAAa;EACjBma,IAAAA,kBAAkB,EAAEna,MAAM,CAAC,CAAD,CADT;EAEjBoa,IAAAA,oBAAoB,EAAEpa,MAAM,CAAC,CAAD,CAFX;EAGjBqa,IAAAA,eAAe,EAAEra,MAAM,CAAC,CAAD,CAHN;MAIjBsa,eAAe,EAAEta,MAAM,CAAC,CAAD,CAAA;EAJN,GAAb,CArBD,CAAA,CA2BJ6G,KA3BI,CA2BGxmB,GAAD,IAAQ;EACbjC,IAAAA,OAAO,CAACC,KAAR,CAAc,kBAAd,EAAkCgC,GAAlC,CAAA,CAAA;EACA,IAAA,MAAMA,GAAN,CAAA;EACD,GA9BI,CAAP,CAAA;EA+BD,CAjED,CAAA;;EAgFO,MAAMk6B,QAAQ,GAAc,OAAO/B,GAAP,EAAY50B,OAAZ,KAAuB;IACxD,MAAM;MAAE2K,IAAF;EAAQqqB,IAAAA,GAAAA;EAAR,GAAA,GAAgB,MAAMF,SAAS,CAACF,GAAD,CAArC,CAAA;IACA,MAAMgC,SAAS,GAAG,MAAM1B,aAAa,CAACvqB,IAAD,EAAO3K,OAAP,CAArC,CAAA;EAEA,EAAA,OAAA,QAAA,CAAA;EACEg1B,IAAAA,GAAAA;EADF,GAAA,EAEK4B,SAFL,CAAA,CAAA;EAID,CARM;;ECnNP,MAAMj9B,GAAG,GAAIC,QAAD,IAA+B,CAAA,IAAA,EAAAA,QAAQ,CAACV,KAAT,CAAe,CAAf,EAAkB,CAAlB,CAAA,CAAqBW,IAArB,CAA0B,GAA1B,CAA8B,CAAzE,CAAA,CAAA,CAAA;;EACA,MAAMg9B,cAAc,GAAIC,KAAD,IAAqBA,KAAK,GAAG,GAAT,GAAgB,GAAjB,GAAwB,GAAlE,CAAA;;EAuBO,MAAMC,MAAM,GAAY,CAAC;IAAE/hC,IAAF;IAAQC,IAAR;EAAcqhC,EAAAA,SAAAA;EAAd,CAAD,KAA8B;IAC3D,MAAM;MAAE18B,QAAF;MAAY1C,KAAZ;EAAmBC,IAAAA,MAAAA;EAAnB,GAAA,GAA8BlC,IAApC,CAAA;EAEA,EAAA,MAAMgC,MAAM,GAAGu9B,UAAU,CAAC8B,SAAD,EAAY18B,QAAZ,CAAV,CAAgCN,GAAhC,CAAqCvD,KAAD,IAAU;EAC3D,IAAA,MAAMihC,cAAc,GAAG;QACrB,CAAG,EAAA;EAAEC,QAAAA,IAAI,EAAEt9B,GAAG,CAAC5D,KAAD,CAAX;EAAoBmhC,QAAAA,WAAW,EAAE,CAAA;SADf;QAErB,CAAG,EAAA;EACDD,QAAAA,IAAI,EAAEt9B,GAAG,CAAC5D,KAAD,CADR;EAEDmhC,QAAAA,WAAW,EAAEL,cAAc,CAAC9gC,KAAK,CAAC,CAAD,CAAN,CAAA;EAF1B,OAAA;OAFL,CAAA;;EAQA,IAAA,IAAI,CAACihC,cAAc,CAAClU,cAAf,CAA8BlpB,QAA9B,CAAL,EAA8C;EAC5C,MAAA,MAAM,IAAIjD,KAAJ,EACWiD,YAAAA,EAAAA,QAAQ,sCADnB,CAAN,CAAA;EAGD,KAAA;;MAED,OAAOo9B,cAAc,CAACp9B,QAAD,CAArB,CAAA;EACD,GAhBc,CAAf,CAAA;EAkBA,EAAA,MAAMu9B,UAAU,GAAG3C,UAAU,CAACv9B,MAAD,EAASC,KAAT,CAAV,CAA0BoC,GAA1B,CAA8B,CAACa,GAAD,EAAMzC,CAAN,KAC/CyC,GAAG,CAACb,GAAJ,CAAQ,CAAC89B,GAAD,EAAM3/B,CAAN,KAAsB,CAC5B,MAD4B,EAAA,QAAA,CAAA,EAAA,EAGvB2/B,GAHuB,EAAA;EAI1BlgC,IAAAA,KAAK,EAAE,CAJmB;EAK1BC,IAAAA,MAAM,EAAE,CALkB;MAM1BM,CAN0B;EAO1BC,IAAAA,CAAAA;EAP0B,GAAA,CAAA,CAA9B,CADiB,CAAnB,CAAA;;EAaA,EAAA,IAAIy/B,UAAU,CAAC5hC,MAAX,KAAsB4B,MAA1B,EAAkC;MAChCqD,OAAO,CAACC,KAAR,CACE,gGADF,CAAA,CAAA;EAGD,GAAA;;EAED,EAAA,MAAM48B,KAAK,GAAa,EAAA,CAAG/gB,MAAH,CAAU,GAAG6gB,UAAb,CAAxB,CAAA;IAEA,OAAO,CACL,KADK,EAEL;EACEG,IAAAA,KAAK,EAAE,4BADT;EAEEpgC,IAAAA,KAAK,EAAE,MAFT;EAGEC,IAAAA,MAAM,EAAE,MAHV;EAIEogC,IAAAA,cAAc,EAAE,YAJlB;EAKEC,IAAAA,mBAAmB,EAAE,MALvB;EAMEC,IAAAA,OAAO,EAAE,CAAA,IAAA,EAAOvgC,KAAK,CAAA,CAAA,EAAIC,MAAQ,CANnC,CAAA;EAOEugC,IAAAA,KAAK,EAAE;EACLC,MAAAA,QAAQ,EAAE,UADL;EAELC,MAAAA,GAAG,EAAE,KAFA;EAGLC,MAAAA,IAAI,EAAE,KAHD;EAILC,MAAAA,eAAe,EAAE,UAJZ;EAKLC,MAAAA,SAAS,EAAE,uBALN;EAMLC,MAAAA,KAAK,EAAE,CANF;EAOLC,MAAAA,MAAM,EAAE,CAAA;EAPH,KAAA;KATJ,EAmBLZ,KAnBK,CAAP,CAAA;EAqBD,CA/DM;;QCNMa,eAAe,GAAqB,OAAOtD,GAAP,EAAY50B,OAAZ,KAAuB;IACtE,MAAM;MACJg1B,GADI;MAEJuB,kBAFI;MAGJC,oBAHI;MAIJC,eAJI;EAKJC,IAAAA,eAAAA;EALI,GAAA,GAMF,MAAMC,QAAQ,CAAC/B,GAAD,EAAM50B,OAAN,CANlB,CAAA;EAQA,EAAA,OAAOxE,OAAO,CAAC66B,GAAR,CAAY,CACjBthC,SAAS,CAACwhC,kBAAD,CADQ,EAEjB98B,WAAW,CAAC+8B,oBAAD,CAFM,EAGjBx8B,MAAM,CAACy8B,eAAD,CAHW,EAIjBM,MAAM,CAACL,eAAD,CAJW,CAAZ,CAAA,CAKJl6B,IALI,CAKE4f,MAAD,IAAW;MACjB,MAAM,CAAC+b,MAAD,EAASC,QAAT,EAAmBC,GAAnB,EAAwBrG,GAAxB,CAAA,GAA+B5V,MAArC,CAAA;MAEA,OAAO;QACL4Y,GADK;QAELqD,GAFK;QAGLF,MAHK;QAILC,QAJK;EAKLpG,MAAAA,GAAAA;OALF,CAAA;EAOD,GAfM,CAAP,CAAA;EAgBD;;QCpDYsG,mBAAmB,GAAG,CAAC,MAAD,EAAS,KAAT;;;;;;;;;"}