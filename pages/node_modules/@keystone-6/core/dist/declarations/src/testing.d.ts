/// <reference types="node" />
/// <reference types="express-serve-static-core" />
import { Server } from 'http';
import express from 'express';
import { Test } from 'supertest';
import type { KeystoneConfig, KeystoneContext } from './types';
export declare type GraphQLRequest = (arg: {
    query: string;
    variables?: Record<string, any>;
    operationName?: string;
}) => Test;
export declare type TestArgs<Context extends KeystoneContext = KeystoneContext> = {
    context: Context;
    graphQLRequest: GraphQLRequest;
    app: express.Express;
    server: Server;
};
export declare type TestEnv<Context extends KeystoneContext = KeystoneContext> = {
    connect: () => Promise<void>;
    disconnect: () => Promise<void>;
    testArgs: TestArgs<Context>;
};
export declare function setupTestEnv<Context extends KeystoneContext>({ config: _config, }: {
    config: KeystoneConfig;
}): Promise<TestEnv<Context>>;
export declare function setupTestRunner<Context extends KeystoneContext>({ config, }: {
    config: KeystoneConfig;
}): (testFn: (testArgs: {
    context: Context;
    graphQLRequest: GraphQLRequest;
    app: express.Express;
    server: Server;
}) => Promise<void>) => () => Promise<void>;
